/* version 2 */
/*! For license information please see media-stream-library.min.js.LICENSE.txt */
!function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.mediaStreamLibrary = t() : e.mediaStreamLibrary = t()
}(self, (function() {
    return ( () => {
        var e = {
            9742: (e, t) => {
                "use strict";
                t.byteLength = function(e) {
                    var t = c(e)
                      , r = t[0]
                      , n = t[1];
                    return 3 * (r + n) / 4 - n
                }
                ,
                t.toByteArray = function(e) {
                    var t, r, o = c(e), s = o[0], a = o[1], u = new i(function(e, t, r) {
                        return 3 * (t + r) / 4 - r
                    }(0, s, a)), l = 0, h = a > 0 ? s - 4 : s;
                    for (r = 0; r < h; r += 4)
                        t = n[e.charCodeAt(r)] << 18 | n[e.charCodeAt(r + 1)] << 12 | n[e.charCodeAt(r + 2)] << 6 | n[e.charCodeAt(r + 3)],
                        u[l++] = t >> 16 & 255,
                        u[l++] = t >> 8 & 255,
                        u[l++] = 255 & t;
                    2 === a && (t = n[e.charCodeAt(r)] << 2 | n[e.charCodeAt(r + 1)] >> 4,
                    u[l++] = 255 & t);
                    1 === a && (t = n[e.charCodeAt(r)] << 10 | n[e.charCodeAt(r + 1)] << 4 | n[e.charCodeAt(r + 2)] >> 2,
                    u[l++] = t >> 8 & 255,
                    u[l++] = 255 & t);
                    return u
                }
                ,
                t.fromByteArray = function(e) {
                    for (var t, n = e.length, i = n % 3, o = [], s = 16383, a = 0, c = n - i; a < c; a += s)
                        o.push(u(e, a, a + s > c ? c : a + s));
                    1 === i ? (t = e[n - 1],
                    o.push(r[t >> 2] + r[t << 4 & 63] + "==")) : 2 === i && (t = (e[n - 2] << 8) + e[n - 1],
                    o.push(r[t >> 10] + r[t >> 4 & 63] + r[t << 2 & 63] + "="));
                    return o.join("")
                }
                ;
                for (var r = [], n = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, a = o.length; s < a; ++s)
                    r[s] = o[s],
                    n[o.charCodeAt(s)] = s;
                function c(e) {
                    var t = e.length;
                    if (t % 4 > 0)
                        throw new Error("Invalid string. Length must be a multiple of 4");
                    var r = e.indexOf("=");
                    return -1 === r && (r = t),
                    [r, r === t ? 0 : 4 - r % 4]
                }
                function u(e, t, n) {
                    for (var i, o, s = [], a = t; a < n; a += 3)
                        i = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]),
                        s.push(r[(o = i) >> 18 & 63] + r[o >> 12 & 63] + r[o >> 6 & 63] + r[63 & o]);
                    return s.join("")
                }
                n["-".charCodeAt(0)] = 62,
                n["_".charCodeAt(0)] = 63
            }
            ,
            8764: (e, t, r) => {
                "use strict";
                const n = r(9742)
                  , i = r(645)
                  , o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                t.Buffer = c,
                t.SlowBuffer = function(e) {
                    +e != e && (e = 0);
                    return c.alloc(+e)
                }
                ,
                t.INSPECT_MAX_BYTES = 50;
                const s = 2147483647;
                function a(e) {
                    if (e > s)
                        throw new RangeError('The value "' + e + '" is invalid for option "size"');
                    const t = new Uint8Array(e);
                    return Object.setPrototypeOf(t, c.prototype),
                    t
                }
                function c(e, t, r) {
                    if ("number" == typeof e) {
                        if ("string" == typeof t)
                            throw new TypeError('The "string" argument must be of type string. Received type number');
                        return h(e)
                    }
                    return u(e, t, r)
                }
                function u(e, t, r) {
                    if ("string" == typeof e)
                        return function(e, t) {
                            "string" == typeof t && "" !== t || (t = "utf8");
                            if (!c.isEncoding(t))
                                throw new TypeError("Unknown encoding: " + t);
                            const r = 0 | m(e, t);
                            let n = a(r);
                            const i = n.write(e, t);
                            i !== r && (n = n.slice(0, i));
                            return n
                        }(e, t);
                    if (ArrayBuffer.isView(e))
                        return function(e) {
                            if (J(e, Uint8Array)) {
                                const t = new Uint8Array(e);
                                return f(t.buffer, t.byteOffset, t.byteLength)
                            }
                            return d(e)
                        }(e);
                    if (null == e)
                        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                    if (J(e, ArrayBuffer) || e && J(e.buffer, ArrayBuffer))
                        return f(e, t, r);
                    if ("undefined" != typeof SharedArrayBuffer && (J(e, SharedArrayBuffer) || e && J(e.buffer, SharedArrayBuffer)))
                        return f(e, t, r);
                    if ("number" == typeof e)
                        throw new TypeError('The "value" argument must not be of type number. Received type number');
                    const n = e.valueOf && e.valueOf();
                    if (null != n && n !== e)
                        return c.from(n, t, r);
                    const i = function(e) {
                        if (c.isBuffer(e)) {
                            const t = 0 | p(e.length)
                              , r = a(t);
                            return 0 === r.length || e.copy(r, 0, 0, t),
                            r
                        }
                        if (void 0 !== e.length)
                            return "number" != typeof e.length || K(e.length) ? a(0) : d(e);
                        if ("Buffer" === e.type && Array.isArray(e.data))
                            return d(e.data)
                    }(e);
                    if (i)
                        return i;
                    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive])
                        return c.from(e[Symbol.toPrimitive]("string"), t, r);
                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
                }
                function l(e) {
                    if ("number" != typeof e)
                        throw new TypeError('"size" argument must be of type number');
                    if (e < 0)
                        throw new RangeError('The value "' + e + '" is invalid for option "size"')
                }
                function h(e) {
                    return l(e),
                    a(e < 0 ? 0 : 0 | p(e))
                }
                function d(e) {
                    const t = e.length < 0 ? 0 : 0 | p(e.length)
                      , r = a(t);
                    for (let n = 0; n < t; n += 1)
                        r[n] = 255 & e[n];
                    return r
                }
                function f(e, t, r) {
                    if (t < 0 || e.byteLength < t)
                        throw new RangeError('"offset" is outside of buffer bounds');
                    if (e.byteLength < t + (r || 0))
                        throw new RangeError('"length" is outside of buffer bounds');
                    let n;
                    return n = void 0 === t && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e,t) : new Uint8Array(e,t,r),
                    Object.setPrototypeOf(n, c.prototype),
                    n
                }
                function p(e) {
                    if (e >= s)
                        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
                    return 0 | e
                }
                function m(e, t) {
                    if (c.isBuffer(e))
                        return e.length;
                    if (ArrayBuffer.isView(e) || J(e, ArrayBuffer))
                        return e.byteLength;
                    if ("string" != typeof e)
                        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                    const r = e.length
                      , n = arguments.length > 2 && !0 === arguments[2];
                    if (!n && 0 === r)
                        return 0;
                    let i = !1;
                    for (; ; )
                        switch (t) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return r;
                        case "utf8":
                        case "utf-8":
                            return V(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * r;
                        case "hex":
                            return r >>> 1;
                        case "base64":
                            return G(e).length;
                        default:
                            if (i)
                                return n ? -1 : V(e).length;
                            t = ("" + t).toLowerCase(),
                            i = !0
                        }
                }
                function g(e, t, r) {
                    let n = !1;
                    if ((void 0 === t || t < 0) && (t = 0),
                    t > this.length)
                        return "";
                    if ((void 0 === r || r > this.length) && (r = this.length),
                    r <= 0)
                        return "";
                    if ((r >>>= 0) <= (t >>>= 0))
                        return "";
                    for (e || (e = "utf8"); ; )
                        switch (e) {
                        case "hex":
                            return I(this, t, r);
                        case "utf8":
                        case "utf-8":
                            return R(this, t, r);
                        case "ascii":
                            return O(this, t, r);
                        case "latin1":
                        case "binary":
                            return P(this, t, r);
                        case "base64":
                            return x(this, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return k(this, t, r);
                        default:
                            if (n)
                                throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(),
                            n = !0
                        }
                }
                function y(e, t, r) {
                    const n = e[t];
                    e[t] = e[r],
                    e[r] = n
                }
                function b(e, t, r, n, i) {
                    if (0 === e.length)
                        return -1;
                    if ("string" == typeof r ? (n = r,
                    r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648),
                    K(r = +r) && (r = i ? 0 : e.length - 1),
                    r < 0 && (r = e.length + r),
                    r >= e.length) {
                        if (i)
                            return -1;
                        r = e.length - 1
                    } else if (r < 0) {
                        if (!i)
                            return -1;
                        r = 0
                    }
                    if ("string" == typeof t && (t = c.from(t, n)),
                    c.isBuffer(t))
                        return 0 === t.length ? -1 : v(e, t, r, n, i);
                    if ("number" == typeof t)
                        return t &= 255,
                        "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : v(e, [t], r, n, i);
                    throw new TypeError("val must be string, number or Buffer")
                }
                function v(e, t, r, n, i) {
                    let o, s = 1, a = e.length, c = t.length;
                    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (e.length < 2 || t.length < 2)
                            return -1;
                        s = 2,
                        a /= 2,
                        c /= 2,
                        r /= 2
                    }
                    function u(e, t) {
                        return 1 === s ? e[t] : e.readUInt16BE(t * s)
                    }
                    if (i) {
                        let n = -1;
                        for (o = r; o < a; o++)
                            if (u(e, o) === u(t, -1 === n ? 0 : o - n)) {
                                if (-1 === n && (n = o),
                                o - n + 1 === c)
                                    return n * s
                            } else
                                -1 !== n && (o -= o - n),
                                n = -1
                    } else
                        for (r + c > a && (r = a - c),
                        o = r; o >= 0; o--) {
                            let r = !0;
                            for (let n = 0; n < c; n++)
                                if (u(e, o + n) !== u(t, n)) {
                                    r = !1;
                                    break
                                }
                            if (r)
                                return o
                        }
                    return -1
                }
                function w(e, t, r, n) {
                    r = Number(r) || 0;
                    const i = e.length - r;
                    n ? (n = Number(n)) > i && (n = i) : n = i;
                    const o = t.length;
                    let s;
                    for (n > o / 2 && (n = o / 2),
                    s = 0; s < n; ++s) {
                        const n = parseInt(t.substr(2 * s, 2), 16);
                        if (K(n))
                            return s;
                        e[r + s] = n
                    }
                    return s
                }
                function _(e, t, r, n) {
                    return Y(V(t, e.length - r), e, r, n)
                }
                function S(e, t, r, n) {
                    return Y(function(e) {
                        const t = [];
                        for (let r = 0; r < e.length; ++r)
                            t.push(255 & e.charCodeAt(r));
                        return t
                    }(t), e, r, n)
                }
                function E(e, t, r, n) {
                    return Y(G(t), e, r, n)
                }
                function T(e, t, r, n) {
                    return Y(function(e, t) {
                        let r, n, i;
                        const o = [];
                        for (let s = 0; s < e.length && !((t -= 2) < 0); ++s)
                            r = e.charCodeAt(s),
                            n = r >> 8,
                            i = r % 256,
                            o.push(i),
                            o.push(n);
                        return o
                    }(t, e.length - r), e, r, n)
                }
                function x(e, t, r) {
                    return 0 === t && r === e.length ? n.fromByteArray(e) : n.fromByteArray(e.slice(t, r))
                }
                function R(e, t, r) {
                    r = Math.min(e.length, r);
                    const n = [];
                    let i = t;
                    for (; i < r; ) {
                        const t = e[i];
                        let o = null
                          , s = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
                        if (i + s <= r) {
                            let r, n, a, c;
                            switch (s) {
                            case 1:
                                t < 128 && (o = t);
                                break;
                            case 2:
                                r = e[i + 1],
                                128 == (192 & r) && (c = (31 & t) << 6 | 63 & r,
                                c > 127 && (o = c));
                                break;
                            case 3:
                                r = e[i + 1],
                                n = e[i + 2],
                                128 == (192 & r) && 128 == (192 & n) && (c = (15 & t) << 12 | (63 & r) << 6 | 63 & n,
                                c > 2047 && (c < 55296 || c > 57343) && (o = c));
                                break;
                            case 4:
                                r = e[i + 1],
                                n = e[i + 2],
                                a = e[i + 3],
                                128 == (192 & r) && 128 == (192 & n) && 128 == (192 & a) && (c = (15 & t) << 18 | (63 & r) << 12 | (63 & n) << 6 | 63 & a,
                                c > 65535 && c < 1114112 && (o = c))
                            }
                        }
                        null === o ? (o = 65533,
                        s = 1) : o > 65535 && (o -= 65536,
                        n.push(o >>> 10 & 1023 | 55296),
                        o = 56320 | 1023 & o),
                        n.push(o),
                        i += s
                    }
                    return function(e) {
                        const t = e.length;
                        if (t <= C)
                            return String.fromCharCode.apply(String, e);
                        let r = ""
                          , n = 0;
                        for (; n < t; )
                            r += String.fromCharCode.apply(String, e.slice(n, n += C));
                        return r
                    }(n)
                }
                t.kMaxLength = s,
                c.TYPED_ARRAY_SUPPORT = function() {
                    try {
                        const e = new Uint8Array(1)
                          , t = {
                            foo: function() {
                                return 42
                            }
                        };
                        return Object.setPrototypeOf(t, Uint8Array.prototype),
                        Object.setPrototypeOf(e, t),
                        42 === e.foo()
                    } catch (e) {
                        return !1
                    }
                }(),
                c.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),
                Object.defineProperty(c.prototype, "parent", {
                    enumerable: !0,
                    get: function() {
                        if (c.isBuffer(this))
                            return this.buffer
                    }
                }),
                Object.defineProperty(c.prototype, "offset", {
                    enumerable: !0,
                    get: function() {
                        if (c.isBuffer(this))
                            return this.byteOffset
                    }
                }),
                c.poolSize = 8192,
                c.from = function(e, t, r) {
                    return u(e, t, r)
                }
                ,
                Object.setPrototypeOf(c.prototype, Uint8Array.prototype),
                Object.setPrototypeOf(c, Uint8Array),
                c.alloc = function(e, t, r) {
                    return function(e, t, r) {
                        return l(e),
                        e <= 0 ? a(e) : void 0 !== t ? "string" == typeof r ? a(e).fill(t, r) : a(e).fill(t) : a(e)
                    }(e, t, r)
                }
                ,
                c.allocUnsafe = function(e) {
                    return h(e)
                }
                ,
                c.allocUnsafeSlow = function(e) {
                    return h(e)
                }
                ,
                c.isBuffer = function(e) {
                    return null != e && !0 === e._isBuffer && e !== c.prototype
                }
                ,
                c.compare = function(e, t) {
                    if (J(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)),
                    J(t, Uint8Array) && (t = c.from(t, t.offset, t.byteLength)),
                    !c.isBuffer(e) || !c.isBuffer(t))
                        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                    if (e === t)
                        return 0;
                    let r = e.length
                      , n = t.length;
                    for (let i = 0, o = Math.min(r, n); i < o; ++i)
                        if (e[i] !== t[i]) {
                            r = e[i],
                            n = t[i];
                            break
                        }
                    return r < n ? -1 : n < r ? 1 : 0
                }
                ,
                c.isEncoding = function(e) {
                    switch (String(e).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;
                    default:
                        return !1
                    }
                }
                ,
                c.concat = function(e, t) {
                    if (!Array.isArray(e))
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === e.length)
                        return c.alloc(0);
                    let r;
                    if (void 0 === t)
                        for (t = 0,
                        r = 0; r < e.length; ++r)
                            t += e[r].length;
                    const n = c.allocUnsafe(t);
                    let i = 0;
                    for (r = 0; r < e.length; ++r) {
                        let t = e[r];
                        if (J(t, Uint8Array))
                            i + t.length > n.length ? (c.isBuffer(t) || (t = c.from(t)),
                            t.copy(n, i)) : Uint8Array.prototype.set.call(n, t, i);
                        else {
                            if (!c.isBuffer(t))
                                throw new TypeError('"list" argument must be an Array of Buffers');
                            t.copy(n, i)
                        }
                        i += t.length
                    }
                    return n
                }
                ,
                c.byteLength = m,
                c.prototype._isBuffer = !0,
                c.prototype.swap16 = function() {
                    const e = this.length;
                    if (e % 2 != 0)
                        throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (let t = 0; t < e; t += 2)
                        y(this, t, t + 1);
                    return this
                }
                ,
                c.prototype.swap32 = function() {
                    const e = this.length;
                    if (e % 4 != 0)
                        throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (let t = 0; t < e; t += 4)
                        y(this, t, t + 3),
                        y(this, t + 1, t + 2);
                    return this
                }
                ,
                c.prototype.swap64 = function() {
                    const e = this.length;
                    if (e % 8 != 0)
                        throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (let t = 0; t < e; t += 8)
                        y(this, t, t + 7),
                        y(this, t + 1, t + 6),
                        y(this, t + 2, t + 5),
                        y(this, t + 3, t + 4);
                    return this
                }
                ,
                c.prototype.toString = function() {
                    const e = this.length;
                    return 0 === e ? "" : 0 === arguments.length ? R(this, 0, e) : g.apply(this, arguments)
                }
                ,
                c.prototype.toLocaleString = c.prototype.toString,
                c.prototype.equals = function(e) {
                    if (!c.isBuffer(e))
                        throw new TypeError("Argument must be a Buffer");
                    return this === e || 0 === c.compare(this, e)
                }
                ,
                c.prototype.inspect = function() {
                    let e = "";
                    const r = t.INSPECT_MAX_BYTES;
                    return e = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(),
                    this.length > r && (e += " ... "),
                    "<Buffer " + e + ">"
                }
                ,
                o && (c.prototype[o] = c.prototype.inspect),
                c.prototype.compare = function(e, t, r, n, i) {
                    if (J(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)),
                    !c.isBuffer(e))
                        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                    if (void 0 === t && (t = 0),
                    void 0 === r && (r = e ? e.length : 0),
                    void 0 === n && (n = 0),
                    void 0 === i && (i = this.length),
                    t < 0 || r > e.length || n < 0 || i > this.length)
                        throw new RangeError("out of range index");
                    if (n >= i && t >= r)
                        return 0;
                    if (n >= i)
                        return -1;
                    if (t >= r)
                        return 1;
                    if (this === e)
                        return 0;
                    let o = (i >>>= 0) - (n >>>= 0)
                      , s = (r >>>= 0) - (t >>>= 0);
                    const a = Math.min(o, s)
                      , u = this.slice(n, i)
                      , l = e.slice(t, r);
                    for (let e = 0; e < a; ++e)
                        if (u[e] !== l[e]) {
                            o = u[e],
                            s = l[e];
                            break
                        }
                    return o < s ? -1 : s < o ? 1 : 0
                }
                ,
                c.prototype.includes = function(e, t, r) {
                    return -1 !== this.indexOf(e, t, r)
                }
                ,
                c.prototype.indexOf = function(e, t, r) {
                    return b(this, e, t, r, !0)
                }
                ,
                c.prototype.lastIndexOf = function(e, t, r) {
                    return b(this, e, t, r, !1)
                }
                ,
                c.prototype.write = function(e, t, r, n) {
                    if (void 0 === t)
                        n = "utf8",
                        r = this.length,
                        t = 0;
                    else if (void 0 === r && "string" == typeof t)
                        n = t,
                        r = this.length,
                        t = 0;
                    else {
                        if (!isFinite(t))
                            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        t >>>= 0,
                        isFinite(r) ? (r >>>= 0,
                        void 0 === n && (n = "utf8")) : (n = r,
                        r = void 0)
                    }
                    const i = this.length - t;
                    if ((void 0 === r || r > i) && (r = i),
                    e.length > 0 && (r < 0 || t < 0) || t > this.length)
                        throw new RangeError("Attempt to write outside buffer bounds");
                    n || (n = "utf8");
                    let o = !1;
                    for (; ; )
                        switch (n) {
                        case "hex":
                            return w(this, e, t, r);
                        case "utf8":
                        case "utf-8":
                            return _(this, e, t, r);
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return S(this, e, t, r);
                        case "base64":
                            return E(this, e, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return T(this, e, t, r);
                        default:
                            if (o)
                                throw new TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(),
                            o = !0
                        }
                }
                ,
                c.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    }
                }
                ;
                const C = 4096;
                function O(e, t, r) {
                    let n = "";
                    r = Math.min(e.length, r);
                    for (let i = t; i < r; ++i)
                        n += String.fromCharCode(127 & e[i]);
                    return n
                }
                function P(e, t, r) {
                    let n = "";
                    r = Math.min(e.length, r);
                    for (let i = t; i < r; ++i)
                        n += String.fromCharCode(e[i]);
                    return n
                }
                function I(e, t, r) {
                    const n = e.length;
                    (!t || t < 0) && (t = 0),
                    (!r || r < 0 || r > n) && (r = n);
                    let i = "";
                    for (let n = t; n < r; ++n)
                        i += X[e[n]];
                    return i
                }
                function k(e, t, r) {
                    const n = e.slice(t, r);
                    let i = "";
                    for (let e = 0; e < n.length - 1; e += 2)
                        i += String.fromCharCode(n[e] + 256 * n[e + 1]);
                    return i
                }
                function B(e, t, r) {
                    if (e % 1 != 0 || e < 0)
                        throw new RangeError("offset is not uint");
                    if (e + t > r)
                        throw new RangeError("Trying to access beyond buffer length")
                }
                function L(e, t, r, n, i, o) {
                    if (!c.isBuffer(e))
                        throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (t > i || t < o)
                        throw new RangeError('"value" argument is out of bounds');
                    if (r + n > e.length)
                        throw new RangeError("Index out of range")
                }
                function A(e, t, r, n, i) {
                    H(t, n, i, e, r, 7);
                    let o = Number(t & BigInt(4294967295));
                    e[r++] = o,
                    o >>= 8,
                    e[r++] = o,
                    o >>= 8,
                    e[r++] = o,
                    o >>= 8,
                    e[r++] = o;
                    let s = Number(t >> BigInt(32) & BigInt(4294967295));
                    return e[r++] = s,
                    s >>= 8,
                    e[r++] = s,
                    s >>= 8,
                    e[r++] = s,
                    s >>= 8,
                    e[r++] = s,
                    r
                }
                function U(e, t, r, n, i) {
                    H(t, n, i, e, r, 7);
                    let o = Number(t & BigInt(4294967295));
                    e[r + 7] = o,
                    o >>= 8,
                    e[r + 6] = o,
                    o >>= 8,
                    e[r + 5] = o,
                    o >>= 8,
                    e[r + 4] = o;
                    let s = Number(t >> BigInt(32) & BigInt(4294967295));
                    return e[r + 3] = s,
                    s >>= 8,
                    e[r + 2] = s,
                    s >>= 8,
                    e[r + 1] = s,
                    s >>= 8,
                    e[r] = s,
                    r + 8
                }
                function j(e, t, r, n, i, o) {
                    if (r + n > e.length)
                        throw new RangeError("Index out of range");
                    if (r < 0)
                        throw new RangeError("Index out of range")
                }
                function M(e, t, r, n, o) {
                    return t = +t,
                    r >>>= 0,
                    o || j(e, 0, r, 4),
                    i.write(e, t, r, n, 23, 4),
                    r + 4
                }
                function D(e, t, r, n, o) {
                    return t = +t,
                    r >>>= 0,
                    o || j(e, 0, r, 8),
                    i.write(e, t, r, n, 52, 8),
                    r + 8
                }
                c.prototype.slice = function(e, t) {
                    const r = this.length;
                    (e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
                    (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
                    t < e && (t = e);
                    const n = this.subarray(e, t);
                    return Object.setPrototypeOf(n, c.prototype),
                    n
                }
                ,
                c.prototype.readUintLE = c.prototype.readUIntLE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || B(e, t, this.length);
                    let n = this[e]
                      , i = 1
                      , o = 0;
                    for (; ++o < t && (i *= 256); )
                        n += this[e + o] * i;
                    return n
                }
                ,
                c.prototype.readUintBE = c.prototype.readUIntBE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || B(e, t, this.length);
                    let n = this[e + --t]
                      , i = 1;
                    for (; t > 0 && (i *= 256); )
                        n += this[e + --t] * i;
                    return n
                }
                ,
                c.prototype.readUint8 = c.prototype.readUInt8 = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 1, this.length),
                    this[e]
                }
                ,
                c.prototype.readUint16LE = c.prototype.readUInt16LE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 2, this.length),
                    this[e] | this[e + 1] << 8
                }
                ,
                c.prototype.readUint16BE = c.prototype.readUInt16BE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 2, this.length),
                    this[e] << 8 | this[e + 1]
                }
                ,
                c.prototype.readUint32LE = c.prototype.readUInt32LE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 4, this.length),
                    (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
                }
                ,
                c.prototype.readUint32BE = c.prototype.readUInt32BE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 4, this.length),
                    16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
                }
                ,
                c.prototype.readBigUInt64LE = Z((function(e) {
                    $(e >>>= 0, "offset");
                    const t = this[e]
                      , r = this[e + 7];
                    void 0 !== t && void 0 !== r || W(e, this.length - 8);
                    const n = t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24
                      , i = this[++e] + 256 * this[++e] + 65536 * this[++e] + r * 2 ** 24;
                    return BigInt(n) + (BigInt(i) << BigInt(32))
                }
                )),
                c.prototype.readBigUInt64BE = Z((function(e) {
                    $(e >>>= 0, "offset");
                    const t = this[e]
                      , r = this[e + 7];
                    void 0 !== t && void 0 !== r || W(e, this.length - 8);
                    const n = t * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + this[++e]
                      , i = this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r;
                    return (BigInt(n) << BigInt(32)) + BigInt(i)
                }
                )),
                c.prototype.readIntLE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || B(e, t, this.length);
                    let n = this[e]
                      , i = 1
                      , o = 0;
                    for (; ++o < t && (i *= 256); )
                        n += this[e + o] * i;
                    return i *= 128,
                    n >= i && (n -= Math.pow(2, 8 * t)),
                    n
                }
                ,
                c.prototype.readIntBE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || B(e, t, this.length);
                    let n = t
                      , i = 1
                      , o = this[e + --n];
                    for (; n > 0 && (i *= 256); )
                        o += this[e + --n] * i;
                    return i *= 128,
                    o >= i && (o -= Math.pow(2, 8 * t)),
                    o
                }
                ,
                c.prototype.readInt8 = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 1, this.length),
                    128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
                }
                ,
                c.prototype.readInt16LE = function(e, t) {
                    e >>>= 0,
                    t || B(e, 2, this.length);
                    const r = this[e] | this[e + 1] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }
                ,
                c.prototype.readInt16BE = function(e, t) {
                    e >>>= 0,
                    t || B(e, 2, this.length);
                    const r = this[e + 1] | this[e] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }
                ,
                c.prototype.readInt32LE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 4, this.length),
                    this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
                }
                ,
                c.prototype.readInt32BE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 4, this.length),
                    this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
                }
                ,
                c.prototype.readBigInt64LE = Z((function(e) {
                    $(e >>>= 0, "offset");
                    const t = this[e]
                      , r = this[e + 7];
                    void 0 !== t && void 0 !== r || W(e, this.length - 8);
                    const n = this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24);
                    return (BigInt(n) << BigInt(32)) + BigInt(t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24)
                }
                )),
                c.prototype.readBigInt64BE = Z((function(e) {
                    $(e >>>= 0, "offset");
                    const t = this[e]
                      , r = this[e + 7];
                    void 0 !== t && void 0 !== r || W(e, this.length - 8);
                    const n = (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e];
                    return (BigInt(n) << BigInt(32)) + BigInt(this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r)
                }
                )),
                c.prototype.readFloatLE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 4, this.length),
                    i.read(this, e, !0, 23, 4)
                }
                ,
                c.prototype.readFloatBE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 4, this.length),
                    i.read(this, e, !1, 23, 4)
                }
                ,
                c.prototype.readDoubleLE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 8, this.length),
                    i.read(this, e, !0, 52, 8)
                }
                ,
                c.prototype.readDoubleBE = function(e, t) {
                    return e >>>= 0,
                    t || B(e, 8, this.length),
                    i.read(this, e, !1, 52, 8)
                }
                ,
                c.prototype.writeUintLE = c.prototype.writeUIntLE = function(e, t, r, n) {
                    if (e = +e,
                    t >>>= 0,
                    r >>>= 0,
                    !n) {
                        L(this, e, t, r, Math.pow(2, 8 * r) - 1, 0)
                    }
                    let i = 1
                      , o = 0;
                    for (this[t] = 255 & e; ++o < r && (i *= 256); )
                        this[t + o] = e / i & 255;
                    return t + r
                }
                ,
                c.prototype.writeUintBE = c.prototype.writeUIntBE = function(e, t, r, n) {
                    if (e = +e,
                    t >>>= 0,
                    r >>>= 0,
                    !n) {
                        L(this, e, t, r, Math.pow(2, 8 * r) - 1, 0)
                    }
                    let i = r - 1
                      , o = 1;
                    for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); )
                        this[t + i] = e / o & 255;
                    return t + r
                }
                ,
                c.prototype.writeUint8 = c.prototype.writeUInt8 = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 1, 255, 0),
                    this[t] = 255 & e,
                    t + 1
                }
                ,
                c.prototype.writeUint16LE = c.prototype.writeUInt16LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 2, 65535, 0),
                    this[t] = 255 & e,
                    this[t + 1] = e >>> 8,
                    t + 2
                }
                ,
                c.prototype.writeUint16BE = c.prototype.writeUInt16BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 2, 65535, 0),
                    this[t] = e >>> 8,
                    this[t + 1] = 255 & e,
                    t + 2
                }
                ,
                c.prototype.writeUint32LE = c.prototype.writeUInt32LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 4, 4294967295, 0),
                    this[t + 3] = e >>> 24,
                    this[t + 2] = e >>> 16,
                    this[t + 1] = e >>> 8,
                    this[t] = 255 & e,
                    t + 4
                }
                ,
                c.prototype.writeUint32BE = c.prototype.writeUInt32BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 4, 4294967295, 0),
                    this[t] = e >>> 24,
                    this[t + 1] = e >>> 16,
                    this[t + 2] = e >>> 8,
                    this[t + 3] = 255 & e,
                    t + 4
                }
                ,
                c.prototype.writeBigUInt64LE = Z((function(e, t=0) {
                    return A(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
                }
                )),
                c.prototype.writeBigUInt64BE = Z((function(e, t=0) {
                    return U(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
                }
                )),
                c.prototype.writeIntLE = function(e, t, r, n) {
                    if (e = +e,
                    t >>>= 0,
                    !n) {
                        const n = Math.pow(2, 8 * r - 1);
                        L(this, e, t, r, n - 1, -n)
                    }
                    let i = 0
                      , o = 1
                      , s = 0;
                    for (this[t] = 255 & e; ++i < r && (o *= 256); )
                        e < 0 && 0 === s && 0 !== this[t + i - 1] && (s = 1),
                        this[t + i] = (e / o >> 0) - s & 255;
                    return t + r
                }
                ,
                c.prototype.writeIntBE = function(e, t, r, n) {
                    if (e = +e,
                    t >>>= 0,
                    !n) {
                        const n = Math.pow(2, 8 * r - 1);
                        L(this, e, t, r, n - 1, -n)
                    }
                    let i = r - 1
                      , o = 1
                      , s = 0;
                    for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); )
                        e < 0 && 0 === s && 0 !== this[t + i + 1] && (s = 1),
                        this[t + i] = (e / o >> 0) - s & 255;
                    return t + r
                }
                ,
                c.prototype.writeInt8 = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 1, 127, -128),
                    e < 0 && (e = 255 + e + 1),
                    this[t] = 255 & e,
                    t + 1
                }
                ,
                c.prototype.writeInt16LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 2, 32767, -32768),
                    this[t] = 255 & e,
                    this[t + 1] = e >>> 8,
                    t + 2
                }
                ,
                c.prototype.writeInt16BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 2, 32767, -32768),
                    this[t] = e >>> 8,
                    this[t + 1] = 255 & e,
                    t + 2
                }
                ,
                c.prototype.writeInt32LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 4, 2147483647, -2147483648),
                    this[t] = 255 & e,
                    this[t + 1] = e >>> 8,
                    this[t + 2] = e >>> 16,
                    this[t + 3] = e >>> 24,
                    t + 4
                }
                ,
                c.prototype.writeInt32BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || L(this, e, t, 4, 2147483647, -2147483648),
                    e < 0 && (e = 4294967295 + e + 1),
                    this[t] = e >>> 24,
                    this[t + 1] = e >>> 16,
                    this[t + 2] = e >>> 8,
                    this[t + 3] = 255 & e,
                    t + 4
                }
                ,
                c.prototype.writeBigInt64LE = Z((function(e, t=0) {
                    return A(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
                }
                )),
                c.prototype.writeBigInt64BE = Z((function(e, t=0) {
                    return U(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
                }
                )),
                c.prototype.writeFloatLE = function(e, t, r) {
                    return M(this, e, t, !0, r)
                }
                ,
                c.prototype.writeFloatBE = function(e, t, r) {
                    return M(this, e, t, !1, r)
                }
                ,
                c.prototype.writeDoubleLE = function(e, t, r) {
                    return D(this, e, t, !0, r)
                }
                ,
                c.prototype.writeDoubleBE = function(e, t, r) {
                    return D(this, e, t, !1, r)
                }
                ,
                c.prototype.copy = function(e, t, r, n) {
                    if (!c.isBuffer(e))
                        throw new TypeError("argument should be a Buffer");
                    if (r || (r = 0),
                    n || 0 === n || (n = this.length),
                    t >= e.length && (t = e.length),
                    t || (t = 0),
                    n > 0 && n < r && (n = r),
                    n === r)
                        return 0;
                    if (0 === e.length || 0 === this.length)
                        return 0;
                    if (t < 0)
                        throw new RangeError("targetStart out of bounds");
                    if (r < 0 || r >= this.length)
                        throw new RangeError("Index out of range");
                    if (n < 0)
                        throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length),
                    e.length - t < n - r && (n = e.length - t + r);
                    const i = n - r;
                    return this === e && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t, r, n) : Uint8Array.prototype.set.call(e, this.subarray(r, n), t),
                    i
                }
                ,
                c.prototype.fill = function(e, t, r, n) {
                    if ("string" == typeof e) {
                        if ("string" == typeof t ? (n = t,
                        t = 0,
                        r = this.length) : "string" == typeof r && (n = r,
                        r = this.length),
                        void 0 !== n && "string" != typeof n)
                            throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !c.isEncoding(n))
                            throw new TypeError("Unknown encoding: " + n);
                        if (1 === e.length) {
                            const t = e.charCodeAt(0);
                            ("utf8" === n && t < 128 || "latin1" === n) && (e = t)
                        }
                    } else
                        "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
                    if (t < 0 || this.length < t || this.length < r)
                        throw new RangeError("Out of range index");
                    if (r <= t)
                        return this;
                    let i;
                    if (t >>>= 0,
                    r = void 0 === r ? this.length : r >>> 0,
                    e || (e = 0),
                    "number" == typeof e)
                        for (i = t; i < r; ++i)
                            this[i] = e;
                    else {
                        const o = c.isBuffer(e) ? e : c.from(e, n)
                          , s = o.length;
                        if (0 === s)
                            throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                        for (i = 0; i < r - t; ++i)
                            this[i + t] = o[i % s]
                    }
                    return this
                }
                ;
                const N = {};
                function F(e, t, r) {
                    N[e] = class extends r {
                        constructor() {
                            super(),
                            Object.defineProperty(this, "message", {
                                value: t.apply(this, arguments),
                                writable: !0,
                                configurable: !0
                            }),
                            this.name = `${this.name} [${e}]`,
                            this.stack,
                            delete this.name
                        }
                        get code() {
                            return e
                        }
                        set code(e) {
                            Object.defineProperty(this, "code", {
                                configurable: !0,
                                enumerable: !0,
                                value: e,
                                writable: !0
                            })
                        }
                        toString() {
                            return `${this.name} [${e}]: ${this.message}`
                        }
                    }
                }
                function q(e) {
                    let t = ""
                      , r = e.length;
                    const n = "-" === e[0] ? 1 : 0;
                    for (; r >= n + 4; r -= 3)
                        t = `_${e.slice(r - 3, r)}${t}`;
                    return `${e.slice(0, r)}${t}`
                }
                function H(e, t, r, n, i, o) {
                    if (e > r || e < t) {
                        const n = "bigint" == typeof t ? "n" : "";
                        let i;
                        throw i = o > 3 ? 0 === t || t === BigInt(0) ? `>= 0${n} and < 2${n} ** ${8 * (o + 1)}${n}` : `>= -(2${n} ** ${8 * (o + 1) - 1}${n}) and < 2 ** ${8 * (o + 1) - 1}${n}` : `>= ${t}${n} and <= ${r}${n}`,
                        new N.ERR_OUT_OF_RANGE("value",i,e)
                    }
                    !function(e, t, r) {
                        $(t, "offset"),
                        void 0 !== e[t] && void 0 !== e[t + r] || W(t, e.length - (r + 1))
                    }(n, i, o)
                }
                function $(e, t) {
                    if ("number" != typeof e)
                        throw new N.ERR_INVALID_ARG_TYPE(t,"number",e)
                }
                function W(e, t, r) {
                    if (Math.floor(e) !== e)
                        throw $(e, r),
                        new N.ERR_OUT_OF_RANGE(r || "offset","an integer",e);
                    if (t < 0)
                        throw new N.ERR_BUFFER_OUT_OF_BOUNDS;
                    throw new N.ERR_OUT_OF_RANGE(r || "offset",`>= ${r ? 1 : 0} and <= ${t}`,e)
                }
                F("ERR_BUFFER_OUT_OF_BOUNDS", (function(e) {
                    return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds"
                }
                ), RangeError),
                F("ERR_INVALID_ARG_TYPE", (function(e, t) {
                    return `The "${e}" argument must be of type number. Received type ${typeof t}`
                }
                ), TypeError),
                F("ERR_OUT_OF_RANGE", (function(e, t, r) {
                    let n = `The value of "${e}" is out of range.`
                      , i = r;
                    return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? i = q(String(r)) : "bigint" == typeof r && (i = String(r),
                    (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = q(i)),
                    i += "n"),
                    n += ` It must be ${t}. Received ${i}`,
                    n
                }
                ), RangeError);
                const z = /[^+/0-9A-Za-z-_]/g;
                function V(e, t) {
                    let r;
                    t = t || 1 / 0;
                    const n = e.length;
                    let i = null;
                    const o = [];
                    for (let s = 0; s < n; ++s) {
                        if (r = e.charCodeAt(s),
                        r > 55295 && r < 57344) {
                            if (!i) {
                                if (r > 56319) {
                                    (t -= 3) > -1 && o.push(239, 191, 189);
                                    continue
                                }
                                if (s + 1 === n) {
                                    (t -= 3) > -1 && o.push(239, 191, 189);
                                    continue
                                }
                                i = r;
                                continue
                            }
                            if (r < 56320) {
                                (t -= 3) > -1 && o.push(239, 191, 189),
                                i = r;
                                continue
                            }
                            r = 65536 + (i - 55296 << 10 | r - 56320)
                        } else
                            i && (t -= 3) > -1 && o.push(239, 191, 189);
                        if (i = null,
                        r < 128) {
                            if ((t -= 1) < 0)
                                break;
                            o.push(r)
                        } else if (r < 2048) {
                            if ((t -= 2) < 0)
                                break;
                            o.push(r >> 6 | 192, 63 & r | 128)
                        } else if (r < 65536) {
                            if ((t -= 3) < 0)
                                break;
                            o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                        } else {
                            if (!(r < 1114112))
                                throw new Error("Invalid code point");
                            if ((t -= 4) < 0)
                                break;
                            o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                        }
                    }
                    return o
                }
                function G(e) {
                    return n.toByteArray(function(e) {
                        if ((e = (e = e.split("=")[0]).trim().replace(z, "")).length < 2)
                            return "";
                        for (; e.length % 4 != 0; )
                            e += "=";
                        return e
                    }(e))
                }
                function Y(e, t, r, n) {
                    let i;
                    for (i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i)
                        t[i + r] = e[i];
                    return i
                }
                function J(e, t) {
                    return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
                }
                function K(e) {
                    return e != e
                }
                const X = function() {
                    const e = "0123456789abcdef"
                      , t = new Array(256);
                    for (let r = 0; r < 16; ++r) {
                        const n = 16 * r;
                        for (let i = 0; i < 16; ++i)
                            t[n + i] = e[r] + e[i]
                    }
                    return t
                }();
                function Z(e) {
                    return "undefined" == typeof BigInt ? Q : e
                }
                function Q() {
                    throw new Error("BigInt not supported")
                }
            }
            ,
            9662: (e, t, r) => {
                var n = r(7854)
                  , i = r(614)
                  , o = r(6330)
                  , s = n.TypeError;
                e.exports = function(e) {
                    if (i(e))
                        return e;
                    throw s(o(e) + " is not a function")
                }
            }
            ,
            6077: (e, t, r) => {
                var n = r(7854)
                  , i = r(614)
                  , o = n.String
                  , s = n.TypeError;
                e.exports = function(e) {
                    if ("object" == typeof e || i(e))
                        return e;
                    throw s("Can't set " + o(e) + " as a prototype")
                }
            }
            ,
            9670: (e, t, r) => {
                var n = r(7854)
                  , i = r(111)
                  , o = n.String
                  , s = n.TypeError;
                e.exports = function(e) {
                    if (i(e))
                        return e;
                    throw s(o(e) + " is not an object")
                }
            }
            ,
            4019: e => {
                e.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView
            }
            ,
            260: (e, t, r) => {
                "use strict";
                var n, i, o, s = r(4019), a = r(9781), c = r(7854), u = r(614), l = r(111), h = r(2597), d = r(648), f = r(6330), p = r(8880), m = r(1320), g = r(3070).f, y = r(7976), b = r(9518), v = r(7674), w = r(5112), _ = r(9711), S = c.Int8Array, E = S && S.prototype, T = c.Uint8ClampedArray, x = T && T.prototype, R = S && b(S), C = E && b(E), O = Object.prototype, P = c.TypeError, I = w("toStringTag"), k = _("TYPED_ARRAY_TAG"), B = _("TYPED_ARRAY_CONSTRUCTOR"), L = s && !!v && "Opera" !== d(c.opera), A = !1, U = {
                    Int8Array: 1,
                    Uint8Array: 1,
                    Uint8ClampedArray: 1,
                    Int16Array: 2,
                    Uint16Array: 2,
                    Int32Array: 4,
                    Uint32Array: 4,
                    Float32Array: 4,
                    Float64Array: 8
                }, j = {
                    BigInt64Array: 8,
                    BigUint64Array: 8
                }, M = function(e) {
                    if (!l(e))
                        return !1;
                    var t = d(e);
                    return h(U, t) || h(j, t)
                };
                for (n in U)
                    (o = (i = c[n]) && i.prototype) ? p(o, B, i) : L = !1;
                for (n in j)
                    (o = (i = c[n]) && i.prototype) && p(o, B, i);
                if ((!L || !u(R) || R === Function.prototype) && (R = function() {
                    throw P("Incorrect invocation")
                }
                ,
                L))
                    for (n in U)
                        c[n] && v(c[n], R);
                if ((!L || !C || C === O) && (C = R.prototype,
                L))
                    for (n in U)
                        c[n] && v(c[n].prototype, C);
                if (L && b(x) !== C && v(x, C),
                a && !h(C, I))
                    for (n in A = !0,
                    g(C, I, {
                        get: function() {
                            return l(this) ? this[k] : void 0
                        }
                    }),
                    U)
                        c[n] && p(c[n], k, n);
                e.exports = {
                    NATIVE_ARRAY_BUFFER_VIEWS: L,
                    TYPED_ARRAY_CONSTRUCTOR: B,
                    TYPED_ARRAY_TAG: A && k,
                    aTypedArray: function(e) {
                        if (M(e))
                            return e;
                        throw P("Target is not a typed array")
                    },
                    aTypedArrayConstructor: function(e) {
                        if (u(e) && (!v || y(R, e)))
                            return e;
                        throw P(f(e) + " is not a typed array constructor")
                    },
                    exportTypedArrayMethod: function(e, t, r, n) {
                        if (a) {
                            if (r)
                                for (var i in U) {
                                    var o = c[i];
                                    if (o && h(o.prototype, e))
                                        try {
                                            delete o.prototype[e]
                                        } catch (r) {
                                            try {
                                                o.prototype[e] = t
                                            } catch (e) {}
                                        }
                                }
                            C[e] && !r || m(C, e, r ? t : L && E[e] || t, n)
                        }
                    },
                    exportTypedArrayStaticMethod: function(e, t, r) {
                        var n, i;
                        if (a) {
                            if (v) {
                                if (r)
                                    for (n in U)
                                        if ((i = c[n]) && h(i, e))
                                            try {
                                                delete i[e]
                                            } catch (e) {}
                                if (R[e] && !r)
                                    return;
                                try {
                                    return m(R, e, r ? t : L && R[e] || t)
                                } catch (e) {}
                            }
                            for (n in U)
                                !(i = c[n]) || i[e] && !r || m(i, e, t)
                        }
                    },
                    isView: function(e) {
                        if (!l(e))
                            return !1;
                        var t = d(e);
                        return "DataView" === t || h(U, t) || h(j, t)
                    },
                    isTypedArray: M,
                    TypedArray: R,
                    TypedArrayPrototype: C
                }
            }
            ,
            4326: (e, t, r) => {
                var n = r(1702)
                  , i = n({}.toString)
                  , o = n("".slice);
                e.exports = function(e) {
                    return o(i(e), 8, -1)
                }
            }
            ,
            648: (e, t, r) => {
                var n = r(7854)
                  , i = r(1694)
                  , o = r(614)
                  , s = r(4326)
                  , a = r(5112)("toStringTag")
                  , c = n.Object
                  , u = "Arguments" == s(function() {
                    return arguments
                }());
                e.exports = i ? s : function(e) {
                    var t, r, n;
                    return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (r = function(e, t) {
                        try {
                            return e[t]
                        } catch (e) {}
                    }(t = c(e), a)) ? r : u ? s(t) : "Object" == (n = s(t)) && o(t.callee) ? "Arguments" : n
                }
            }
            ,
            9920: (e, t, r) => {
                var n = r(7293);
                e.exports = !n((function() {
                    function e() {}
                    return e.prototype.constructor = null,
                    Object.getPrototypeOf(new e) !== e.prototype
                }
                ))
            }
            ,
            8880: (e, t, r) => {
                var n = r(9781)
                  , i = r(3070)
                  , o = r(9114);
                e.exports = n ? function(e, t, r) {
                    return i.f(e, t, o(1, r))
                }
                : function(e, t, r) {
                    return e[t] = r,
                    e
                }
            }
            ,
            9114: e => {
                e.exports = function(e, t) {
                    return {
                        enumerable: !(1 & e),
                        configurable: !(2 & e),
                        writable: !(4 & e),
                        value: t
                    }
                }
            }
            ,
            9781: (e, t, r) => {
                var n = r(7293);
                e.exports = !n((function() {
                    return 7 != Object.defineProperty({}, 1, {
                        get: function() {
                            return 7
                        }
                    })[1]
                }
                ))
            }
            ,
            317: (e, t, r) => {
                var n = r(7854)
                  , i = r(111)
                  , o = n.document
                  , s = i(o) && i(o.createElement);
                e.exports = function(e) {
                    return s ? o.createElement(e) : {}
                }
            }
            ,
            8113: (e, t, r) => {
                var n = r(5005);
                e.exports = n("navigator", "userAgent") || ""
            }
            ,
            7392: (e, t, r) => {
                var n, i, o = r(7854), s = r(8113), a = o.process, c = o.Deno, u = a && a.versions || c && c.version, l = u && u.v8;
                l && (i = (n = l.split("."))[0] > 0 && n[0] < 4 ? 1 : +(n[0] + n[1])),
                !i && s && (!(n = s.match(/Edge\/(\d+)/)) || n[1] >= 74) && (n = s.match(/Chrome\/(\d+)/)) && (i = +n[1]),
                e.exports = i
            }
            ,
            7293: e => {
                e.exports = function(e) {
                    try {
                        return !!e()
                    } catch (e) {
                        return !0
                    }
                }
            }
            ,
            4374: (e, t, r) => {
                var n = r(7293);
                e.exports = !n((function() {
                    var e = function() {}
                    .bind();
                    return "function" != typeof e || e.hasOwnProperty("prototype")
                }
                ))
            }
            ,
            6916: (e, t, r) => {
                var n = r(4374)
                  , i = Function.prototype.call;
                e.exports = n ? i.bind(i) : function() {
                    return i.apply(i, arguments)
                }
            }
            ,
            6530: (e, t, r) => {
                var n = r(9781)
                  , i = r(2597)
                  , o = Function.prototype
                  , s = n && Object.getOwnPropertyDescriptor
                  , a = i(o, "name")
                  , c = a && "something" === function() {}
                .name
                  , u = a && (!n || n && s(o, "name").configurable);
                e.exports = {
                    EXISTS: a,
                    PROPER: c,
                    CONFIGURABLE: u
                }
            }
            ,
            1702: (e, t, r) => {
                var n = r(4374)
                  , i = Function.prototype
                  , o = i.bind
                  , s = i.call
                  , a = n && o.bind(s, s);
                e.exports = n ? function(e) {
                    return e && a(e)
                }
                : function(e) {
                    return e && function() {
                        return s.apply(e, arguments)
                    }
                }
            }
            ,
            5005: (e, t, r) => {
                var n = r(7854)
                  , i = r(614)
                  , o = function(e) {
                    return i(e) ? e : void 0
                };
                e.exports = function(e, t) {
                    return arguments.length < 2 ? o(n[e]) : n[e] && n[e][t]
                }
            }
            ,
            8173: (e, t, r) => {
                var n = r(9662);
                e.exports = function(e, t) {
                    var r = e[t];
                    return null == r ? void 0 : n(r)
                }
            }
            ,
            7854: (e, t, r) => {
                var n = function(e) {
                    return e && e.Math == Math && e
                };
                e.exports = n("object" == typeof globalThis && globalThis) || n("object" == typeof window && window) || n("object" == typeof self && self) || n("object" == typeof r.g && r.g) || function() {
                    return this
                }() || Function("return this")()
            }
            ,
            2597: (e, t, r) => {
                var n = r(1702)
                  , i = r(7908)
                  , o = n({}.hasOwnProperty);
                e.exports = Object.hasOwn || function(e, t) {
                    return o(i(e), t)
                }
            }
            ,
            3501: e => {
                e.exports = {}
            }
            ,
            4664: (e, t, r) => {
                var n = r(9781)
                  , i = r(7293)
                  , o = r(317);
                e.exports = !n && !i((function() {
                    return 7 != Object.defineProperty(o("div"), "a", {
                        get: function() {
                            return 7
                        }
                    }).a
                }
                ))
            }
            ,
            2788: (e, t, r) => {
                var n = r(1702)
                  , i = r(614)
                  , o = r(5465)
                  , s = n(Function.toString);
                i(o.inspectSource) || (o.inspectSource = function(e) {
                    return s(e)
                }
                ),
                e.exports = o.inspectSource
            }
            ,
            9909: (e, t, r) => {
                var n, i, o, s = r(8536), a = r(7854), c = r(1702), u = r(111), l = r(8880), h = r(2597), d = r(5465), f = r(6200), p = r(3501), m = "Object already initialized", g = a.TypeError, y = a.WeakMap;
                if (s || d.state) {
                    var b = d.state || (d.state = new y)
                      , v = c(b.get)
                      , w = c(b.has)
                      , _ = c(b.set);
                    n = function(e, t) {
                        if (w(b, e))
                            throw new g(m);
                        return t.facade = e,
                        _(b, e, t),
                        t
                    }
                    ,
                    i = function(e) {
                        return v(b, e) || {}
                    }
                    ,
                    o = function(e) {
                        return w(b, e)
                    }
                } else {
                    var S = f("state");
                    p[S] = !0,
                    n = function(e, t) {
                        if (h(e, S))
                            throw new g(m);
                        return t.facade = e,
                        l(e, S, t),
                        t
                    }
                    ,
                    i = function(e) {
                        return h(e, S) ? e[S] : {}
                    }
                    ,
                    o = function(e) {
                        return h(e, S)
                    }
                }
                e.exports = {
                    set: n,
                    get: i,
                    has: o,
                    enforce: function(e) {
                        return o(e) ? i(e) : n(e, {})
                    },
                    getterFor: function(e) {
                        return function(t) {
                            var r;
                            if (!u(t) || (r = i(t)).type !== e)
                                throw g("Incompatible receiver, " + e + " required");
                            return r
                        }
                    }
                }
            }
            ,
            614: e => {
                e.exports = function(e) {
                    return "function" == typeof e
                }
            }
            ,
            111: (e, t, r) => {
                var n = r(614);
                e.exports = function(e) {
                    return "object" == typeof e ? null !== e : n(e)
                }
            }
            ,
            1913: e => {
                e.exports = !1
            }
            ,
            2190: (e, t, r) => {
                var n = r(7854)
                  , i = r(5005)
                  , o = r(614)
                  , s = r(7976)
                  , a = r(3307)
                  , c = n.Object;
                e.exports = a ? function(e) {
                    return "symbol" == typeof e
                }
                : function(e) {
                    var t = i("Symbol");
                    return o(t) && s(t.prototype, c(e))
                }
            }
            ,
            6244: (e, t, r) => {
                var n = r(7466);
                e.exports = function(e) {
                    return n(e.length)
                }
            }
            ,
            133: (e, t, r) => {
                var n = r(7392)
                  , i = r(7293);
                e.exports = !!Object.getOwnPropertySymbols && !i((function() {
                    var e = Symbol();
                    return !String(e) || !(Object(e)instanceof Symbol) || !Symbol.sham && n && n < 41
                }
                ))
            }
            ,
            8536: (e, t, r) => {
                var n = r(7854)
                  , i = r(614)
                  , o = r(2788)
                  , s = n.WeakMap;
                e.exports = i(s) && /native code/.test(o(s))
            }
            ,
            3070: (e, t, r) => {
                var n = r(7854)
                  , i = r(9781)
                  , o = r(4664)
                  , s = r(3353)
                  , a = r(9670)
                  , c = r(4948)
                  , u = n.TypeError
                  , l = Object.defineProperty
                  , h = Object.getOwnPropertyDescriptor
                  , d = "enumerable"
                  , f = "configurable"
                  , p = "writable";
                t.f = i ? s ? function(e, t, r) {
                    if (a(e),
                    t = c(t),
                    a(r),
                    "function" == typeof e && "prototype" === t && "value"in r && p in r && !r.writable) {
                        var n = h(e, t);
                        n && n.writable && (e[t] = r.value,
                        r = {
                            configurable: f in r ? r.configurable : n.configurable,
                            enumerable: d in r ? r.enumerable : n.enumerable,
                            writable: !1
                        })
                    }
                    return l(e, t, r)
                }
                : l : function(e, t, r) {
                    if (a(e),
                    t = c(t),
                    a(r),
                    o)
                        try {
                            return l(e, t, r)
                        } catch (e) {}
                    if ("get"in r || "set"in r)
                        throw u("Accessors not supported");
                    return "value"in r && (e[t] = r.value),
                    e
                }
            }
            ,
            9518: (e, t, r) => {
                var n = r(7854)
                  , i = r(2597)
                  , o = r(614)
                  , s = r(7908)
                  , a = r(6200)
                  , c = r(9920)
                  , u = a("IE_PROTO")
                  , l = n.Object
                  , h = l.prototype;
                e.exports = c ? l.getPrototypeOf : function(e) {
                    var t = s(e);
                    if (i(t, u))
                        return t[u];
                    var r = t.constructor;
                    return o(r) && t instanceof r ? r.prototype : t instanceof l ? h : null
                }
            }
            ,
            7976: (e, t, r) => {
                var n = r(1702);
                e.exports = n({}.isPrototypeOf)
            }
            ,
            7674: (e, t, r) => {
                var n = r(1702)
                  , i = r(9670)
                  , o = r(6077);
                e.exports = Object.setPrototypeOf || ("__proto__"in {} ? function() {
                    var e, t = !1, r = {};
                    try {
                        (e = n(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set))(r, []),
                        t = r instanceof Array
                    } catch (e) {}
                    return function(r, n) {
                        return i(r),
                        o(n),
                        t ? e(r, n) : r.__proto__ = n,
                        r
                    }
                }() : void 0)
            }
            ,
            2140: (e, t, r) => {
                var n = r(7854)
                  , i = r(6916)
                  , o = r(614)
                  , s = r(111)
                  , a = n.TypeError;
                e.exports = function(e, t) {
                    var r, n;
                    if ("string" === t && o(r = e.toString) && !s(n = i(r, e)))
                        return n;
                    if (o(r = e.valueOf) && !s(n = i(r, e)))
                        return n;
                    if ("string" !== t && o(r = e.toString) && !s(n = i(r, e)))
                        return n;
                    throw a("Can't convert object to primitive value")
                }
            }
            ,
            1320: (e, t, r) => {
                var n = r(7854)
                  , i = r(614)
                  , o = r(2597)
                  , s = r(8880)
                  , a = r(3505)
                  , c = r(2788)
                  , u = r(9909)
                  , l = r(6530).CONFIGURABLE
                  , h = u.get
                  , d = u.enforce
                  , f = String(String).split("String");
                (e.exports = function(e, t, r, c) {
                    var u, h = !!c && !!c.unsafe, p = !!c && !!c.enumerable, m = !!c && !!c.noTargetGet, g = c && void 0 !== c.name ? c.name : t;
                    i(r) && ("Symbol(" === String(g).slice(0, 7) && (g = "[" + String(g).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"),
                    (!o(r, "name") || l && r.name !== g) && s(r, "name", g),
                    (u = d(r)).source || (u.source = f.join("string" == typeof g ? g : ""))),
                    e !== n ? (h ? !m && e[t] && (p = !0) : delete e[t],
                    p ? e[t] = r : s(e, t, r)) : p ? e[t] = r : a(t, r)
                }
                )(Function.prototype, "toString", (function() {
                    return i(this) && h(this).source || c(this)
                }
                ))
            }
            ,
            4488: (e, t, r) => {
                var n = r(7854).TypeError;
                e.exports = function(e) {
                    if (null == e)
                        throw n("Can't call method on " + e);
                    return e
                }
            }
            ,
            3505: (e, t, r) => {
                var n = r(7854)
                  , i = Object.defineProperty;
                e.exports = function(e, t) {
                    try {
                        i(n, e, {
                            value: t,
                            configurable: !0,
                            writable: !0
                        })
                    } catch (r) {
                        n[e] = t
                    }
                    return t
                }
            }
            ,
            6200: (e, t, r) => {
                var n = r(2309)
                  , i = r(9711)
                  , o = n("keys");
                e.exports = function(e) {
                    return o[e] || (o[e] = i(e))
                }
            }
            ,
            5465: (e, t, r) => {
                var n = r(7854)
                  , i = r(3505)
                  , o = "__core-js_shared__"
                  , s = n[o] || i(o, {});
                e.exports = s
            }
            ,
            2309: (e, t, r) => {
                var n = r(1913)
                  , i = r(5465);
                (e.exports = function(e, t) {
                    return i[e] || (i[e] = void 0 !== t ? t : {})
                }
                )("versions", []).push({
                    version: "3.21.0",
                    mode: n ? "pure" : "global",
                    copyright: "© 2014-2022 Denis Pushkarev (zloirock.ru)",
                    license: "https://github.com/zloirock/core-js/blob/v3.21.0/LICENSE",
                    source: "https://github.com/zloirock/core-js"
                })
            }
            ,
            9303: e => {
                var t = Math.ceil
                  , r = Math.floor;
                e.exports = function(e) {
                    var n = +e;
                    return n != n || 0 === n ? 0 : (n > 0 ? r : t)(n)
                }
            }
            ,
            7466: (e, t, r) => {
                var n = r(9303)
                  , i = Math.min;
                e.exports = function(e) {
                    return e > 0 ? i(n(e), 9007199254740991) : 0
                }
            }
            ,
            7908: (e, t, r) => {
                var n = r(7854)
                  , i = r(4488)
                  , o = n.Object;
                e.exports = function(e) {
                    return o(i(e))
                }
            }
            ,
            4590: (e, t, r) => {
                var n = r(7854)
                  , i = r(3002)
                  , o = n.RangeError;
                e.exports = function(e, t) {
                    var r = i(e);
                    if (r % t)
                        throw o("Wrong offset");
                    return r
                }
            }
            ,
            3002: (e, t, r) => {
                var n = r(7854)
                  , i = r(9303)
                  , o = n.RangeError;
                e.exports = function(e) {
                    var t = i(e);
                    if (t < 0)
                        throw o("The argument can't be less than 0");
                    return t
                }
            }
            ,
            7593: (e, t, r) => {
                var n = r(7854)
                  , i = r(6916)
                  , o = r(111)
                  , s = r(2190)
                  , a = r(8173)
                  , c = r(2140)
                  , u = r(5112)
                  , l = n.TypeError
                  , h = u("toPrimitive");
                e.exports = function(e, t) {
                    if (!o(e) || s(e))
                        return e;
                    var r, n = a(e, h);
                    if (n) {
                        if (void 0 === t && (t = "default"),
                        r = i(n, e, t),
                        !o(r) || s(r))
                            return r;
                        throw l("Can't convert object to primitive value")
                    }
                    return void 0 === t && (t = "number"),
                    c(e, t)
                }
            }
            ,
            4948: (e, t, r) => {
                var n = r(7593)
                  , i = r(2190);
                e.exports = function(e) {
                    var t = n(e, "string");
                    return i(t) ? t : t + ""
                }
            }
            ,
            1694: (e, t, r) => {
                var n = {};
                n[r(5112)("toStringTag")] = "z",
                e.exports = "[object z]" === String(n)
            }
            ,
            6330: (e, t, r) => {
                var n = r(7854).String;
                e.exports = function(e) {
                    try {
                        return n(e)
                    } catch (e) {
                        return "Object"
                    }
                }
            }
            ,
            9711: (e, t, r) => {
                var n = r(1702)
                  , i = 0
                  , o = Math.random()
                  , s = n(1..toString);
                e.exports = function(e) {
                    return "Symbol(" + (void 0 === e ? "" : e) + ")_" + s(++i + o, 36)
                }
            }
            ,
            3307: (e, t, r) => {
                var n = r(133);
                e.exports = n && !Symbol.sham && "symbol" == typeof Symbol.iterator
            }
            ,
            3353: (e, t, r) => {
                var n = r(9781)
                  , i = r(7293);
                e.exports = n && i((function() {
                    return 42 != Object.defineProperty((function() {}
                    ), "prototype", {
                        value: 42,
                        writable: !1
                    }).prototype
                }
                ))
            }
            ,
            5112: (e, t, r) => {
                var n = r(7854)
                  , i = r(2309)
                  , o = r(2597)
                  , s = r(9711)
                  , a = r(133)
                  , c = r(3307)
                  , u = i("wks")
                  , l = n.Symbol
                  , h = l && l.for
                  , d = c ? l : l && l.withoutSetter || s;
                e.exports = function(e) {
                    if (!o(u, e) || !a && "string" != typeof u[e]) {
                        var t = "Symbol." + e;
                        a && o(l, e) ? u[e] = l[e] : u[e] = c && h ? h(t) : d(t)
                    }
                    return u[e]
                }
            }
            ,
            3462: (e, t, r) => {
                "use strict";
                var n = r(7854)
                  , i = r(6916)
                  , o = r(260)
                  , s = r(6244)
                  , a = r(4590)
                  , c = r(7908)
                  , u = r(7293)
                  , l = n.RangeError
                  , h = n.Int8Array
                  , d = h && h.prototype
                  , f = d && d.set
                  , p = o.aTypedArray
                  , m = o.exportTypedArrayMethod
                  , g = !u((function() {
                    var e = new Uint8ClampedArray(2);
                    return i(f, e, {
                        length: 1,
                        0: 3
                    }, 1),
                    3 !== e[1]
                }
                ))
                  , y = g && o.NATIVE_ARRAY_BUFFER_VIEWS && u((function() {
                    var e = new h(2);
                    return e.set(1),
                    e.set("2", 1),
                    0 !== e[0] || 2 !== e[1]
                }
                ));
                m("set", (function(e) {
                    p(this);
                    var t = a(arguments.length > 1 ? arguments[1] : void 0, 1)
                      , r = c(e);
                    if (g)
                        return i(f, this, r, t);
                    var n = this.length
                      , o = s(r)
                      , u = 0;
                    if (o + t > n)
                        throw l("Wrong length");
                    for (; u < o; )
                        this[t + u] = r[u++]
                }
                ), !g || y)
            }
            ,
            1227: (e, t, r) => {
                var n = r(4155);
                t.formatArgs = function(t) {
                    if (t[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff),
                    !this.useColors)
                        return;
                    const r = "color: " + this.color;
                    t.splice(1, 0, r, "color: inherit");
                    let n = 0
                      , i = 0;
                    t[0].replace(/%[a-zA-Z%]/g, (e => {
                        "%%" !== e && (n++,
                        "%c" === e && (i = n))
                    }
                    )),
                    t.splice(i, 0, r)
                }
                ,
                t.save = function(e) {
                    try {
                        e ? t.storage.setItem("debug", e) : t.storage.removeItem("debug")
                    } catch (e) {}
                }
                ,
                t.load = function() {
                    let e;
                    try {
                        e = t.storage.getItem("debug")
                    } catch (e) {}
                    !e && void 0 !== n && "env"in n && (e = n.env.DEBUG);
                    return e
                }
                ,
                t.useColors = function() {
                    if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs))
                        return !0;
                    if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
                        return !1;
                    return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)
                }
                ,
                t.storage = function() {
                    try {
                        return localStorage
                    } catch (e) {}
                }(),
                t.destroy = ( () => {
                    let e = !1;
                    return () => {
                        e || (e = !0,
                        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))
                    }
                }
                )(),
                t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"],
                t.log = console.debug || console.log || ( () => {}
                ),
                e.exports = r(2447)(t);
                const {formatters: i} = e.exports;
                i.j = function(e) {
                    try {
                        return JSON.stringify(e)
                    } catch (e) {
                        return "[UnexpectedJSONParseError]: " + e.message
                    }
                }
            }
            ,
            2447: (e, t, r) => {
                e.exports = function(e) {
                    function t(e) {
                        let r, i, o, s = null;
                        function a(...e) {
                            if (!a.enabled)
                                return;
                            const n = a
                              , i = Number(new Date)
                              , o = i - (r || i);
                            n.diff = o,
                            n.prev = r,
                            n.curr = i,
                            r = i,
                            e[0] = t.coerce(e[0]),
                            "string" != typeof e[0] && e.unshift("%O");
                            let s = 0;
                            e[0] = e[0].replace(/%([a-zA-Z%])/g, ( (r, i) => {
                                if ("%%" === r)
                                    return "%";
                                s++;
                                const o = t.formatters[i];
                                if ("function" == typeof o) {
                                    const t = e[s];
                                    r = o.call(n, t),
                                    e.splice(s, 1),
                                    s--
                                }
                                return r
                            }
                            )),
                            t.formatArgs.call(n, e);
                            (n.log || t.log).apply(n, e)
                        }
                        return a.namespace = e,
                        a.useColors = t.useColors(),
                        a.color = t.selectColor(e),
                        a.extend = n,
                        a.destroy = t.destroy,
                        Object.defineProperty(a, "enabled", {
                            enumerable: !0,
                            configurable: !1,
                            get: () => null !== s ? s : (i !== t.namespaces && (i = t.namespaces,
                            o = t.enabled(e)),
                            o),
                            set: e => {
                                s = e
                            }
                        }),
                        "function" == typeof t.init && t.init(a),
                        a
                    }
                    function n(e, r) {
                        const n = t(this.namespace + (void 0 === r ? ":" : r) + e);
                        return n.log = this.log,
                        n
                    }
                    function i(e) {
                        return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, "*")
                    }
                    return t.debug = t,
                    t.default = t,
                    t.coerce = function(e) {
                        if (e instanceof Error)
                            return e.stack || e.message;
                        return e
                    }
                    ,
                    t.disable = function() {
                        const e = [...t.names.map(i), ...t.skips.map(i).map((e => "-" + e))].join(",");
                        return t.enable(""),
                        e
                    }
                    ,
                    t.enable = function(e) {
                        let r;
                        t.save(e),
                        t.namespaces = e,
                        t.names = [],
                        t.skips = [];
                        const n = ("string" == typeof e ? e : "").split(/[\s,]+/)
                          , i = n.length;
                        for (r = 0; r < i; r++)
                            n[r] && ("-" === (e = n[r].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e.substr(1) + "$")) : t.names.push(new RegExp("^" + e + "$")))
                    }
                    ,
                    t.enabled = function(e) {
                        if ("*" === e[e.length - 1])
                            return !0;
                        let r, n;
                        for (r = 0,
                        n = t.skips.length; r < n; r++)
                            if (t.skips[r].test(e))
                                return !1;
                        for (r = 0,
                        n = t.names.length; r < n; r++)
                            if (t.names[r].test(e))
                                return !0;
                        return !1
                    }
                    ,
                    t.humanize = r(7824),
                    t.destroy = function() {
                        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")
                    }
                    ,
                    Object.keys(e).forEach((r => {
                        t[r] = e[r]
                    }
                    )),
                    t.names = [],
                    t.skips = [],
                    t.formatters = {},
                    t.selectColor = function(e) {
                        let r = 0;
                        for (let t = 0; t < e.length; t++)
                            r = (r << 5) - r + e.charCodeAt(t),
                            r |= 0;
                        return t.colors[Math.abs(r) % t.colors.length]
                    }
                    ,
                    t.enable(t.load()),
                    t
                }
            }
            ,
            7187: e => {
                "use strict";
                var t, r = "object" == typeof Reflect ? Reflect : null, n = r && "function" == typeof r.apply ? r.apply : function(e, t, r) {
                    return Function.prototype.apply.call(e, t, r)
                }
                ;
                t = r && "function" == typeof r.ownKeys ? r.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
                }
                : function(e) {
                    return Object.getOwnPropertyNames(e)
                }
                ;
                var i = Number.isNaN || function(e) {
                    return e != e
                }
                ;
                function o() {
                    o.init.call(this)
                }
                e.exports = o,
                e.exports.once = function(e, t) {
                    return new Promise((function(r, n) {
                        function i() {
                            void 0 !== o && e.removeListener("error", o),
                            r([].slice.call(arguments))
                        }
                        var o;
                        "error" !== t && (o = function(r) {
                            e.removeListener(t, i),
                            n(r)
                        }
                        ,
                        e.once("error", o)),
                        e.once(t, i)
                    }
                    ))
                }
                ,
                o.EventEmitter = o,
                o.prototype._events = void 0,
                o.prototype._eventsCount = 0,
                o.prototype._maxListeners = void 0;
                var s = 10;
                function a(e) {
                    if ("function" != typeof e)
                        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
                }
                function c(e) {
                    return void 0 === e._maxListeners ? o.defaultMaxListeners : e._maxListeners
                }
                function u(e, t, r, n) {
                    var i, o, s, u;
                    if (a(r),
                    void 0 === (o = e._events) ? (o = e._events = Object.create(null),
                    e._eventsCount = 0) : (void 0 !== o.newListener && (e.emit("newListener", t, r.listener ? r.listener : r),
                    o = e._events),
                    s = o[t]),
                    void 0 === s)
                        s = o[t] = r,
                        ++e._eventsCount;
                    else if ("function" == typeof s ? s = o[t] = n ? [r, s] : [s, r] : n ? s.unshift(r) : s.push(r),
                    (i = c(e)) > 0 && s.length > i && !s.warned) {
                        s.warned = !0;
                        var l = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                        l.name = "MaxListenersExceededWarning",
                        l.emitter = e,
                        l.type = t,
                        l.count = s.length,
                        u = l,
                        console && console.warn && console.warn(u)
                    }
                    return e
                }
                function l() {
                    if (!this.fired)
                        return this.target.removeListener(this.type, this.wrapFn),
                        this.fired = !0,
                        0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
                }
                function h(e, t, r) {
                    var n = {
                        fired: !1,
                        wrapFn: void 0,
                        target: e,
                        type: t,
                        listener: r
                    }
                      , i = l.bind(n);
                    return i.listener = r,
                    n.wrapFn = i,
                    i
                }
                function d(e, t, r) {
                    var n = e._events;
                    if (void 0 === n)
                        return [];
                    var i = n[t];
                    return void 0 === i ? [] : "function" == typeof i ? r ? [i.listener || i] : [i] : r ? function(e) {
                        for (var t = new Array(e.length), r = 0; r < t.length; ++r)
                            t[r] = e[r].listener || e[r];
                        return t
                    }(i) : p(i, i.length)
                }
                function f(e) {
                    var t = this._events;
                    if (void 0 !== t) {
                        var r = t[e];
                        if ("function" == typeof r)
                            return 1;
                        if (void 0 !== r)
                            return r.length
                    }
                    return 0
                }
                function p(e, t) {
                    for (var r = new Array(t), n = 0; n < t; ++n)
                        r[n] = e[n];
                    return r
                }
                Object.defineProperty(o, "defaultMaxListeners", {
                    enumerable: !0,
                    get: function() {
                        return s
                    },
                    set: function(e) {
                        if ("number" != typeof e || e < 0 || i(e))
                            throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                        s = e
                    }
                }),
                o.init = function() {
                    void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null),
                    this._eventsCount = 0),
                    this._maxListeners = this._maxListeners || void 0
                }
                ,
                o.prototype.setMaxListeners = function(e) {
                    if ("number" != typeof e || e < 0 || i(e))
                        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                    return this._maxListeners = e,
                    this
                }
                ,
                o.prototype.getMaxListeners = function() {
                    return c(this)
                }
                ,
                o.prototype.emit = function(e) {
                    for (var t = [], r = 1; r < arguments.length; r++)
                        t.push(arguments[r]);
                    var i = "error" === e
                      , o = this._events;
                    if (void 0 !== o)
                        i = i && void 0 === o.error;
                    else if (!i)
                        return !1;
                    if (i) {
                        var s;
                        if (t.length > 0 && (s = t[0]),
                        s instanceof Error)
                            throw s;
                        var a = new Error("Unhandled error." + (s ? " (" + s.message + ")" : ""));
                        throw a.context = s,
                        a
                    }
                    var c = o[e];
                    if (void 0 === c)
                        return !1;
                    if ("function" == typeof c)
                        n(c, this, t);
                    else {
                        var u = c.length
                          , l = p(c, u);
                        for (r = 0; r < u; ++r)
                            n(l[r], this, t)
                    }
                    return !0
                }
                ,
                o.prototype.addListener = function(e, t) {
                    return u(this, e, t, !1)
                }
                ,
                o.prototype.on = o.prototype.addListener,
                o.prototype.prependListener = function(e, t) {
                    return u(this, e, t, !0)
                }
                ,
                o.prototype.once = function(e, t) {
                    return a(t),
                    this.on(e, h(this, e, t)),
                    this
                }
                ,
                o.prototype.prependOnceListener = function(e, t) {
                    return a(t),
                    this.prependListener(e, h(this, e, t)),
                    this
                }
                ,
                o.prototype.removeListener = function(e, t) {
                    var r, n, i, o, s;
                    if (a(t),
                    void 0 === (n = this._events))
                        return this;
                    if (void 0 === (r = n[e]))
                        return this;
                    if (r === t || r.listener === t)
                        0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[e],
                        n.removeListener && this.emit("removeListener", e, r.listener || t));
                    else if ("function" != typeof r) {
                        for (i = -1,
                        o = r.length - 1; o >= 0; o--)
                            if (r[o] === t || r[o].listener === t) {
                                s = r[o].listener,
                                i = o;
                                break
                            }
                        if (i < 0)
                            return this;
                        0 === i ? r.shift() : function(e, t) {
                            for (; t + 1 < e.length; t++)
                                e[t] = e[t + 1];
                            e.pop()
                        }(r, i),
                        1 === r.length && (n[e] = r[0]),
                        void 0 !== n.removeListener && this.emit("removeListener", e, s || t)
                    }
                    return this
                }
                ,
                o.prototype.off = o.prototype.removeListener,
                o.prototype.removeAllListeners = function(e) {
                    var t, r, n;
                    if (void 0 === (r = this._events))
                        return this;
                    if (void 0 === r.removeListener)
                        return 0 === arguments.length ? (this._events = Object.create(null),
                        this._eventsCount = 0) : void 0 !== r[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[e]),
                        this;
                    if (0 === arguments.length) {
                        var i, o = Object.keys(r);
                        for (n = 0; n < o.length; ++n)
                            "removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                        return this.removeAllListeners("removeListener"),
                        this._events = Object.create(null),
                        this._eventsCount = 0,
                        this
                    }
                    if ("function" == typeof (t = r[e]))
                        this.removeListener(e, t);
                    else if (void 0 !== t)
                        for (n = t.length - 1; n >= 0; n--)
                            this.removeListener(e, t[n]);
                    return this
                }
                ,
                o.prototype.listeners = function(e) {
                    return d(this, e, !0)
                }
                ,
                o.prototype.rawListeners = function(e) {
                    return d(this, e, !1)
                }
                ,
                o.listenerCount = function(e, t) {
                    return "function" == typeof e.listenerCount ? e.listenerCount(t) : f.call(e, t)
                }
                ,
                o.prototype.listenerCount = f,
                o.prototype.eventNames = function() {
                    return this._eventsCount > 0 ? t(this._events) : []
                }
            }
            ,
            645: (e, t) => {
                t.read = function(e, t, r, n, i) {
                    var o, s, a = 8 * i - n - 1, c = (1 << a) - 1, u = c >> 1, l = -7, h = r ? i - 1 : 0, d = r ? -1 : 1, f = e[t + h];
                    for (h += d,
                    o = f & (1 << -l) - 1,
                    f >>= -l,
                    l += a; l > 0; o = 256 * o + e[t + h],
                    h += d,
                    l -= 8)
                        ;
                    for (s = o & (1 << -l) - 1,
                    o >>= -l,
                    l += n; l > 0; s = 256 * s + e[t + h],
                    h += d,
                    l -= 8)
                        ;
                    if (0 === o)
                        o = 1 - u;
                    else {
                        if (o === c)
                            return s ? NaN : 1 / 0 * (f ? -1 : 1);
                        s += Math.pow(2, n),
                        o -= u
                    }
                    return (f ? -1 : 1) * s * Math.pow(2, o - n)
                }
                ,
                t.write = function(e, t, r, n, i, o) {
                    var s, a, c, u = 8 * o - i - 1, l = (1 << u) - 1, h = l >> 1, d = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = n ? 0 : o - 1, p = n ? 1 : -1, m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                    for (t = Math.abs(t),
                    isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0,
                    s = l) : (s = Math.floor(Math.log(t) / Math.LN2),
                    t * (c = Math.pow(2, -s)) < 1 && (s--,
                    c *= 2),
                    (t += s + h >= 1 ? d / c : d * Math.pow(2, 1 - h)) * c >= 2 && (s++,
                    c /= 2),
                    s + h >= l ? (a = 0,
                    s = l) : s + h >= 1 ? (a = (t * c - 1) * Math.pow(2, i),
                    s += h) : (a = t * Math.pow(2, h - 1) * Math.pow(2, i),
                    s = 0)); i >= 8; e[r + f] = 255 & a,
                    f += p,
                    a /= 256,
                    i -= 8)
                        ;
                    for (s = s << i | a,
                    u += i; u > 0; e[r + f] = 255 & s,
                    f += p,
                    s /= 256,
                    u -= 8)
                        ;
                    e[r + f - p] |= 128 * m
                }
            }
            ,
            5717: e => {
                "function" == typeof Object.create ? e.exports = function(e, t) {
                    t && (e.super_ = t,
                    e.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }))
                }
                : e.exports = function(e, t) {
                    if (t) {
                        e.super_ = t;
                        var r = function() {};
                        r.prototype = t.prototype,
                        e.prototype = new r,
                        e.prototype.constructor = e
                    }
                }
            }
            ,
            7824: e => {
                var t = 1e3
                  , r = 60 * t
                  , n = 60 * r
                  , i = 24 * n
                  , o = 7 * i
                  , s = 365.25 * i;
                function a(e, t, r, n) {
                    var i = t >= 1.5 * r;
                    return Math.round(e / r) + " " + n + (i ? "s" : "")
                }
                e.exports = function(e, c) {
                    c = c || {};
                    var u = typeof e;
                    if ("string" === u && e.length > 0)
                        return function(e) {
                            if ((e = String(e)).length > 100)
                                return;
                            var a = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);
                            if (!a)
                                return;
                            var c = parseFloat(a[1]);
                            switch ((a[2] || "ms").toLowerCase()) {
                            case "years":
                            case "year":
                            case "yrs":
                            case "yr":
                            case "y":
                                return c * s;
                            case "weeks":
                            case "week":
                            case "w":
                                return c * o;
                            case "days":
                            case "day":
                            case "d":
                                return c * i;
                            case "hours":
                            case "hour":
                            case "hrs":
                            case "hr":
                            case "h":
                                return c * n;
                            case "minutes":
                            case "minute":
                            case "mins":
                            case "min":
                            case "m":
                                return c * r;
                            case "seconds":
                            case "second":
                            case "secs":
                            case "sec":
                            case "s":
                                return c * t;
                            case "milliseconds":
                            case "millisecond":
                            case "msecs":
                            case "msec":
                            case "ms":
                                return c;
                            default:
                                return
                            }
                        }(e);
                    if ("number" === u && isFinite(e))
                        return c.long ? function(e) {
                            var o = Math.abs(e);
                            if (o >= i)
                                return a(e, o, i, "day");
                            if (o >= n)
                                return a(e, o, n, "hour");
                            if (o >= r)
                                return a(e, o, r, "minute");
                            if (o >= t)
                                return a(e, o, t, "second");
                            return e + " ms"
                        }(e) : function(e) {
                            var o = Math.abs(e);
                            if (o >= i)
                                return Math.round(e / i) + "d";
                            if (o >= n)
                                return Math.round(e / n) + "h";
                            if (o >= r)
                                return Math.round(e / r) + "m";
                            if (o >= t)
                                return Math.round(e / t) + "s";
                            return e + "ms"
                        }(e);
                    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e))
                }
            }
            ,
            4155: e => {
                var t, r, n = e.exports = {};
                function i() {
                    throw new Error("setTimeout has not been defined")
                }
                function o() {
                    throw new Error("clearTimeout has not been defined")
                }
                function s(e) {
                    if (t === setTimeout)
                        return setTimeout(e, 0);
                    if ((t === i || !t) && setTimeout)
                        return t = setTimeout,
                        setTimeout(e, 0);
                    try {
                        return t(e, 0)
                    } catch (r) {
                        try {
                            return t.call(null, e, 0)
                        } catch (r) {
                            return t.call(this, e, 0)
                        }
                    }
                }
                !function() {
                    try {
                        t = "function" == typeof setTimeout ? setTimeout : i
                    } catch (e) {
                        t = i
                    }
                    try {
                        r = "function" == typeof clearTimeout ? clearTimeout : o
                    } catch (e) {
                        r = o
                    }
                }();
                var a, c = [], u = !1, l = -1;
                function h() {
                    u && a && (u = !1,
                    a.length ? c = a.concat(c) : l = -1,
                    c.length && d())
                }
                function d() {
                    if (!u) {
                        var e = s(h);
                        u = !0;
                        for (var t = c.length; t; ) {
                            for (a = c,
                            c = []; ++l < t; )
                                a && a[l].run();
                            l = -1,
                            t = c.length
                        }
                        a = null,
                        u = !1,
                        function(e) {
                            if (r === clearTimeout)
                                return clearTimeout(e);
                            if ((r === o || !r) && clearTimeout)
                                return r = clearTimeout,
                                clearTimeout(e);
                            try {
                                r(e)
                            } catch (t) {
                                try {
                                    return r.call(null, e)
                                } catch (t) {
                                    return r.call(this, e)
                                }
                            }
                        }(e)
                    }
                }
                function f(e, t) {
                    this.fun = e,
                    this.array = t
                }
                function p() {}
                n.nextTick = function(e) {
                    var t = new Array(arguments.length - 1);
                    if (arguments.length > 1)
                        for (var r = 1; r < arguments.length; r++)
                            t[r - 1] = arguments[r];
                    c.push(new f(e,t)),
                    1 !== c.length || u || s(d)
                }
                ,
                f.prototype.run = function() {
                    this.fun.apply(null, this.array)
                }
                ,
                n.title = "browser",
                n.browser = !0,
                n.env = {},
                n.argv = [],
                n.version = "",
                n.versions = {},
                n.on = p,
                n.addListener = p,
                n.once = p,
                n.off = p,
                n.removeListener = p,
                n.removeAllListeners = p,
                n.emit = p,
                n.prependListener = p,
                n.prependOnceListener = p,
                n.listeners = function(e) {
                    return []
                }
                ,
                n.binding = function(e) {
                    throw new Error("process.binding is not supported")
                }
                ,
                n.cwd = function() {
                    return "/"
                }
                ,
                n.chdir = function(e) {
                    throw new Error("process.chdir is not supported")
                }
                ,
                n.umask = function() {
                    return 0
                }
            }
            ,
            4281: e => {
                "use strict";
                var t = {};
                function r(e, r, n) {
                    n || (n = Error);
                    var i = function(e) {
                        var t, n;
                        function i(t, n, i) {
                            return e.call(this, function(e, t, n) {
                                return "string" == typeof r ? r : r(e, t, n)
                            }(t, n, i)) || this
                        }
                        return n = e,
                        (t = i).prototype = Object.create(n.prototype),
                        t.prototype.constructor = t,
                        t.__proto__ = n,
                        i
                    }(n);
                    i.prototype.name = n.name,
                    i.prototype.code = e,
                    t[e] = i
                }
                function n(e, t) {
                    if (Array.isArray(e)) {
                        var r = e.length;
                        return e = e.map((function(e) {
                            return String(e)
                        }
                        )),
                        r > 2 ? "one of ".concat(t, " ").concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1] : 2 === r ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0])
                    }
                    return "of ".concat(t, " ").concat(String(e))
                }
                r("ERR_INVALID_OPT_VALUE", (function(e, t) {
                    return 'The value "' + t + '" is invalid for option "' + e + '"'
                }
                ), TypeError),
                r("ERR_INVALID_ARG_TYPE", (function(e, t, r) {
                    var i, o, s, a;
                    if ("string" == typeof t && (o = "not ",
                    t.substr(!s || s < 0 ? 0 : +s, o.length) === o) ? (i = "must not be",
                    t = t.replace(/^not /, "")) : i = "must be",
                    function(e, t, r) {
                        return (void 0 === r || r > e.length) && (r = e.length),
                        e.substring(r - t.length, r) === t
                    }(e, " argument"))
                        a = "The ".concat(e, " ").concat(i, " ").concat(n(t, "type"));
                    else {
                        var c = function(e, t, r) {
                            return "number" != typeof r && (r = 0),
                            !(r + t.length > e.length) && -1 !== e.indexOf(t, r)
                        }(e, ".") ? "property" : "argument";
                        a = 'The "'.concat(e, '" ').concat(c, " ").concat(i, " ").concat(n(t, "type"))
                    }
                    return a += ". Received type ".concat(typeof r)
                }
                ), TypeError),
                r("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
                r("ERR_METHOD_NOT_IMPLEMENTED", (function(e) {
                    return "The " + e + " method is not implemented"
                }
                )),
                r("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
                r("ERR_STREAM_DESTROYED", (function(e) {
                    return "Cannot call " + e + " after a stream was destroyed"
                }
                )),
                r("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
                r("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
                r("ERR_STREAM_WRITE_AFTER_END", "write after end"),
                r("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError),
                r("ERR_UNKNOWN_ENCODING", (function(e) {
                    return "Unknown encoding: " + e
                }
                ), TypeError),
                r("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"),
                e.exports.q = t
            }
            ,
            6753: (e, t, r) => {
                "use strict";
                var n = r(4155)
                  , i = Object.keys || function(e) {
                    var t = [];
                    for (var r in e)
                        t.push(r);
                    return t
                }
                ;
                e.exports = l;
                var o = r(9481)
                  , s = r(4229);
                r(5717)(l, o);
                for (var a = i(s.prototype), c = 0; c < a.length; c++) {
                    var u = a[c];
                    l.prototype[u] || (l.prototype[u] = s.prototype[u])
                }
                function l(e) {
                    if (!(this instanceof l))
                        return new l(e);
                    o.call(this, e),
                    s.call(this, e),
                    this.allowHalfOpen = !0,
                    e && (!1 === e.readable && (this.readable = !1),
                    !1 === e.writable && (this.writable = !1),
                    !1 === e.allowHalfOpen && (this.allowHalfOpen = !1,
                    this.once("end", h)))
                }
                function h() {
                    this._writableState.ended || n.nextTick(d, this)
                }
                function d(e) {
                    e.end()
                }
                Object.defineProperty(l.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark
                    }
                }),
                Object.defineProperty(l.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState && this._writableState.getBuffer()
                    }
                }),
                Object.defineProperty(l.prototype, "writableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.length
                    }
                }),
                Object.defineProperty(l.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed)
                    },
                    set: function(e) {
                        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e,
                        this._writableState.destroyed = e)
                    }
                })
            }
            ,
            2725: (e, t, r) => {
                "use strict";
                e.exports = i;
                var n = r(4605);
                function i(e) {
                    if (!(this instanceof i))
                        return new i(e);
                    n.call(this, e)
                }
                r(5717)(i, n),
                i.prototype._transform = function(e, t, r) {
                    r(null, e)
                }
            }
            ,
            9481: (e, t, r) => {
                "use strict";
                var n, i = r(4155);
                e.exports = x,
                x.ReadableState = T;
                r(7187).EventEmitter;
                var o = function(e, t) {
                    return e.listeners(t).length
                }
                  , s = r(2503)
                  , a = r(8764).Buffer
                  , c = r.g.Uint8Array || function() {}
                ;
                var u, l = r(4616);
                u = l && l.debuglog ? l.debuglog("stream") : function() {}
                ;
                var h, d, f, p = r(7327), m = r(1195), g = r(2457).getHighWaterMark, y = r(4281).q, b = y.ERR_INVALID_ARG_TYPE, v = y.ERR_STREAM_PUSH_AFTER_EOF, w = y.ERR_METHOD_NOT_IMPLEMENTED, _ = y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
                r(5717)(x, s);
                var S = m.errorOrDestroy
                  , E = ["error", "close", "destroy", "pause", "resume"];
                function T(e, t, i) {
                    n = n || r(6753),
                    e = e || {},
                    "boolean" != typeof i && (i = t instanceof n),
                    this.objectMode = !!e.objectMode,
                    i && (this.objectMode = this.objectMode || !!e.readableObjectMode),
                    this.highWaterMark = g(this, e, "readableHighWaterMark", i),
                    this.buffer = new p,
                    this.length = 0,
                    this.pipes = null,
                    this.pipesCount = 0,
                    this.flowing = null,
                    this.ended = !1,
                    this.endEmitted = !1,
                    this.reading = !1,
                    this.sync = !0,
                    this.needReadable = !1,
                    this.emittedReadable = !1,
                    this.readableListening = !1,
                    this.resumeScheduled = !1,
                    this.paused = !0,
                    this.emitClose = !1 !== e.emitClose,
                    this.autoDestroy = !!e.autoDestroy,
                    this.destroyed = !1,
                    this.defaultEncoding = e.defaultEncoding || "utf8",
                    this.awaitDrain = 0,
                    this.readingMore = !1,
                    this.decoder = null,
                    this.encoding = null,
                    e.encoding && (h || (h = r(2553).s),
                    this.decoder = new h(e.encoding),
                    this.encoding = e.encoding)
                }
                function x(e) {
                    if (n = n || r(6753),
                    !(this instanceof x))
                        return new x(e);
                    var t = this instanceof n;
                    this._readableState = new T(e,this,t),
                    this.readable = !0,
                    e && ("function" == typeof e.read && (this._read = e.read),
                    "function" == typeof e.destroy && (this._destroy = e.destroy)),
                    s.call(this)
                }
                function R(e, t, r, n, i) {
                    u("readableAddChunk", t);
                    var o, s = e._readableState;
                    if (null === t)
                        s.reading = !1,
                        function(e, t) {
                            if (u("onEofChunk"),
                            t.ended)
                                return;
                            if (t.decoder) {
                                var r = t.decoder.end();
                                r && r.length && (t.buffer.push(r),
                                t.length += t.objectMode ? 1 : r.length)
                            }
                            t.ended = !0,
                            t.sync ? I(e) : (t.needReadable = !1,
                            t.emittedReadable || (t.emittedReadable = !0,
                            k(e)))
                        }(e, s);
                    else if (i || (o = function(e, t) {
                        var r;
                        n = t,
                        a.isBuffer(n) || n instanceof c || "string" == typeof t || void 0 === t || e.objectMode || (r = new b("chunk",["string", "Buffer", "Uint8Array"],t));
                        var n;
                        return r
                    }(s, t)),
                    o)
                        S(e, o);
                    else if (s.objectMode || t && t.length > 0)
                        if ("string" == typeof t || s.objectMode || Object.getPrototypeOf(t) === a.prototype || (t = function(e) {
                            return a.from(e)
                        }(t)),
                        n)
                            s.endEmitted ? S(e, new _) : C(e, s, t, !0);
                        else if (s.ended)
                            S(e, new v);
                        else {
                            if (s.destroyed)
                                return !1;
                            s.reading = !1,
                            s.decoder && !r ? (t = s.decoder.write(t),
                            s.objectMode || 0 !== t.length ? C(e, s, t, !1) : B(e, s)) : C(e, s, t, !1)
                        }
                    else
                        n || (s.reading = !1,
                        B(e, s));
                    return !s.ended && (s.length < s.highWaterMark || 0 === s.length)
                }
                function C(e, t, r, n) {
                    t.flowing && 0 === t.length && !t.sync ? (t.awaitDrain = 0,
                    e.emit("data", r)) : (t.length += t.objectMode ? 1 : r.length,
                    n ? t.buffer.unshift(r) : t.buffer.push(r),
                    t.needReadable && I(e)),
                    B(e, t)
                }
                Object.defineProperty(x.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._readableState && this._readableState.destroyed
                    },
                    set: function(e) {
                        this._readableState && (this._readableState.destroyed = e)
                    }
                }),
                x.prototype.destroy = m.destroy,
                x.prototype._undestroy = m.undestroy,
                x.prototype._destroy = function(e, t) {
                    t(e)
                }
                ,
                x.prototype.push = function(e, t) {
                    var r, n = this._readableState;
                    return n.objectMode ? r = !0 : "string" == typeof e && ((t = t || n.defaultEncoding) !== n.encoding && (e = a.from(e, t),
                    t = ""),
                    r = !0),
                    R(this, e, t, !1, r)
                }
                ,
                x.prototype.unshift = function(e) {
                    return R(this, e, null, !0, !1)
                }
                ,
                x.prototype.isPaused = function() {
                    return !1 === this._readableState.flowing
                }
                ,
                x.prototype.setEncoding = function(e) {
                    h || (h = r(2553).s);
                    var t = new h(e);
                    this._readableState.decoder = t,
                    this._readableState.encoding = this._readableState.decoder.encoding;
                    for (var n = this._readableState.buffer.head, i = ""; null !== n; )
                        i += t.write(n.data),
                        n = n.next;
                    return this._readableState.buffer.clear(),
                    "" !== i && this._readableState.buffer.push(i),
                    this._readableState.length = i.length,
                    this
                }
                ;
                var O = 1073741824;
                function P(e, t) {
                    return e <= 0 || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e != e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = function(e) {
                        return e >= O ? e = O : (e--,
                        e |= e >>> 1,
                        e |= e >>> 2,
                        e |= e >>> 4,
                        e |= e >>> 8,
                        e |= e >>> 16,
                        e++),
                        e
                    }(e)),
                    e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0,
                    0))
                }
                function I(e) {
                    var t = e._readableState;
                    u("emitReadable", t.needReadable, t.emittedReadable),
                    t.needReadable = !1,
                    t.emittedReadable || (u("emitReadable", t.flowing),
                    t.emittedReadable = !0,
                    i.nextTick(k, e))
                }
                function k(e) {
                    var t = e._readableState;
                    u("emitReadable_", t.destroyed, t.length, t.ended),
                    t.destroyed || !t.length && !t.ended || (e.emit("readable"),
                    t.emittedReadable = !1),
                    t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark,
                    M(e)
                }
                function B(e, t) {
                    t.readingMore || (t.readingMore = !0,
                    i.nextTick(L, e, t))
                }
                function L(e, t) {
                    for (; !t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && 0 === t.length); ) {
                        var r = t.length;
                        if (u("maybeReadMore read 0"),
                        e.read(0),
                        r === t.length)
                            break
                    }
                    t.readingMore = !1
                }
                function A(e) {
                    var t = e._readableState;
                    t.readableListening = e.listenerCount("readable") > 0,
                    t.resumeScheduled && !t.paused ? t.flowing = !0 : e.listenerCount("data") > 0 && e.resume()
                }
                function U(e) {
                    u("readable nexttick read 0"),
                    e.read(0)
                }
                function j(e, t) {
                    u("resume", t.reading),
                    t.reading || e.read(0),
                    t.resumeScheduled = !1,
                    e.emit("resume"),
                    M(e),
                    t.flowing && !t.reading && e.read(0)
                }
                function M(e) {
                    var t = e._readableState;
                    for (u("flow", t.flowing); t.flowing && null !== e.read(); )
                        ;
                }
                function D(e, t) {
                    return 0 === t.length ? null : (t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (r = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.first() : t.buffer.concat(t.length),
                    t.buffer.clear()) : r = t.buffer.consume(e, t.decoder),
                    r);
                    var r
                }
                function N(e) {
                    var t = e._readableState;
                    u("endReadable", t.endEmitted),
                    t.endEmitted || (t.ended = !0,
                    i.nextTick(F, t, e))
                }
                function F(e, t) {
                    if (u("endReadableNT", e.endEmitted, e.length),
                    !e.endEmitted && 0 === e.length && (e.endEmitted = !0,
                    t.readable = !1,
                    t.emit("end"),
                    e.autoDestroy)) {
                        var r = t._writableState;
                        (!r || r.autoDestroy && r.finished) && t.destroy()
                    }
                }
                function q(e, t) {
                    for (var r = 0, n = e.length; r < n; r++)
                        if (e[r] === t)
                            return r;
                    return -1
                }
                x.prototype.read = function(e) {
                    u("read", e),
                    e = parseInt(e, 10);
                    var t = this._readableState
                      , r = e;
                    if (0 !== e && (t.emittedReadable = !1),
                    0 === e && t.needReadable && ((0 !== t.highWaterMark ? t.length >= t.highWaterMark : t.length > 0) || t.ended))
                        return u("read: emitReadable", t.length, t.ended),
                        0 === t.length && t.ended ? N(this) : I(this),
                        null;
                    if (0 === (e = P(e, t)) && t.ended)
                        return 0 === t.length && N(this),
                        null;
                    var n, i = t.needReadable;
                    return u("need readable", i),
                    (0 === t.length || t.length - e < t.highWaterMark) && u("length less than watermark", i = !0),
                    t.ended || t.reading ? u("reading or ended", i = !1) : i && (u("do read"),
                    t.reading = !0,
                    t.sync = !0,
                    0 === t.length && (t.needReadable = !0),
                    this._read(t.highWaterMark),
                    t.sync = !1,
                    t.reading || (e = P(r, t))),
                    null === (n = e > 0 ? D(e, t) : null) ? (t.needReadable = t.length <= t.highWaterMark,
                    e = 0) : (t.length -= e,
                    t.awaitDrain = 0),
                    0 === t.length && (t.ended || (t.needReadable = !0),
                    r !== e && t.ended && N(this)),
                    null !== n && this.emit("data", n),
                    n
                }
                ,
                x.prototype._read = function(e) {
                    S(this, new w("_read()"))
                }
                ,
                x.prototype.pipe = function(e, t) {
                    var r = this
                      , n = this._readableState;
                    switch (n.pipesCount) {
                    case 0:
                        n.pipes = e;
                        break;
                    case 1:
                        n.pipes = [n.pipes, e];
                        break;
                    default:
                        n.pipes.push(e)
                    }
                    n.pipesCount += 1,
                    u("pipe count=%d opts=%j", n.pipesCount, t);
                    var s = (!t || !1 !== t.end) && e !== i.stdout && e !== i.stderr ? c : g;
                    function a(t, i) {
                        u("onunpipe"),
                        t === r && i && !1 === i.hasUnpiped && (i.hasUnpiped = !0,
                        u("cleanup"),
                        e.removeListener("close", p),
                        e.removeListener("finish", m),
                        e.removeListener("drain", l),
                        e.removeListener("error", f),
                        e.removeListener("unpipe", a),
                        r.removeListener("end", c),
                        r.removeListener("end", g),
                        r.removeListener("data", d),
                        h = !0,
                        !n.awaitDrain || e._writableState && !e._writableState.needDrain || l())
                    }
                    function c() {
                        u("onend"),
                        e.end()
                    }
                    n.endEmitted ? i.nextTick(s) : r.once("end", s),
                    e.on("unpipe", a);
                    var l = function(e) {
                        return function() {
                            var t = e._readableState;
                            u("pipeOnDrain", t.awaitDrain),
                            t.awaitDrain && t.awaitDrain--,
                            0 === t.awaitDrain && o(e, "data") && (t.flowing = !0,
                            M(e))
                        }
                    }(r);
                    e.on("drain", l);
                    var h = !1;
                    function d(t) {
                        u("ondata");
                        var i = e.write(t);
                        u("dest.write", i),
                        !1 === i && ((1 === n.pipesCount && n.pipes === e || n.pipesCount > 1 && -1 !== q(n.pipes, e)) && !h && (u("false write response, pause", n.awaitDrain),
                        n.awaitDrain++),
                        r.pause())
                    }
                    function f(t) {
                        u("onerror", t),
                        g(),
                        e.removeListener("error", f),
                        0 === o(e, "error") && S(e, t)
                    }
                    function p() {
                        e.removeListener("finish", m),
                        g()
                    }
                    function m() {
                        u("onfinish"),
                        e.removeListener("close", p),
                        g()
                    }
                    function g() {
                        u("unpipe"),
                        r.unpipe(e)
                    }
                    return r.on("data", d),
                    function(e, t, r) {
                        if ("function" == typeof e.prependListener)
                            return e.prependListener(t, r);
                        e._events && e._events[t] ? Array.isArray(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]] : e.on(t, r)
                    }(e, "error", f),
                    e.once("close", p),
                    e.once("finish", m),
                    e.emit("pipe", r),
                    n.flowing || (u("pipe resume"),
                    r.resume()),
                    e
                }
                ,
                x.prototype.unpipe = function(e) {
                    var t = this._readableState
                      , r = {
                        hasUnpiped: !1
                    };
                    if (0 === t.pipesCount)
                        return this;
                    if (1 === t.pipesCount)
                        return e && e !== t.pipes || (e || (e = t.pipes),
                        t.pipes = null,
                        t.pipesCount = 0,
                        t.flowing = !1,
                        e && e.emit("unpipe", this, r)),
                        this;
                    if (!e) {
                        var n = t.pipes
                          , i = t.pipesCount;
                        t.pipes = null,
                        t.pipesCount = 0,
                        t.flowing = !1;
                        for (var o = 0; o < i; o++)
                            n[o].emit("unpipe", this, {
                                hasUnpiped: !1
                            });
                        return this
                    }
                    var s = q(t.pipes, e);
                    return -1 === s || (t.pipes.splice(s, 1),
                    t.pipesCount -= 1,
                    1 === t.pipesCount && (t.pipes = t.pipes[0]),
                    e.emit("unpipe", this, r)),
                    this
                }
                ,
                x.prototype.on = function(e, t) {
                    var r = s.prototype.on.call(this, e, t)
                      , n = this._readableState;
                    return "data" === e ? (n.readableListening = this.listenerCount("readable") > 0,
                    !1 !== n.flowing && this.resume()) : "readable" === e && (n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0,
                    n.flowing = !1,
                    n.emittedReadable = !1,
                    u("on readable", n.length, n.reading),
                    n.length ? I(this) : n.reading || i.nextTick(U, this))),
                    r
                }
                ,
                x.prototype.addListener = x.prototype.on,
                x.prototype.removeListener = function(e, t) {
                    var r = s.prototype.removeListener.call(this, e, t);
                    return "readable" === e && i.nextTick(A, this),
                    r
                }
                ,
                x.prototype.removeAllListeners = function(e) {
                    var t = s.prototype.removeAllListeners.apply(this, arguments);
                    return "readable" !== e && void 0 !== e || i.nextTick(A, this),
                    t
                }
                ,
                x.prototype.resume = function() {
                    var e = this._readableState;
                    return e.flowing || (u("resume"),
                    e.flowing = !e.readableListening,
                    function(e, t) {
                        t.resumeScheduled || (t.resumeScheduled = !0,
                        i.nextTick(j, e, t))
                    }(this, e)),
                    e.paused = !1,
                    this
                }
                ,
                x.prototype.pause = function() {
                    return u("call pause flowing=%j", this._readableState.flowing),
                    !1 !== this._readableState.flowing && (u("pause"),
                    this._readableState.flowing = !1,
                    this.emit("pause")),
                    this._readableState.paused = !0,
                    this
                }
                ,
                x.prototype.wrap = function(e) {
                    var t = this
                      , r = this._readableState
                      , n = !1;
                    for (var i in e.on("end", (function() {
                        if (u("wrapped end"),
                        r.decoder && !r.ended) {
                            var e = r.decoder.end();
                            e && e.length && t.push(e)
                        }
                        t.push(null)
                    }
                    )),
                    e.on("data", (function(i) {
                        (u("wrapped data"),
                        r.decoder && (i = r.decoder.write(i)),
                        r.objectMode && null == i) || (r.objectMode || i && i.length) && (t.push(i) || (n = !0,
                        e.pause()))
                    }
                    )),
                    e)
                        void 0 === this[i] && "function" == typeof e[i] && (this[i] = function(t) {
                            return function() {
                                return e[t].apply(e, arguments)
                            }
                        }(i));
                    for (var o = 0; o < E.length; o++)
                        e.on(E[o], this.emit.bind(this, E[o]));
                    return this._read = function(t) {
                        u("wrapped _read", t),
                        n && (n = !1,
                        e.resume())
                    }
                    ,
                    this
                }
                ,
                "function" == typeof Symbol && (x.prototype[Symbol.asyncIterator] = function() {
                    return void 0 === d && (d = r(5850)),
                    d(this)
                }
                ),
                Object.defineProperty(x.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.highWaterMark
                    }
                }),
                Object.defineProperty(x.prototype, "readableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState && this._readableState.buffer
                    }
                }),
                Object.defineProperty(x.prototype, "readableFlowing", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.flowing
                    },
                    set: function(e) {
                        this._readableState && (this._readableState.flowing = e)
                    }
                }),
                x._fromList = D,
                Object.defineProperty(x.prototype, "readableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.length
                    }
                }),
                "function" == typeof Symbol && (x.from = function(e, t) {
                    return void 0 === f && (f = r(5167)),
                    f(x, e, t)
                }
                )
            }
            ,
            4605: (e, t, r) => {
                "use strict";
                e.exports = l;
                var n = r(4281).q
                  , i = n.ERR_METHOD_NOT_IMPLEMENTED
                  , o = n.ERR_MULTIPLE_CALLBACK
                  , s = n.ERR_TRANSFORM_ALREADY_TRANSFORMING
                  , a = n.ERR_TRANSFORM_WITH_LENGTH_0
                  , c = r(6753);
                function u(e, t) {
                    var r = this._transformState;
                    r.transforming = !1;
                    var n = r.writecb;
                    if (null === n)
                        return this.emit("error", new o);
                    r.writechunk = null,
                    r.writecb = null,
                    null != t && this.push(t),
                    n(e);
                    var i = this._readableState;
                    i.reading = !1,
                    (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark)
                }
                function l(e) {
                    if (!(this instanceof l))
                        return new l(e);
                    c.call(this, e),
                    this._transformState = {
                        afterTransform: u.bind(this),
                        needTransform: !1,
                        transforming: !1,
                        writecb: null,
                        writechunk: null,
                        writeencoding: null
                    },
                    this._readableState.needReadable = !0,
                    this._readableState.sync = !1,
                    e && ("function" == typeof e.transform && (this._transform = e.transform),
                    "function" == typeof e.flush && (this._flush = e.flush)),
                    this.on("prefinish", h)
                }
                function h() {
                    var e = this;
                    "function" != typeof this._flush || this._readableState.destroyed ? d(this, null, null) : this._flush((function(t, r) {
                        d(e, t, r)
                    }
                    ))
                }
                function d(e, t, r) {
                    if (t)
                        return e.emit("error", t);
                    if (null != r && e.push(r),
                    e._writableState.length)
                        throw new a;
                    if (e._transformState.transforming)
                        throw new s;
                    return e.push(null)
                }
                r(5717)(l, c),
                l.prototype.push = function(e, t) {
                    return this._transformState.needTransform = !1,
                    c.prototype.push.call(this, e, t)
                }
                ,
                l.prototype._transform = function(e, t, r) {
                    r(new i("_transform()"))
                }
                ,
                l.prototype._write = function(e, t, r) {
                    var n = this._transformState;
                    if (n.writecb = r,
                    n.writechunk = e,
                    n.writeencoding = t,
                    !n.transforming) {
                        var i = this._readableState;
                        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark)
                    }
                }
                ,
                l.prototype._read = function(e) {
                    var t = this._transformState;
                    null === t.writechunk || t.transforming ? t.needTransform = !0 : (t.transforming = !0,
                    this._transform(t.writechunk, t.writeencoding, t.afterTransform))
                }
                ,
                l.prototype._destroy = function(e, t) {
                    c.prototype._destroy.call(this, e, (function(e) {
                        t(e)
                    }
                    ))
                }
            }
            ,
            4229: (e, t, r) => {
                "use strict";
                var n, i = r(4155);
                function o(e) {
                    var t = this;
                    this.next = null,
                    this.entry = null,
                    this.finish = function() {
                        !function(e, t, r) {
                            var n = e.entry;
                            e.entry = null;
                            for (; n; ) {
                                var i = n.callback;
                                t.pendingcb--,
                                i(r),
                                n = n.next
                            }
                            t.corkedRequestsFree.next = e
                        }(t, e)
                    }
                }
                e.exports = x,
                x.WritableState = T;
                var s = {
                    deprecate: r(4927)
                }
                  , a = r(2503)
                  , c = r(8764).Buffer
                  , u = r.g.Uint8Array || function() {}
                ;
                var l, h = r(1195), d = r(2457).getHighWaterMark, f = r(4281).q, p = f.ERR_INVALID_ARG_TYPE, m = f.ERR_METHOD_NOT_IMPLEMENTED, g = f.ERR_MULTIPLE_CALLBACK, y = f.ERR_STREAM_CANNOT_PIPE, b = f.ERR_STREAM_DESTROYED, v = f.ERR_STREAM_NULL_VALUES, w = f.ERR_STREAM_WRITE_AFTER_END, _ = f.ERR_UNKNOWN_ENCODING, S = h.errorOrDestroy;
                function E() {}
                function T(e, t, s) {
                    n = n || r(6753),
                    e = e || {},
                    "boolean" != typeof s && (s = t instanceof n),
                    this.objectMode = !!e.objectMode,
                    s && (this.objectMode = this.objectMode || !!e.writableObjectMode),
                    this.highWaterMark = d(this, e, "writableHighWaterMark", s),
                    this.finalCalled = !1,
                    this.needDrain = !1,
                    this.ending = !1,
                    this.ended = !1,
                    this.finished = !1,
                    this.destroyed = !1;
                    var a = !1 === e.decodeStrings;
                    this.decodeStrings = !a,
                    this.defaultEncoding = e.defaultEncoding || "utf8",
                    this.length = 0,
                    this.writing = !1,
                    this.corked = 0,
                    this.sync = !0,
                    this.bufferProcessing = !1,
                    this.onwrite = function(e) {
                        !function(e, t) {
                            var r = e._writableState
                              , n = r.sync
                              , o = r.writecb;
                            if ("function" != typeof o)
                                throw new g;
                            if (function(e) {
                                e.writing = !1,
                                e.writecb = null,
                                e.length -= e.writelen,
                                e.writelen = 0
                            }(r),
                            t)
                                !function(e, t, r, n, o) {
                                    --t.pendingcb,
                                    r ? (i.nextTick(o, n),
                                    i.nextTick(k, e, t),
                                    e._writableState.errorEmitted = !0,
                                    S(e, n)) : (o(n),
                                    e._writableState.errorEmitted = !0,
                                    S(e, n),
                                    k(e, t))
                                }(e, r, n, t, o);
                            else {
                                var s = P(r) || e.destroyed;
                                s || r.corked || r.bufferProcessing || !r.bufferedRequest || O(e, r),
                                n ? i.nextTick(C, e, r, s, o) : C(e, r, s, o)
                            }
                        }(t, e)
                    }
                    ,
                    this.writecb = null,
                    this.writelen = 0,
                    this.bufferedRequest = null,
                    this.lastBufferedRequest = null,
                    this.pendingcb = 0,
                    this.prefinished = !1,
                    this.errorEmitted = !1,
                    this.emitClose = !1 !== e.emitClose,
                    this.autoDestroy = !!e.autoDestroy,
                    this.bufferedRequestCount = 0,
                    this.corkedRequestsFree = new o(this)
                }
                function x(e) {
                    var t = this instanceof (n = n || r(6753));
                    if (!t && !l.call(x, this))
                        return new x(e);
                    this._writableState = new T(e,this,t),
                    this.writable = !0,
                    e && ("function" == typeof e.write && (this._write = e.write),
                    "function" == typeof e.writev && (this._writev = e.writev),
                    "function" == typeof e.destroy && (this._destroy = e.destroy),
                    "function" == typeof e.final && (this._final = e.final)),
                    a.call(this)
                }
                function R(e, t, r, n, i, o, s) {
                    t.writelen = n,
                    t.writecb = s,
                    t.writing = !0,
                    t.sync = !0,
                    t.destroyed ? t.onwrite(new b("write")) : r ? e._writev(i, t.onwrite) : e._write(i, o, t.onwrite),
                    t.sync = !1
                }
                function C(e, t, r, n) {
                    r || function(e, t) {
                        0 === t.length && t.needDrain && (t.needDrain = !1,
                        e.emit("drain"))
                    }(e, t),
                    t.pendingcb--,
                    n(),
                    k(e, t)
                }
                function O(e, t) {
                    t.bufferProcessing = !0;
                    var r = t.bufferedRequest;
                    if (e._writev && r && r.next) {
                        var n = t.bufferedRequestCount
                          , i = new Array(n)
                          , s = t.corkedRequestsFree;
                        s.entry = r;
                        for (var a = 0, c = !0; r; )
                            i[a] = r,
                            r.isBuf || (c = !1),
                            r = r.next,
                            a += 1;
                        i.allBuffers = c,
                        R(e, t, !0, t.length, i, "", s.finish),
                        t.pendingcb++,
                        t.lastBufferedRequest = null,
                        s.next ? (t.corkedRequestsFree = s.next,
                        s.next = null) : t.corkedRequestsFree = new o(t),
                        t.bufferedRequestCount = 0
                    } else {
                        for (; r; ) {
                            var u = r.chunk
                              , l = r.encoding
                              , h = r.callback;
                            if (R(e, t, !1, t.objectMode ? 1 : u.length, u, l, h),
                            r = r.next,
                            t.bufferedRequestCount--,
                            t.writing)
                                break
                        }
                        null === r && (t.lastBufferedRequest = null)
                    }
                    t.bufferedRequest = r,
                    t.bufferProcessing = !1
                }
                function P(e) {
                    return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing
                }
                function I(e, t) {
                    e._final((function(r) {
                        t.pendingcb--,
                        r && S(e, r),
                        t.prefinished = !0,
                        e.emit("prefinish"),
                        k(e, t)
                    }
                    ))
                }
                function k(e, t) {
                    var r = P(t);
                    if (r && (function(e, t) {
                        t.prefinished || t.finalCalled || ("function" != typeof e._final || t.destroyed ? (t.prefinished = !0,
                        e.emit("prefinish")) : (t.pendingcb++,
                        t.finalCalled = !0,
                        i.nextTick(I, e, t)))
                    }(e, t),
                    0 === t.pendingcb && (t.finished = !0,
                    e.emit("finish"),
                    t.autoDestroy))) {
                        var n = e._readableState;
                        (!n || n.autoDestroy && n.endEmitted) && e.destroy()
                    }
                    return r
                }
                r(5717)(x, a),
                T.prototype.getBuffer = function() {
                    for (var e = this.bufferedRequest, t = []; e; )
                        t.push(e),
                        e = e.next;
                    return t
                }
                ,
                function() {
                    try {
                        Object.defineProperty(T.prototype, "buffer", {
                            get: s.deprecate((function() {
                                return this.getBuffer()
                            }
                            ), "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        })
                    } catch (e) {}
                }(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (l = Function.prototype[Symbol.hasInstance],
                Object.defineProperty(x, Symbol.hasInstance, {
                    value: function(e) {
                        return !!l.call(this, e) || this === x && (e && e._writableState instanceof T)
                    }
                })) : l = function(e) {
                    return e instanceof this
                }
                ,
                x.prototype.pipe = function() {
                    S(this, new y)
                }
                ,
                x.prototype.write = function(e, t, r) {
                    var n, o = this._writableState, s = !1, a = !o.objectMode && (n = e,
                    c.isBuffer(n) || n instanceof u);
                    return a && !c.isBuffer(e) && (e = function(e) {
                        return c.from(e)
                    }(e)),
                    "function" == typeof t && (r = t,
                    t = null),
                    a ? t = "buffer" : t || (t = o.defaultEncoding),
                    "function" != typeof r && (r = E),
                    o.ending ? function(e, t) {
                        var r = new w;
                        S(e, r),
                        i.nextTick(t, r)
                    }(this, r) : (a || function(e, t, r, n) {
                        var o;
                        return null === r ? o = new v : "string" == typeof r || t.objectMode || (o = new p("chunk",["string", "Buffer"],r)),
                        !o || (S(e, o),
                        i.nextTick(n, o),
                        !1)
                    }(this, o, e, r)) && (o.pendingcb++,
                    s = function(e, t, r, n, i, o) {
                        if (!r) {
                            var s = function(e, t, r) {
                                e.objectMode || !1 === e.decodeStrings || "string" != typeof t || (t = c.from(t, r));
                                return t
                            }(t, n, i);
                            n !== s && (r = !0,
                            i = "buffer",
                            n = s)
                        }
                        var a = t.objectMode ? 1 : n.length;
                        t.length += a;
                        var u = t.length < t.highWaterMark;
                        u || (t.needDrain = !0);
                        if (t.writing || t.corked) {
                            var l = t.lastBufferedRequest;
                            t.lastBufferedRequest = {
                                chunk: n,
                                encoding: i,
                                isBuf: r,
                                callback: o,
                                next: null
                            },
                            l ? l.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest,
                            t.bufferedRequestCount += 1
                        } else
                            R(e, t, !1, a, n, i, o);
                        return u
                    }(this, o, a, e, t, r)),
                    s
                }
                ,
                x.prototype.cork = function() {
                    this._writableState.corked++
                }
                ,
                x.prototype.uncork = function() {
                    var e = this._writableState;
                    e.corked && (e.corked--,
                    e.writing || e.corked || e.bufferProcessing || !e.bufferedRequest || O(this, e))
                }
                ,
                x.prototype.setDefaultEncoding = function(e) {
                    if ("string" == typeof e && (e = e.toLowerCase()),
                    !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
                        throw new _(e);
                    return this._writableState.defaultEncoding = e,
                    this
                }
                ,
                Object.defineProperty(x.prototype, "writableBuffer", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState && this._writableState.getBuffer()
                    }
                }),
                Object.defineProperty(x.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark
                    }
                }),
                x.prototype._write = function(e, t, r) {
                    r(new m("_write()"))
                }
                ,
                x.prototype._writev = null,
                x.prototype.end = function(e, t, r) {
                    var n = this._writableState;
                    return "function" == typeof e ? (r = e,
                    e = null,
                    t = null) : "function" == typeof t && (r = t,
                    t = null),
                    null != e && this.write(e, t),
                    n.corked && (n.corked = 1,
                    this.uncork()),
                    n.ending || function(e, t, r) {
                        t.ending = !0,
                        k(e, t),
                        r && (t.finished ? i.nextTick(r) : e.once("finish", r));
                        t.ended = !0,
                        e.writable = !1
                    }(this, n, r),
                    this
                }
                ,
                Object.defineProperty(x.prototype, "writableLength", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.length
                    }
                }),
                Object.defineProperty(x.prototype, "destroyed", {
                    enumerable: !1,
                    get: function() {
                        return void 0 !== this._writableState && this._writableState.destroyed
                    },
                    set: function(e) {
                        this._writableState && (this._writableState.destroyed = e)
                    }
                }),
                x.prototype.destroy = h.destroy,
                x.prototype._undestroy = h.undestroy,
                x.prototype._destroy = function(e, t) {
                    t(e)
                }
            }
            ,
            5850: (e, t, r) => {
                "use strict";
                var n, i = r(4155);
                function o(e, t, r) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = r,
                    e
                }
                var s = r(8610)
                  , a = Symbol("lastResolve")
                  , c = Symbol("lastReject")
                  , u = Symbol("error")
                  , l = Symbol("ended")
                  , h = Symbol("lastPromise")
                  , d = Symbol("handlePromise")
                  , f = Symbol("stream");
                function p(e, t) {
                    return {
                        value: e,
                        done: t
                    }
                }
                function m(e) {
                    var t = e[a];
                    if (null !== t) {
                        var r = e[f].read();
                        null !== r && (e[h] = null,
                        e[a] = null,
                        e[c] = null,
                        t(p(r, !1)))
                    }
                }
                function g(e) {
                    i.nextTick(m, e)
                }
                var y = Object.getPrototypeOf((function() {}
                ))
                  , b = Object.setPrototypeOf((o(n = {
                    get stream() {
                        return this[f]
                    },
                    next: function() {
                        var e = this
                          , t = this[u];
                        if (null !== t)
                            return Promise.reject(t);
                        if (this[l])
                            return Promise.resolve(p(void 0, !0));
                        if (this[f].destroyed)
                            return new Promise((function(t, r) {
                                i.nextTick((function() {
                                    e[u] ? r(e[u]) : t(p(void 0, !0))
                                }
                                ))
                            }
                            ));
                        var r, n = this[h];
                        if (n)
                            r = new Promise(function(e, t) {
                                return function(r, n) {
                                    e.then((function() {
                                        t[l] ? r(p(void 0, !0)) : t[d](r, n)
                                    }
                                    ), n)
                                }
                            }(n, this));
                        else {
                            var o = this[f].read();
                            if (null !== o)
                                return Promise.resolve(p(o, !1));
                            r = new Promise(this[d])
                        }
                        return this[h] = r,
                        r
                    }
                }, Symbol.asyncIterator, (function() {
                    return this
                }
                )),
                o(n, "return", (function() {
                    var e = this;
                    return new Promise((function(t, r) {
                        e[f].destroy(null, (function(e) {
                            e ? r(e) : t(p(void 0, !0))
                        }
                        ))
                    }
                    ))
                }
                )),
                n), y);
                e.exports = function(e) {
                    var t, r = Object.create(b, (o(t = {}, f, {
                        value: e,
                        writable: !0
                    }),
                    o(t, a, {
                        value: null,
                        writable: !0
                    }),
                    o(t, c, {
                        value: null,
                        writable: !0
                    }),
                    o(t, u, {
                        value: null,
                        writable: !0
                    }),
                    o(t, l, {
                        value: e._readableState.endEmitted,
                        writable: !0
                    }),
                    o(t, d, {
                        value: function(e, t) {
                            var n = r[f].read();
                            n ? (r[h] = null,
                            r[a] = null,
                            r[c] = null,
                            e(p(n, !1))) : (r[a] = e,
                            r[c] = t)
                        },
                        writable: !0
                    }),
                    t));
                    return r[h] = null,
                    s(e, (function(e) {
                        if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
                            var t = r[c];
                            return null !== t && (r[h] = null,
                            r[a] = null,
                            r[c] = null,
                            t(e)),
                            void (r[u] = e)
                        }
                        var n = r[a];
                        null !== n && (r[h] = null,
                        r[a] = null,
                        r[c] = null,
                        n(p(void 0, !0))),
                        r[l] = !0
                    }
                    )),
                    e.on("readable", g.bind(null, r)),
                    r
                }
            }
            ,
            7327: (e, t, r) => {
                "use strict";
                function n(e, t) {
                    var r = Object.keys(e);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(e);
                        t && (n = n.filter((function(t) {
                            return Object.getOwnPropertyDescriptor(e, t).enumerable
                        }
                        ))),
                        r.push.apply(r, n)
                    }
                    return r
                }
                function i(e, t, r) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = r,
                    e
                }
                function o(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                var s = r(8764).Buffer
                  , a = r(2361).inspect
                  , c = a && a.custom || "inspect";
                e.exports = function() {
                    function e() {
                        !function(e, t) {
                            if (!(e instanceof t))
                                throw new TypeError("Cannot call a class as a function")
                        }(this, e),
                        this.head = null,
                        this.tail = null,
                        this.length = 0
                    }
                    var t, r, u;
                    return t = e,
                    (r = [{
                        key: "push",
                        value: function(e) {
                            var t = {
                                data: e,
                                next: null
                            };
                            this.length > 0 ? this.tail.next = t : this.head = t,
                            this.tail = t,
                            ++this.length
                        }
                    }, {
                        key: "unshift",
                        value: function(e) {
                            var t = {
                                data: e,
                                next: this.head
                            };
                            0 === this.length && (this.tail = t),
                            this.head = t,
                            ++this.length
                        }
                    }, {
                        key: "shift",
                        value: function() {
                            if (0 !== this.length) {
                                var e = this.head.data;
                                return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next,
                                --this.length,
                                e
                            }
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            this.head = this.tail = null,
                            this.length = 0
                        }
                    }, {
                        key: "join",
                        value: function(e) {
                            if (0 === this.length)
                                return "";
                            for (var t = this.head, r = "" + t.data; t = t.next; )
                                r += e + t.data;
                            return r
                        }
                    }, {
                        key: "concat",
                        value: function(e) {
                            if (0 === this.length)
                                return s.alloc(0);
                            for (var t, r, n, i = s.allocUnsafe(e >>> 0), o = this.head, a = 0; o; )
                                t = o.data,
                                r = i,
                                n = a,
                                s.prototype.copy.call(t, r, n),
                                a += o.data.length,
                                o = o.next;
                            return i
                        }
                    }, {
                        key: "consume",
                        value: function(e, t) {
                            var r;
                            return e < this.head.data.length ? (r = this.head.data.slice(0, e),
                            this.head.data = this.head.data.slice(e)) : r = e === this.head.data.length ? this.shift() : t ? this._getString(e) : this._getBuffer(e),
                            r
                        }
                    }, {
                        key: "first",
                        value: function() {
                            return this.head.data
                        }
                    }, {
                        key: "_getString",
                        value: function(e) {
                            var t = this.head
                              , r = 1
                              , n = t.data;
                            for (e -= n.length; t = t.next; ) {
                                var i = t.data
                                  , o = e > i.length ? i.length : e;
                                if (o === i.length ? n += i : n += i.slice(0, e),
                                0 == (e -= o)) {
                                    o === i.length ? (++r,
                                    t.next ? this.head = t.next : this.head = this.tail = null) : (this.head = t,
                                    t.data = i.slice(o));
                                    break
                                }
                                ++r
                            }
                            return this.length -= r,
                            n
                        }
                    }, {
                        key: "_getBuffer",
                        value: function(e) {
                            var t = s.allocUnsafe(e)
                              , r = this.head
                              , n = 1;
                            for (r.data.copy(t),
                            e -= r.data.length; r = r.next; ) {
                                var i = r.data
                                  , o = e > i.length ? i.length : e;
                                if (i.copy(t, t.length - e, 0, o),
                                0 == (e -= o)) {
                                    o === i.length ? (++n,
                                    r.next ? this.head = r.next : this.head = this.tail = null) : (this.head = r,
                                    r.data = i.slice(o));
                                    break
                                }
                                ++n
                            }
                            return this.length -= n,
                            t
                        }
                    }, {
                        key: c,
                        value: function(e, t) {
                            return a(this, function(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var r = null != arguments[t] ? arguments[t] : {};
                                    t % 2 ? n(Object(r), !0).forEach((function(t) {
                                        i(e, t, r[t])
                                    }
                                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach((function(t) {
                                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                                    }
                                    ))
                                }
                                return e
                            }({}, t, {
                                depth: 0,
                                customInspect: !1
                            }))
                        }
                    }]) && o(t.prototype, r),
                    u && o(t, u),
                    e
                }()
            }
            ,
            1195: (e, t, r) => {
                "use strict";
                var n = r(4155);
                function i(e, t) {
                    s(e, t),
                    o(e)
                }
                function o(e) {
                    e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close")
                }
                function s(e, t) {
                    e.emit("error", t)
                }
                e.exports = {
                    destroy: function(e, t) {
                        var r = this
                          , a = this._readableState && this._readableState.destroyed
                          , c = this._writableState && this._writableState.destroyed;
                        return a || c ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0,
                        n.nextTick(s, this, e)) : n.nextTick(s, this, e)),
                        this) : (this._readableState && (this._readableState.destroyed = !0),
                        this._writableState && (this._writableState.destroyed = !0),
                        this._destroy(e || null, (function(e) {
                            !t && e ? r._writableState ? r._writableState.errorEmitted ? n.nextTick(o, r) : (r._writableState.errorEmitted = !0,
                            n.nextTick(i, r, e)) : n.nextTick(i, r, e) : t ? (n.nextTick(o, r),
                            t(e)) : n.nextTick(o, r)
                        }
                        )),
                        this)
                    },
                    undestroy: function() {
                        this._readableState && (this._readableState.destroyed = !1,
                        this._readableState.reading = !1,
                        this._readableState.ended = !1,
                        this._readableState.endEmitted = !1),
                        this._writableState && (this._writableState.destroyed = !1,
                        this._writableState.ended = !1,
                        this._writableState.ending = !1,
                        this._writableState.finalCalled = !1,
                        this._writableState.prefinished = !1,
                        this._writableState.finished = !1,
                        this._writableState.errorEmitted = !1)
                    },
                    errorOrDestroy: function(e, t) {
                        var r = e._readableState
                          , n = e._writableState;
                        r && r.autoDestroy || n && n.autoDestroy ? e.destroy(t) : e.emit("error", t)
                    }
                }
            }
            ,
            8610: (e, t, r) => {
                "use strict";
                var n = r(4281).q.ERR_STREAM_PREMATURE_CLOSE;
                function i() {}
                e.exports = function e(t, r, o) {
                    if ("function" == typeof r)
                        return e(t, null, r);
                    r || (r = {}),
                    o = function(e) {
                        var t = !1;
                        return function() {
                            if (!t) {
                                t = !0;
                                for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++)
                                    n[i] = arguments[i];
                                e.apply(this, n)
                            }
                        }
                    }(o || i);
                    var s = r.readable || !1 !== r.readable && t.readable
                      , a = r.writable || !1 !== r.writable && t.writable
                      , c = function() {
                        t.writable || l()
                    }
                      , u = t._writableState && t._writableState.finished
                      , l = function() {
                        a = !1,
                        u = !0,
                        s || o.call(t)
                    }
                      , h = t._readableState && t._readableState.endEmitted
                      , d = function() {
                        s = !1,
                        h = !0,
                        a || o.call(t)
                    }
                      , f = function(e) {
                        o.call(t, e)
                    }
                      , p = function() {
                        var e;
                        return s && !h ? (t._readableState && t._readableState.ended || (e = new n),
                        o.call(t, e)) : a && !u ? (t._writableState && t._writableState.ended || (e = new n),
                        o.call(t, e)) : void 0
                    }
                      , m = function() {
                        t.req.on("finish", l)
                    };
                    return !function(e) {
                        return e.setHeader && "function" == typeof e.abort
                    }(t) ? a && !t._writableState && (t.on("end", c),
                    t.on("close", c)) : (t.on("complete", l),
                    t.on("abort", p),
                    t.req ? m() : t.on("request", m)),
                    t.on("end", d),
                    t.on("finish", l),
                    !1 !== r.error && t.on("error", f),
                    t.on("close", p),
                    function() {
                        t.removeListener("complete", l),
                        t.removeListener("abort", p),
                        t.removeListener("request", m),
                        t.req && t.req.removeListener("finish", l),
                        t.removeListener("end", c),
                        t.removeListener("close", c),
                        t.removeListener("finish", l),
                        t.removeListener("end", d),
                        t.removeListener("error", f),
                        t.removeListener("close", p)
                    }
                }
            }
            ,
            5167: e => {
                e.exports = function() {
                    throw new Error("Readable.from is not available in the browser")
                }
            }
            ,
            9946: (e, t, r) => {
                "use strict";
                var n;
                var i = r(4281).q
                  , o = i.ERR_MISSING_ARGS
                  , s = i.ERR_STREAM_DESTROYED;
                function a(e) {
                    if (e)
                        throw e
                }
                function c(e, t, i, o) {
                    o = function(e) {
                        var t = !1;
                        return function() {
                            t || (t = !0,
                            e.apply(void 0, arguments))
                        }
                    }(o);
                    var a = !1;
                    e.on("close", (function() {
                        a = !0
                    }
                    )),
                    void 0 === n && (n = r(8610)),
                    n(e, {
                        readable: t,
                        writable: i
                    }, (function(e) {
                        if (e)
                            return o(e);
                        a = !0,
                        o()
                    }
                    ));
                    var c = !1;
                    return function(t) {
                        if (!a && !c)
                            return c = !0,
                            function(e) {
                                return e.setHeader && "function" == typeof e.abort
                            }(e) ? e.abort() : "function" == typeof e.destroy ? e.destroy() : void o(t || new s("pipe"))
                    }
                }
                function u(e) {
                    e()
                }
                function l(e, t) {
                    return e.pipe(t)
                }
                function h(e) {
                    return e.length ? "function" != typeof e[e.length - 1] ? a : e.pop() : a
                }
                e.exports = function() {
                    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                        t[r] = arguments[r];
                    var n, i = h(t);
                    if (Array.isArray(t[0]) && (t = t[0]),
                    t.length < 2)
                        throw new o("streams");
                    var s = t.map((function(e, r) {
                        var o = r < t.length - 1;
                        return c(e, o, r > 0, (function(e) {
                            n || (n = e),
                            e && s.forEach(u),
                            o || (s.forEach(u),
                            i(n))
                        }
                        ))
                    }
                    ));
                    return t.reduce(l)
                }
            }
            ,
            2457: (e, t, r) => {
                "use strict";
                var n = r(4281).q.ERR_INVALID_OPT_VALUE;
                e.exports = {
                    getHighWaterMark: function(e, t, r, i) {
                        var o = function(e, t, r) {
                            return null != e.highWaterMark ? e.highWaterMark : t ? e[r] : null
                        }(t, i, r);
                        if (null != o) {
                            if (!isFinite(o) || Math.floor(o) !== o || o < 0)
                                throw new n(i ? r : "highWaterMark",o);
                            return Math.floor(o)
                        }
                        return e.objectMode ? 16 : 16384
                    }
                }
            }
            ,
            2503: (e, t, r) => {
                e.exports = r(7187).EventEmitter
            }
            ,
            9509: (e, t, r) => {
                var n = r(8764)
                  , i = n.Buffer;
                function o(e, t) {
                    for (var r in e)
                        t[r] = e[r]
                }
                function s(e, t, r) {
                    return i(e, t, r)
                }
                i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (o(n, t),
                t.Buffer = s),
                s.prototype = Object.create(i.prototype),
                o(i, s),
                s.from = function(e, t, r) {
                    if ("number" == typeof e)
                        throw new TypeError("Argument must not be a number");
                    return i(e, t, r)
                }
                ,
                s.alloc = function(e, t, r) {
                    if ("number" != typeof e)
                        throw new TypeError("Argument must be a number");
                    var n = i(e);
                    return void 0 !== t ? "string" == typeof r ? n.fill(t, r) : n.fill(t) : n.fill(0),
                    n
                }
                ,
                s.allocUnsafe = function(e) {
                    if ("number" != typeof e)
                        throw new TypeError("Argument must be a number");
                    return i(e)
                }
                ,
                s.allocUnsafeSlow = function(e) {
                    if ("number" != typeof e)
                        throw new TypeError("Argument must be a number");
                    return n.SlowBuffer(e)
                }
            }
            ,
            2830: (e, t, r) => {
                e.exports = i;
                var n = r(7187).EventEmitter;
                function i() {
                    n.call(this)
                }
                r(5717)(i, n),
                i.Readable = r(9481),
                i.Writable = r(4229),
                i.Duplex = r(6753),
                i.Transform = r(4605),
                i.PassThrough = r(2725),
                i.finished = r(8610),
                i.pipeline = r(9946),
                i.Stream = i,
                i.prototype.pipe = function(e, t) {
                    var r = this;
                    function i(t) {
                        e.writable && !1 === e.write(t) && r.pause && r.pause()
                    }
                    function o() {
                        r.readable && r.resume && r.resume()
                    }
                    r.on("data", i),
                    e.on("drain", o),
                    e._isStdio || t && !1 === t.end || (r.on("end", a),
                    r.on("close", c));
                    var s = !1;
                    function a() {
                        s || (s = !0,
                        e.end())
                    }
                    function c() {
                        s || (s = !0,
                        "function" == typeof e.destroy && e.destroy())
                    }
                    function u(e) {
                        if (l(),
                        0 === n.listenerCount(this, "error"))
                            throw e
                    }
                    function l() {
                        r.removeListener("data", i),
                        e.removeListener("drain", o),
                        r.removeListener("end", a),
                        r.removeListener("close", c),
                        r.removeListener("error", u),
                        e.removeListener("error", u),
                        r.removeListener("end", l),
                        r.removeListener("close", l),
                        e.removeListener("close", l)
                    }
                    return r.on("error", u),
                    e.on("error", u),
                    r.on("end", l),
                    r.on("close", l),
                    e.on("close", l),
                    e.emit("pipe", r),
                    e
                }
            }
            ,
            2553: (e, t, r) => {
                "use strict";
                var n = r(9509).Buffer
                  , i = n.isEncoding || function(e) {
                    switch ((e = "" + e) && e.toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                    case "raw":
                        return !0;
                    default:
                        return !1
                    }
                }
                ;
                function o(e) {
                    var t;
                    switch (this.encoding = function(e) {
                        var t = function(e) {
                            if (!e)
                                return "utf8";
                            for (var t; ; )
                                switch (e) {
                                case "utf8":
                                case "utf-8":
                                    return "utf8";
                                case "ucs2":
                                case "ucs-2":
                                case "utf16le":
                                case "utf-16le":
                                    return "utf16le";
                                case "latin1":
                                case "binary":
                                    return "latin1";
                                case "base64":
                                case "ascii":
                                case "hex":
                                    return e;
                                default:
                                    if (t)
                                        return;
                                    e = ("" + e).toLowerCase(),
                                    t = !0
                                }
                        }(e);
                        if ("string" != typeof t && (n.isEncoding === i || !i(e)))
                            throw new Error("Unknown encoding: " + e);
                        return t || e
                    }(e),
                    this.encoding) {
                    case "utf16le":
                        this.text = c,
                        this.end = u,
                        t = 4;
                        break;
                    case "utf8":
                        this.fillLast = a,
                        t = 4;
                        break;
                    case "base64":
                        this.text = l,
                        this.end = h,
                        t = 3;
                        break;
                    default:
                        return this.write = d,
                        void (this.end = f)
                    }
                    this.lastNeed = 0,
                    this.lastTotal = 0,
                    this.lastChar = n.allocUnsafe(t)
                }
                function s(e) {
                    return e <= 127 ? 0 : e >> 5 == 6 ? 2 : e >> 4 == 14 ? 3 : e >> 3 == 30 ? 4 : e >> 6 == 2 ? -1 : -2
                }
                function a(e) {
                    var t = this.lastTotal - this.lastNeed
                      , r = function(e, t, r) {
                        if (128 != (192 & t[0]))
                            return e.lastNeed = 0,
                            "�";
                        if (e.lastNeed > 1 && t.length > 1) {
                            if (128 != (192 & t[1]))
                                return e.lastNeed = 1,
                                "�";
                            if (e.lastNeed > 2 && t.length > 2 && 128 != (192 & t[2]))
                                return e.lastNeed = 2,
                                "�"
                        }
                    }(this, e);
                    return void 0 !== r ? r : this.lastNeed <= e.length ? (e.copy(this.lastChar, t, 0, this.lastNeed),
                    this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e.copy(this.lastChar, t, 0, e.length),
                    void (this.lastNeed -= e.length))
                }
                function c(e, t) {
                    if ((e.length - t) % 2 == 0) {
                        var r = e.toString("utf16le", t);
                        if (r) {
                            var n = r.charCodeAt(r.length - 1);
                            if (n >= 55296 && n <= 56319)
                                return this.lastNeed = 2,
                                this.lastTotal = 4,
                                this.lastChar[0] = e[e.length - 2],
                                this.lastChar[1] = e[e.length - 1],
                                r.slice(0, -1)
                        }
                        return r
                    }
                    return this.lastNeed = 1,
                    this.lastTotal = 2,
                    this.lastChar[0] = e[e.length - 1],
                    e.toString("utf16le", t, e.length - 1)
                }
                function u(e) {
                    var t = e && e.length ? this.write(e) : "";
                    if (this.lastNeed) {
                        var r = this.lastTotal - this.lastNeed;
                        return t + this.lastChar.toString("utf16le", 0, r)
                    }
                    return t
                }
                function l(e, t) {
                    var r = (e.length - t) % 3;
                    return 0 === r ? e.toString("base64", t) : (this.lastNeed = 3 - r,
                    this.lastTotal = 3,
                    1 === r ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2],
                    this.lastChar[1] = e[e.length - 1]),
                    e.toString("base64", t, e.length - r))
                }
                function h(e) {
                    var t = e && e.length ? this.write(e) : "";
                    return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t
                }
                function d(e) {
                    return e.toString(this.encoding)
                }
                function f(e) {
                    return e && e.length ? this.write(e) : ""
                }
                t.s = o,
                o.prototype.write = function(e) {
                    if (0 === e.length)
                        return "";
                    var t, r;
                    if (this.lastNeed) {
                        if (void 0 === (t = this.fillLast(e)))
                            return "";
                        r = this.lastNeed,
                        this.lastNeed = 0
                    } else
                        r = 0;
                    return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || ""
                }
                ,
                o.prototype.end = function(e) {
                    var t = e && e.length ? this.write(e) : "";
                    return this.lastNeed ? t + "�" : t
                }
                ,
                o.prototype.text = function(e, t) {
                    var r = function(e, t, r) {
                        var n = t.length - 1;
                        if (n < r)
                            return 0;
                        var i = s(t[n]);
                        if (i >= 0)
                            return i > 0 && (e.lastNeed = i - 1),
                            i;
                        if (--n < r || -2 === i)
                            return 0;
                        if ((i = s(t[n])) >= 0)
                            return i > 0 && (e.lastNeed = i - 2),
                            i;
                        if (--n < r || -2 === i)
                            return 0;
                        if ((i = s(t[n])) >= 0)
                            return i > 0 && (2 === i ? i = 0 : e.lastNeed = i - 3),
                            i;
                        return 0
                    }(this, e, t);
                    if (!this.lastNeed)
                        return e.toString("utf8", t);
                    this.lastTotal = r;
                    var n = e.length - (r - this.lastNeed);
                    return e.copy(this.lastChar, 0, n),
                    e.toString("utf8", t, n)
                }
                ,
                o.prototype.fillLast = function(e) {
                    if (this.lastNeed <= e.length)
                        return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed),
                        this.lastChar.toString(this.encoding, 0, this.lastTotal);
                    e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length),
                    this.lastNeed -= e.length
                }
            }
            ,
            4758: (e, t) => {
                "use strict";
                var r = function() {
                    function e() {
                        this._dataLength = 0,
                        this._bufferLength = 0,
                        this._state = new Int32Array(4),
                        this._buffer = new ArrayBuffer(68),
                        this._buffer8 = new Uint8Array(this._buffer,0,68),
                        this._buffer32 = new Uint32Array(this._buffer,0,17),
                        this.start()
                    }
                    return e.hashStr = function(e, t) {
                        return void 0 === t && (t = !1),
                        this.onePassHasher.start().appendStr(e).end(t)
                    }
                    ,
                    e.hashAsciiStr = function(e, t) {
                        return void 0 === t && (t = !1),
                        this.onePassHasher.start().appendAsciiStr(e).end(t)
                    }
                    ,
                    e._hex = function(t) {
                        var r, n, i, o, s = e.hexChars, a = e.hexOut;
                        for (o = 0; o < 4; o += 1)
                            for (n = 8 * o,
                            r = t[o],
                            i = 0; i < 8; i += 2)
                                a[n + 1 + i] = s.charAt(15 & r),
                                r >>>= 4,
                                a[n + 0 + i] = s.charAt(15 & r),
                                r >>>= 4;
                        return a.join("")
                    }
                    ,
                    e._md5cycle = function(e, t) {
                        var r = e[0]
                          , n = e[1]
                          , i = e[2]
                          , o = e[3];
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & i | ~n & o) + t[0] - 680876936 | 0) << 7 | r >>> 25) + n | 0) & n | ~r & i) + t[1] - 389564586 | 0) << 12 | o >>> 20) + r | 0) & r | ~o & n) + t[2] + 606105819 | 0) << 17 | i >>> 15) + o | 0) & o | ~i & r) + t[3] - 1044525330 | 0) << 22 | n >>> 10) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & i | ~n & o) + t[4] - 176418897 | 0) << 7 | r >>> 25) + n | 0) & n | ~r & i) + t[5] + 1200080426 | 0) << 12 | o >>> 20) + r | 0) & r | ~o & n) + t[6] - 1473231341 | 0) << 17 | i >>> 15) + o | 0) & o | ~i & r) + t[7] - 45705983 | 0) << 22 | n >>> 10) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & i | ~n & o) + t[8] + 1770035416 | 0) << 7 | r >>> 25) + n | 0) & n | ~r & i) + t[9] - 1958414417 | 0) << 12 | o >>> 20) + r | 0) & r | ~o & n) + t[10] - 42063 | 0) << 17 | i >>> 15) + o | 0) & o | ~i & r) + t[11] - 1990404162 | 0) << 22 | n >>> 10) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & i | ~n & o) + t[12] + 1804603682 | 0) << 7 | r >>> 25) + n | 0) & n | ~r & i) + t[13] - 40341101 | 0) << 12 | o >>> 20) + r | 0) & r | ~o & n) + t[14] - 1502002290 | 0) << 17 | i >>> 15) + o | 0) & o | ~i & r) + t[15] + 1236535329 | 0) << 22 | n >>> 10) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & o | i & ~o) + t[1] - 165796510 | 0) << 5 | r >>> 27) + n | 0) & i | n & ~i) + t[6] - 1069501632 | 0) << 9 | o >>> 23) + r | 0) & n | r & ~n) + t[11] + 643717713 | 0) << 14 | i >>> 18) + o | 0) & r | o & ~r) + t[0] - 373897302 | 0) << 20 | n >>> 12) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & o | i & ~o) + t[5] - 701558691 | 0) << 5 | r >>> 27) + n | 0) & i | n & ~i) + t[10] + 38016083 | 0) << 9 | o >>> 23) + r | 0) & n | r & ~n) + t[15] - 660478335 | 0) << 14 | i >>> 18) + o | 0) & r | o & ~r) + t[4] - 405537848 | 0) << 20 | n >>> 12) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & o | i & ~o) + t[9] + 568446438 | 0) << 5 | r >>> 27) + n | 0) & i | n & ~i) + t[14] - 1019803690 | 0) << 9 | o >>> 23) + r | 0) & n | r & ~n) + t[3] - 187363961 | 0) << 14 | i >>> 18) + o | 0) & r | o & ~r) + t[8] + 1163531501 | 0) << 20 | n >>> 12) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n & o | i & ~o) + t[13] - 1444681467 | 0) << 5 | r >>> 27) + n | 0) & i | n & ~i) + t[2] - 51403784 | 0) << 9 | o >>> 23) + r | 0) & n | r & ~n) + t[7] + 1735328473 | 0) << 14 | i >>> 18) + o | 0) & r | o & ~r) + t[12] - 1926607734 | 0) << 20 | n >>> 12) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n ^ i ^ o) + t[5] - 378558 | 0) << 4 | r >>> 28) + n | 0) ^ n ^ i) + t[8] - 2022574463 | 0) << 11 | o >>> 21) + r | 0) ^ r ^ n) + t[11] + 1839030562 | 0) << 16 | i >>> 16) + o | 0) ^ o ^ r) + t[14] - 35309556 | 0) << 23 | n >>> 9) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n ^ i ^ o) + t[1] - 1530992060 | 0) << 4 | r >>> 28) + n | 0) ^ n ^ i) + t[4] + 1272893353 | 0) << 11 | o >>> 21) + r | 0) ^ r ^ n) + t[7] - 155497632 | 0) << 16 | i >>> 16) + o | 0) ^ o ^ r) + t[10] - 1094730640 | 0) << 23 | n >>> 9) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n ^ i ^ o) + t[13] + 681279174 | 0) << 4 | r >>> 28) + n | 0) ^ n ^ i) + t[0] - 358537222 | 0) << 11 | o >>> 21) + r | 0) ^ r ^ n) + t[3] - 722521979 | 0) << 16 | i >>> 16) + o | 0) ^ o ^ r) + t[6] + 76029189 | 0) << 23 | n >>> 9) + i | 0,
                        n = ((n += ((i = ((i += ((o = ((o += ((r = ((r += (n ^ i ^ o) + t[9] - 640364487 | 0) << 4 | r >>> 28) + n | 0) ^ n ^ i) + t[12] - 421815835 | 0) << 11 | o >>> 21) + r | 0) ^ r ^ n) + t[15] + 530742520 | 0) << 16 | i >>> 16) + o | 0) ^ o ^ r) + t[2] - 995338651 | 0) << 23 | n >>> 9) + i | 0,
                        n = ((n += ((o = ((o += (n ^ ((r = ((r += (i ^ (n | ~o)) + t[0] - 198630844 | 0) << 6 | r >>> 26) + n | 0) | ~i)) + t[7] + 1126891415 | 0) << 10 | o >>> 22) + r | 0) ^ ((i = ((i += (r ^ (o | ~n)) + t[14] - 1416354905 | 0) << 15 | i >>> 17) + o | 0) | ~r)) + t[5] - 57434055 | 0) << 21 | n >>> 11) + i | 0,
                        n = ((n += ((o = ((o += (n ^ ((r = ((r += (i ^ (n | ~o)) + t[12] + 1700485571 | 0) << 6 | r >>> 26) + n | 0) | ~i)) + t[3] - 1894986606 | 0) << 10 | o >>> 22) + r | 0) ^ ((i = ((i += (r ^ (o | ~n)) + t[10] - 1051523 | 0) << 15 | i >>> 17) + o | 0) | ~r)) + t[1] - 2054922799 | 0) << 21 | n >>> 11) + i | 0,
                        n = ((n += ((o = ((o += (n ^ ((r = ((r += (i ^ (n | ~o)) + t[8] + 1873313359 | 0) << 6 | r >>> 26) + n | 0) | ~i)) + t[15] - 30611744 | 0) << 10 | o >>> 22) + r | 0) ^ ((i = ((i += (r ^ (o | ~n)) + t[6] - 1560198380 | 0) << 15 | i >>> 17) + o | 0) | ~r)) + t[13] + 1309151649 | 0) << 21 | n >>> 11) + i | 0,
                        n = ((n += ((o = ((o += (n ^ ((r = ((r += (i ^ (n | ~o)) + t[4] - 145523070 | 0) << 6 | r >>> 26) + n | 0) | ~i)) + t[11] - 1120210379 | 0) << 10 | o >>> 22) + r | 0) ^ ((i = ((i += (r ^ (o | ~n)) + t[2] + 718787259 | 0) << 15 | i >>> 17) + o | 0) | ~r)) + t[9] - 343485551 | 0) << 21 | n >>> 11) + i | 0,
                        e[0] = r + e[0] | 0,
                        e[1] = n + e[1] | 0,
                        e[2] = i + e[2] | 0,
                        e[3] = o + e[3] | 0
                    }
                    ,
                    e.prototype.start = function() {
                        return this._dataLength = 0,
                        this._bufferLength = 0,
                        this._state.set(e.stateIdentity),
                        this
                    }
                    ,
                    e.prototype.appendStr = function(t) {
                        var r, n, i = this._buffer8, o = this._buffer32, s = this._bufferLength;
                        for (n = 0; n < t.length; n += 1) {
                            if ((r = t.charCodeAt(n)) < 128)
                                i[s++] = r;
                            else if (r < 2048)
                                i[s++] = 192 + (r >>> 6),
                                i[s++] = 63 & r | 128;
                            else if (r < 55296 || r > 56319)
                                i[s++] = 224 + (r >>> 12),
                                i[s++] = r >>> 6 & 63 | 128,
                                i[s++] = 63 & r | 128;
                            else {
                                if ((r = 1024 * (r - 55296) + (t.charCodeAt(++n) - 56320) + 65536) > 1114111)
                                    throw new Error("Unicode standard supports code points up to U+10FFFF");
                                i[s++] = 240 + (r >>> 18),
                                i[s++] = r >>> 12 & 63 | 128,
                                i[s++] = r >>> 6 & 63 | 128,
                                i[s++] = 63 & r | 128
                            }
                            s >= 64 && (this._dataLength += 64,
                            e._md5cycle(this._state, o),
                            s -= 64,
                            o[0] = o[16])
                        }
                        return this._bufferLength = s,
                        this
                    }
                    ,
                    e.prototype.appendAsciiStr = function(t) {
                        for (var r, n = this._buffer8, i = this._buffer32, o = this._bufferLength, s = 0; ; ) {
                            for (r = Math.min(t.length - s, 64 - o); r--; )
                                n[o++] = t.charCodeAt(s++);
                            if (o < 64)
                                break;
                            this._dataLength += 64,
                            e._md5cycle(this._state, i),
                            o = 0
                        }
                        return this._bufferLength = o,
                        this
                    }
                    ,
                    e.prototype.appendByteArray = function(t) {
                        for (var r, n = this._buffer8, i = this._buffer32, o = this._bufferLength, s = 0; ; ) {
                            for (r = Math.min(t.length - s, 64 - o); r--; )
                                n[o++] = t[s++];
                            if (o < 64)
                                break;
                            this._dataLength += 64,
                            e._md5cycle(this._state, i),
                            o = 0
                        }
                        return this._bufferLength = o,
                        this
                    }
                    ,
                    e.prototype.getState = function() {
                        var e = this._state;
                        return {
                            buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),
                            buflen: this._bufferLength,
                            length: this._dataLength,
                            state: [e[0], e[1], e[2], e[3]]
                        }
                    }
                    ,
                    e.prototype.setState = function(e) {
                        var t, r = e.buffer, n = e.state, i = this._state;
                        for (this._dataLength = e.length,
                        this._bufferLength = e.buflen,
                        i[0] = n[0],
                        i[1] = n[1],
                        i[2] = n[2],
                        i[3] = n[3],
                        t = 0; t < r.length; t += 1)
                            this._buffer8[t] = r.charCodeAt(t)
                    }
                    ,
                    e.prototype.end = function(t) {
                        void 0 === t && (t = !1);
                        var r = this._bufferLength
                          , n = this._buffer8
                          , i = this._buffer32
                          , o = 1 + (r >> 2);
                        this._dataLength += r;
                        var s = 8 * this._dataLength;
                        if (n[r] = 128,
                        n[r + 1] = n[r + 2] = n[r + 3] = 0,
                        i.set(e.buffer32Identity.subarray(o), o),
                        r > 55 && (e._md5cycle(this._state, i),
                        i.set(e.buffer32Identity)),
                        s <= 4294967295)
                            i[14] = s;
                        else {
                            var a = s.toString(16).match(/(.*?)(.{0,8})$/);
                            if (null === a)
                                return;
                            var c = parseInt(a[2], 16)
                              , u = parseInt(a[1], 16) || 0;
                            i[14] = c,
                            i[15] = u
                        }
                        return e._md5cycle(this._state, i),
                        t ? this._state : e._hex(this._state)
                    }
                    ,
                    e.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]),
                    e.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                    e.hexChars = "0123456789abcdef",
                    e.hexOut = [],
                    e.onePassHasher = new e,
                    e
                }();
                if (t.V = r,
                "5d41402abc4b2a76b9719d911017c592" !== r.hashStr("hello"))
                    throw new Error("Md5 self test failed.")
            }
            ,
            4927: (e, t, r) => {
                function n(e) {
                    try {
                        if (!r.g.localStorage)
                            return !1
                    } catch (e) {
                        return !1
                    }
                    var t = r.g.localStorage[e];
                    return null != t && "true" === String(t).toLowerCase()
                }
                e.exports = function(e, t) {
                    if (n("noDeprecation"))
                        return e;
                    var r = !1;
                    return function() {
                        if (!r) {
                            if (n("throwDeprecation"))
                                throw new Error(t);
                            n("traceDeprecation") ? console.trace(t) : console.warn(t),
                            r = !0
                        }
                        return e.apply(this, arguments)
                    }
                }
            }
            ,
            2361: () => {}
            ,
            4616: () => {}
        }
          , t = {};
        function r(n) {
            var i = t[n];
            if (void 0 !== i)
                return i.exports;
            var o = t[n] = {
                exports: {}
            };
            return e[n](o, o.exports, r),
            o.exports
        }
        r.n = e => {
            var t = e && e.__esModule ? () => e.default : () => e;
            return r.d(t, {
                a: t
            }),
            t
        }
        ,
        r.d = (e, t) => {
            for (var n in t)
                r.o(t, n) && !r.o(e, n) && Object.defineProperty(e, n, {
                    enumerable: !0,
                    get: t[n]
                })
        }
        ,
        r.g = function() {
            if ("object" == typeof globalThis)
                return globalThis;
            try {
                return this || new Function("return this")()
            } catch (e) {
                if ("object" == typeof window)
                    return window
            }
        }(),
        r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
        r.r = e => {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }),
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }
        ;
        var n = {};
        return ( () => {
            "use strict";
            r.r(n),
            r.d(n, {
                AACDepay: () => I,
                BasicDepay: () => B,
                CanvasSink: () => D,
                H264Depay: () => J,
                Html5CanvasBoschPipeline: () => Nr,
                Html5CanvasPipeline: () => jr,
                Html5CanvasWebcodecsPipeline: () => zr,
                Html5VideoBoschPipeline: () => Vr,
                Html5VideoMetadataPipeline: () => Gr,
                Html5VideoPipeline: () => Dr,
                HttpMsePipeline: () => sn,
                HttpSource: () => ee,
                Inspector: () => re,
                JPEGDepay: () => xe,
                MessageType: () => O,
                MetadataPipeline: () => Kr,
                Mp4Capture: () => Oe,
                Mp4Muxer: () => ct,
                MseSink: () => It,
                ONVIFDepay: () => Bt,
                Pipeline: () => Er,
                RTCPPacketType: () => dt,
                RTSPResponseError: () => yr,
                RTSP_METHOD: () => gr,
                RtspMjpegPipeline: () => Or,
                RtspMp4Pipeline: () => Cr,
                RtspParser: () => ur,
                RtspPipeline: () => xr,
                RtspSession: () => br,
                SDESItem: () => _t,
                SDPUpdater: () => Mt,
                SR: () => mt,
                Scheduler: () => j,
                Sink: () => d,
                Source: () => l,
                StreamInfo: () => Ft,
                Tube: () => h,
                WSSource: () => _r,
                WsSdpPipeline: () => Zr,
                addRTSPRetry: () => an,
                bodyOffset: () => ir,
                cSrc: () => T,
                cSrcCount: () => b,
                components: () => e,
                connectionEnded: () => rr,
                contentBase: () => er,
                contentLocation: () => tr,
                createTransform: () => P,
                extHeader: () => R,
                extHeaderLength: () => x,
                extension: () => y,
                extractHeaderValue: () => Jt,
                extractURIs: () => Vt,
                getTime: () => dr,
                isRtcpApp: () => Ct,
                isRtcpBye: () => xt,
                isRtcpRR: () => wt,
                isRtcpSDES: () => Et,
                isRtcpSR: () => bt,
                marker: () => v,
                messageFromBuffer: () => Yt,
                padding: () => g,
                parse: () => Gt,
                parseRtcp: () => ft,
                payload: () => C,
                payloadType: () => w,
                pipelines: () => t,
                range: () => nr,
                rtcpMessageFromBuffer: () => pt,
                sSrc: () => E,
                sequence: () => Kt,
                sequenceNumber: () => _,
                sessionId: () => Xt,
                sessionTimeout: () => Zt,
                statusCode: () => Qt,
                timestamp: () => S,
                utils: () => i,
                version: () => m
            });
            var e = {};
            r.r(e),
            r.d(e, {
                AACDepay: () => I,
                BasicDepay: () => B,
                CanvasSink: () => D,
                H264Depay: () => J,
                HttpSource: () => ee,
                Inspector: () => re,
                JPEGDepay: () => xe,
                MessageType: () => O,
                Mp4Capture: () => Oe,
                Mp4Muxer: () => ct,
                MseSink: () => It,
                ONVIFDepay: () => Bt,
                RTSPResponseError: () => yr,
                RTSP_METHOD: () => gr,
                RtspParser: () => ur,
                RtspSession: () => br,
                SDPUpdater: () => Mt,
                Sink: () => d,
                Source: () => l,
                StreamInfo: () => Ft,
                Tube: () => h,
                WSSource: () => _r,
                createTransform: () => P
            });
            var t = {};
            r.r(t),
            r.d(t, {
                Html5CanvasBoschPipeline: () => Nr,
                Html5CanvasPipeline: () => jr,
                Html5CanvasWebcodecsPipeline: () => zr,
                Html5VideoBoschPipeline: () => Vr,
                Html5VideoMetadataPipeline: () => Gr,
                Html5VideoPipeline: () => Dr,
                HttpMsePipeline: () => sn,
                MetadataPipeline: () => Kr,
                Pipeline: () => Er,
                RtspMjpegPipeline: () => Or,
                RtspMp4Pipeline: () => Cr,
                RtspPipeline: () => xr,
                WsSdpPipeline: () => Zr
            });
            var i = {};
            r.r(i),
            r.d(i, {
                RTCPPacketType: () => dt,
                SDESItem: () => _t,
                SR: () => mt,
                Scheduler: () => j,
                addRTSPRetry: () => an,
                bodyOffset: () => ir,
                cSrc: () => T,
                cSrcCount: () => b,
                connectionEnded: () => rr,
                contentBase: () => er,
                contentLocation: () => tr,
                extHeader: () => R,
                extHeaderLength: () => x,
                extension: () => y,
                extractHeaderValue: () => Jt,
                extractURIs: () => Vt,
                getTime: () => dr,
                isRtcpApp: () => Ct,
                isRtcpBye: () => xt,
                isRtcpRR: () => wt,
                isRtcpSDES: () => Et,
                isRtcpSR: () => bt,
                marker: () => v,
                messageFromBuffer: () => Yt,
                padding: () => g,
                parse: () => Gt,
                parseRtcp: () => ft,
                payload: () => C,
                payloadType: () => w,
                range: () => nr,
                rtcpMessageFromBuffer: () => pt,
                sSrc: () => E,
                sequence: () => Kt,
                sequenceNumber: () => _,
                sessionId: () => Xt,
                sessionTimeout: () => Zt,
                statusCode: () => Qt,
                timestamp: () => S,
                version: () => m
            });
            var o = r(2830)
              , s = r(8764).Buffer;
            class a {
                static consumer() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : () => {}
                    ;
                    return new o.Writable({
                        objectMode: !0,
                        write(t, r, n) {
                            e(t),
                            n()
                        }
                    })
                }
                static peeker(e) {
                    if ("function" != typeof e)
                        throw new Error("you must supply a function");
                    return new o.Transform({
                        objectMode: !0,
                        transform(t, r, n) {
                            e(t),
                            n(void 0, t)
                        }
                    })
                }
                static producer(e) {
                    let t = 0;
                    return new o.Readable({
                        objectMode: !0,
                        read() {
                            void 0 !== e && (t < e.length ? this.push(e[t++]) : this.push(null))
                        }
                    })
                }
                static recorder(e, t) {
                    return new o.Transform({
                        objectMode: !0,
                        transform(r, n, i) {
                            const o = Date.now()
                              , s = Object.assign({}, r, {
                                data: r.data.toString("base64")
                            });
                            t.write(JSON.stringify({
                                type: e,
                                timestamp: o,
                                message: s
                            }, null, 2)),
                            t.write(",\n"),
                            i(void 0, r)
                        }
                    })
                }
                static replayer(e) {
                    let t = 0
                      , r = e[0].timestamp;
                    return new o.Readable({
                        objectMode: !0,
                        read() {
                            const n = e[t++];
                            if (n) {
                                const {type: e, timestamp: t, message: i} = n
                                  , o = t - r;
                                if (r = t,
                                i) {
                                    const t = i.data ? s.from(i.data, "base64") : s.alloc(0)
                                      , r = Object.assign({}, i, {
                                        data: t
                                    });
                                    this.push({
                                        type: e,
                                        delay: o,
                                        msg: r
                                    })
                                } else
                                    this.push({
                                        type: e,
                                        delay: o,
                                        msg: null
                                    })
                            } else
                                this.push(null)
                        }
                    })
                }
            }
            function c(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class u {
                constructor() {
                    c(this, "incoming", void 0),
                    c(this, "outgoing", void 0),
                    c(this, "next", void 0),
                    c(this, "prev", void 0),
                    c(this, "_incomingErrorHandler", void 0),
                    c(this, "_outgoingErrorHandler", void 0)
                }
            }
            class l extends u {
                static fromMessages(e) {
                    return new l(a.producer(e),a.consumer())
                }
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new o.Readable({
                        objectMode: !0
                    })
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new o.Writable({
                        objectMode: !0
                    });
                    super(),
                    c(this, "incoming", void 0),
                    c(this, "outgoing", void 0),
                    c(this, "next", void 0),
                    c(this, "prev", void 0),
                    this.incoming = e,
                    this.outgoing = t,
                    this.next = null,
                    this.prev = null
                }
                connect(e) {
                    if (null === e)
                        return this;
                    if (null !== this.next || null !== e.prev)
                        throw new Error("connection failed: component(s) already connected");
                    if (!this.incoming.readable || !this.outgoing.writable)
                        throw new Error("connection failed: this component not compatible");
                    if (!e.incoming.writable || !e.outgoing.readable)
                        throw new Error("connection failed: next component not compatible");
                    try {
                        this.incoming.pipe(e.incoming),
                        e.outgoing.pipe(this.outgoing)
                    } catch (e) {
                        throw new Error(`connection failed: ${e.message}`)
                    }
                    const t = e => {
                        this.incoming.emit("error", e)
                    }
                    ;
                    e.incoming.on("error", t);
                    const r = t => {
                        e.outgoing.emit("error", t)
                    }
                    ;
                    return this.outgoing.on("error", r),
                    this.next = e,
                    e.prev = this,
                    this._incomingErrorHandler = t,
                    this._outgoingErrorHandler = r,
                    e
                }
                disconnect() {
                    const e = this.next;
                    return null !== e && (this.incoming.unpipe(e.incoming),
                    e.outgoing.unpipe(this.outgoing),
                    void 0 !== this._incomingErrorHandler && e.incoming.removeListener("error", this._incomingErrorHandler),
                    void 0 !== this._outgoingErrorHandler && this.outgoing.removeListener("error", this._outgoingErrorHandler),
                    this.next = null,
                    e.prev = null,
                    delete this._incomingErrorHandler,
                    delete this._outgoingErrorHandler),
                    this
                }
            }
            class h extends l {
                static fromHandlers(e, t) {
                    const r = e ? a.peeker(e) : void 0
                      , n = t ? a.peeker(t) : void 0;
                    return new h(r,n)
                }
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new o.PassThrough({
                        objectMode: !0
                    })
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new o.PassThrough({
                        objectMode: !0
                    });
                    super(e, t),
                    c(this, "incoming", void 0),
                    c(this, "outgoing", void 0),
                    this.incoming = e,
                    this.outgoing = t
                }
            }
            class d extends u {
                static fromHandler(e) {
                    const t = new d(a.consumer(e),a.producer(void 0));
                    return t.incoming.on("finish", ( () => {
                        t.outgoing.push(null)
                    }
                    )),
                    t
                }
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new o.Writable({
                        objectMode: !0
                    })
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new o.Readable({
                        objectMode: !0
                    });
                    super(),
                    c(this, "incoming", void 0),
                    c(this, "outgoing", void 0),
                    c(this, "next", void 0),
                    c(this, "prev", void 0),
                    this.incoming = e,
                    this.outgoing = t,
                    this.next = null,
                    this.prev = null
                }
                connect() {
                    throw new Error("connection failed: attempting to connect after a sink")
                }
                disconnect() {
                    return this
                }
            }
            const f = [128, 64, 32, 16, 8, 4, 2, 1];
            var p = r(8764).Buffer;
            const m = e => e[0] >>> 6
              , g = e => !!(e[0] & f[2])
              , y = e => !!(e[0] & f[3])
              , b = e => 15 & e[0]
              , v = e => !!(e[1] & f[0])
              , w = e => 127 & e[1]
              , _ = e => e.readUInt16BE(2)
              , S = e => e.readUInt32BE(4)
              , E = e => e.readUInt32BE(8)
              , T = function(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                return b(e) > t ? e.readUInt32BE(12 + 4 * t) : 0
            }
              , x = e => y(e) ? e.readUInt16BE(12 + 4 * b(e) + 2) : 0
              , R = e => 0 === x(e) ? p.from([]) : e.slice(12 + 4 * b(e), 12 + 4 * b(e) + 4 + 4 * x(e))
              , C = e => y(e) ? e.slice(12 + 4 * b(e) + 4 + 4 * x(e)) : e.slice(12 + 4 * b(e));
            let O;
            !function(e) {
                e[e.UNKNOWN = 0] = "UNKNOWN",
                e[e.RAW = 1] = "RAW",
                e[e.RTP = 2] = "RTP",
                e[e.RTCP = 3] = "RTCP",
                e[e.RTSP = 4] = "RTSP",
                e[e.SDP = 5] = "SDP",
                e[e.ELEMENTARY = 6] = "ELEMENTARY",
                e[e.H264 = 7] = "H264",
                e[e.ISOM = 8] = "ISOM",
                e[e.XML = 9] = "XML",
                e[e.JPEG = 10] = "JPEG",
                e[e.H264Ext = 11] = "H264Ext"
            }(O || (O = {}));
            const P = e => new o.Transform({
                objectMode: !0,
                transform: e
            });
            class I extends h {
                constructor() {
                    let e, t;
                    super(P((function(r, n, i) {
                        if (r.type === O.SDP) {
                            let n;
                            for (const e of r.sdp.media)
                                "audio" === e.type && e.fmtp && e.fmtp.parameters && "AAC-hbr" === e.fmtp.parameters.mode && (n = e);
                            if (n && void 0 !== n.rtpmap) {
                                e = Number(n.rtpmap.payloadType);
                                const r = n.fmtp.parameters
                                  , i = Number(r.sizelength) || 0
                                  , o = Number(r.indexlength) || 0
                                  , s = Number(r.indexdeltalength) || 0
                                  , a = Number(r.ctsdeltalength) || 0
                                  , c = Number(r.dtsdeltalength) || 0
                                  , u = Number(r.randomaccessindication) || 0
                                  , l = Number(r.streamstateindication) || 0
                                  , h = Number(r.auxiliarydatasizelength) || 0;
                                t = i + Math.max(o, s) + a + c + u + l + h > 0
                            }
                            i(void 0, r)
                        } else
                            r.type === O.RTP && w(r.data) === e ? (!function(e, t, r) {
                                const n = C(e.data);
                                let i = 0;
                                if (t) {
                                    const e = n.readUInt16BE(0);
                                    i = 2 + (e + e % 8) / 8
                                }
                                let o = n.readUInt16BE(i);
                                65520 == (65520 & o) && (i += 1 == (1 & o) ? 7 : 9),
                                r({
                                    type: O.ELEMENTARY,
                                    data: n.slice(i),
                                    payloadType: w(e.data),
                                    timestamp: S(e.data),
                                    ntpTimestamp: e.ntpTimestamp
                                })
                            }(r, t, this.push.bind(this)),
                            i()) : i(void 0, r)
                    }
                    )))
                }
            }
            var k = r(8764).Buffer;
            class B extends h {
                constructor(e) {
                    if (void 0 === e)
                        throw new Error("you must supply a payload type to BasicDepayComponent");
                    let t = k.alloc(0);
                    super(P((function(r, n, i) {
                        if (r.type === O.RTP && w(r.data) === e) {
                            const e = C(r.data);
                            t = k.concat([t, e]),
                            v(r.data) && (t.length > 0 && this.push({
                                data: t,
                                timestamp: S(r.data),
                                ntpTimestamp: r.ntpTimestamp,
                                payloadType: w(r.data),
                                type: O.ELEMENTARY
                            }),
                            t = k.alloc(0)),
                            i()
                        } else
                            i(void 0, r)
                    }
                    )))
                }
            }
            function L(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class A {
                constructor() {
                    L(this, "started", void 0),
                    L(this, "stopped", void 0),
                    L(this, "elapsed", void 0),
                    this.elapsed = 0,
                    this.started = 0,
                    this.stopped = !0
                }
                start() {
                    this.stopped && (this.started = window.performance.now(),
                    this.stopped = !1)
                }
                stop() {
                    this.stopped || (this.elapsed = this.now(),
                    this.stopped = !0)
                }
                reset() {
                    this.elapsed = 0,
                    this.started = 0,
                    this.stopped = !0
                }
                now() {
                    return this.stopped ? this.elapsed : this.elapsed + (window.performance.now() - this.started)
                }
                play() {
                    this.start()
                }
                pause() {
                    this.stop()
                }
                get currentTime() {
                    return this.now() / 1e3
                }
            }
            function U(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class j {
                constructor(e, t) {
                    let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10;
                    U(this, "_clock", void 0),
                    U(this, "_handler", void 0),
                    U(this, "_tolerance", void 0),
                    U(this, "_nextRun", void 0),
                    U(this, "_nextPlay", void 0),
                    U(this, "_fifo", void 0),
                    U(this, "_ntpPresentationTime", void 0),
                    U(this, "_suspended", void 0),
                    this._clock = e,
                    this._handler = t,
                    this._tolerance = r,
                    this._nextRun = 0,
                    this._nextPlay = 0,
                    this._fifo = [],
                    this._ntpPresentationTime = 0,
                    this._suspended = !1
                }
                reset() {
                    clearTimeout(this._nextRun),
                    clearTimeout(this._nextPlay),
                    this._fifo = [],
                    this._ntpPresentationTime = 0,
                    this._suspended = !1
                }
                init(e) {
                    this._ntpPresentationTime = e
                }
                suspend() {
                    clearTimeout(this._nextPlay),
                    this._suspended = !0
                }
                resume() {
                    this._suspended = !1,
                    this.run(void 0)
                }
                run(e) {
                    if (clearTimeout(this._nextRun),
                    void 0 === this._ntpPresentationTime)
                        return;
                    if (void 0 !== e && this._fifo.push(e),
                    this._suspended)
                        return;
                    if (0 === this._fifo.length)
                        return;
                    let t, r = 0;
                    do {
                        const e = this._fifo.shift();
                        if (void 0 === e)
                            throw new Error("internal error: message should never be undefined");
                        t = e;
                        const n = t.ntpTimestamp;
                        if (void 0 === n)
                            continue;
                        r = n - this._ntpPresentationTime - 1e3 * this._clock.currentTime,
                        Math.abs(r) < this._tolerance && this._handler && this._handler(t)
                    } while (r < this._tolerance && this._fifo.length > 0);
                    r < -this._tolerance ? (clearTimeout(this._nextPlay),
                    this._clock.pause(),
                    this._nextPlay = window.setTimeout(( () => this._clock.play()), -r)) : r > this._tolerance && (this._fifo.unshift(t),
                    this._nextRun = window.setTimeout(( () => this.run(void 0)), r))
                }
            }
            function M(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class D extends d {
                constructor(e) {
                    if (void 0 === e)
                        throw new Error("canvas element argument missing");
                    let t = 0
                      , r = 0
                      , n = 0;
                    const i = {
                        bitrate: 0,
                        framerate: 0,
                        renderedFrames: 0
                    };
                    let s, a, c = null;
                    if (void 0 !== window.createImageBitmap && (c = e.getContext("bitmaprenderer")),
                    null === c && (c = e.getContext("2d")),
                    null === c)
                        a = () => {}
                        ;
                    else if ("transferFromImageBitmap"in c) {
                        const e = c;
                        a = t => {
                            let {blob: r} = t;
                            i.renderedFrames++,
                            window.createImageBitmap(r).then((t => {
                                e.transferFromImageBitmap(t)
                            }
                            )).catch(( () => {}
                            ))
                        }
                    } else {
                        const e = c
                          , t = new Image;
                        t.onload = () => {
                            e.drawImage(t, 0, 0)
                        }
                        ,
                        a = e => {
                            let {blob: r} = e;
                            i.renderedFrames++;
                            const n = window.URL.createObjectURL(r);
                            t.src = n
                        }
                    }
                    const u = new A
                      , l = new j(u,a);
                    let h = 0;
                    const d = () => {
                        this.onCanplay && this.onCanplay()
                    }
                      , f = e => {
                        this.onSync && this.onSync(e)
                    }
                      , p = new o.Writable({
                        objectMode: !0,
                        write: (o, a, c) => {
                            if (o.type === O.SDP) {
                                u.reset(),
                                l.reset(),
                                t = 0;
                                const e = o.sdp.media.find((e => "video" === e.type && void 0 !== e.rtpmap && "JPEG" === e.rtpmap.encodingName));
                                void 0 !== e && void 0 !== e.rtpmap && (n = e.rtpmap.clockrate,
                                (e => {
                                    e.bitrate = 0,
                                    e.framerate = 0,
                                    e.renderedFrames = 0
                                }
                                )(i),
                                s = (e => {
                                    let t = 0
                                      , r = 0
                                      , n = 0;
                                    return (i, o) => {
                                        let {byteLength: s, duration: a} = o;
                                        if (t += s,
                                        r += a,
                                        n++,
                                        r >= e) {
                                            const o = 8 * t
                                              , s = n
                                              , a = r / e;
                                            i.bitrate = o / a,
                                            i.framerate = s / a,
                                            t = 0,
                                            r = 0,
                                            n = 0
                                        }
                                    }
                                }
                                )(n)),
                                c()
                            } else if (o.type === O.JPEG) {
                                const {timestamp: a, ntpTimestamp: u} = o;
                                if (!t) {
                                    t = a,
                                    r = a;
                                    const {width: n, height: i} = o.framesize;
                                    e.width = n,
                                    e.height = i,
                                    l.init(0)
                                }
                                const p = 1e3 * (a - t) / n
                                  , m = new window.Blob([o.data],{
                                    type: "image/jpeg"
                                });
                                !h && u && (h = u - p,
                                f(h)),
                                l.run({
                                    ntpTimestamp: p,
                                    blob: m
                                }),
                                a === t && d(),
                                s(i, {
                                    byteLength: o.data.length,
                                    duration: a - r
                                }),
                                r = a,
                                c()
                            } else
                                c()
                        }
                    })
                      , m = new o.Readable({
                        objectMode: !0,
                        read: function() {}
                    });
                    m.on("error", ( () => {
                        console.warn("outgoing stream broke somewhere")
                    }
                    )),
                    super(p, m),
                    M(this, "onCanplay", void 0),
                    M(this, "onSync", void 0),
                    M(this, "_clock", void 0),
                    M(this, "_scheduler", void 0),
                    M(this, "_info", void 0),
                    this._clock = u,
                    this._scheduler = l,
                    this._info = i,
                    this.onCanplay = void 0,
                    this.onSync = void 0
                }
                get currentTime() {
                    return this._clock.currentTime
                }
                pause() {
                    this._scheduler.suspend(),
                    this._clock.pause()
                }
                play() {
                    this._clock.play(),
                    this._scheduler.resume()
                }
                get bitrate() {
                    return this._info.bitrate
                }
                get framerate() {
                    return this._info.framerate
                }
            }
            var N = r(1227)
              , F = r.n(N)
              , q = r(8764).Buffer;
            let H;
            !function(e) {
                e[e.UNSPECIFIED = 0] = "UNSPECIFIED",
                e[e.NON_IDR_PICTURE = 1] = "NON_IDR_PICTURE",
                e[e.IDR_PICTURE = 5] = "IDR_PICTURE",
                e[e.SEI = 6] = "SEI",
                e[e.SPS = 7] = "SPS",
                e[e.PPS = 8] = "PPS"
            }(H || (H = {}));
            const $ = F()("msl:h264depay");
            class W {
                constructor() {
                    var e, t, r;
                    r = void 0,
                    (t = "_buffer")in (e = this) ? Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = r,
                    this._buffer = q.alloc(0)
                }
                parse(e) {
                    const t = C(e.data)
                      , r = 31 & t[0];
                    if (28 === r) {
                        const r = t[0]
                          , n = t[1]
                          , i = 31 & n
                          , o = 224 & r | i
                          , s = 64 & n;
                        if (!!(n >> 7))
                            return this._buffer = q.concat([q.from([0, 0, 0, 0, o]), t.slice(2)]),
                            null;
                        if (s) {
                            const r = q.concat([this._buffer, t.slice(2)]);
                            r.writeUInt32BE(r.length - 4, 0);
                            const n = {
                                data: r,
                                type: O.H264,
                                timestamp: S(e.data),
                                ntpTimestamp: e.ntpTimestamp,
                                payloadType: w(e.data),
                                nalType: i
                            };
                            return this._buffer = q.alloc(0),
                            n
                        }
                        return this._buffer = q.concat([this._buffer, t.slice(2)]),
                        null
                    }
                    if (r !== H.NON_IDR_PICTURE && r !== H.IDR_PICTURE || 0 !== this._buffer.length) {
                        if (r === H.SEI || r === H.SPS || r === H.PPS) {
                            const n = {
                                data: q.concat([q.from([]), t]),
                                type: O.H264Ext,
                                timestamp: S(e.data),
                                ntpTimestamp: e.ntpTimestamp,
                                payloadType: w(e.data),
                                nalType: r
                            };
                            return this._buffer = q.alloc(0),
                            n
                        }
                        return $(`H264depayComponent can only extract types 1,5,6,7,8 and 28, got ${r}`),
                        this._buffer = q.alloc(0),
                        null
                    }
                    {
                        const n = q.concat([q.from([0, 0, 0, 0]), t]);
                        n.writeUInt32BE(n.length - 4, 0);
                        const i = {
                            data: n,
                            type: O.H264,
                            timestamp: S(e.data),
                            ntpTimestamp: e.ntpTimestamp,
                            payloadType: w(e.data),
                            nalType: r
                        };
                        return this._buffer = q.alloc(0),
                        i
                    }
                }
            }
            var z = r(8764).Buffer;
            function V(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    r.push.apply(r, n)
                }
                return r
            }
            function G(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? V(Object(r), !0).forEach((function(t) {
                        Y(e, t, r[t])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : V(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }
                    ))
                }
                return e
            }
            function Y(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class J extends h {
                constructor() {
                    let e, t = !1, r = [];
                    const n = new W;
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(i, o, s) {
                            if (i.type === O.SDP) {
                                const t = i.sdp.media.find((e => "video" === e.type && void 0 !== e.rtpmap && "H264" === e.rtpmap.encodingName));
                                void 0 !== t && void 0 !== t.rtpmap && (e = t.rtpmap.payloadType),
                                s(void 0, i)
                            } else if (i.type === O.RTP && w(i.data) === e) {
                                const e = v(i.data)
                                  , o = n.parse(i);
                                if (null !== o && o.type === O.H264Ext)
                                    return void s(void 0, o);
                                if (null === o || !t && o.nalType !== H.IDR_PICTURE)
                                    return void s();
                                t = !0,
                                r.push(o.data),
                                e && (this.push(G(G({}, o), {}, {
                                    data: 1 === r.length ? r[0] : z.concat(r)
                                })),
                                r = []),
                                s()
                            } else
                                s(void 0, i)
                        }
                    }))
                }
            }
            var K = r(8764).Buffer;
            function X(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    r.push.apply(r, n)
                }
                return r
            }
            function Z(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            const Q = F()("msl:http-source");
            class ee extends l {
                constructor(e) {
                    const {uri: t, options: r} = e
                      , n = new o.Readable({
                        objectMode: !0,
                        read: function() {}
                    });
                    n.on("error", (e => {
                        console.warn("closing socket due to incoming error", e),
                        this._reader && this._reader.cancel()
                    }
                    )),
                    super(n),
                    Z(this, "uri", void 0),
                    Z(this, "options", void 0),
                    Z(this, "length", void 0),
                    Z(this, "onHeaders", void 0),
                    Z(this, "onServerClose", void 0),
                    Z(this, "_reader", void 0),
                    Z(this, "_abortController", void 0),
                    Z(this, "_allDone", void 0),
                    n._read = () => {
                        this._pull()
                    }
                    ,
                    this.uri = t,
                    this.options = r,
                    this._allDone = !1
                }
                play() {
                    if (void 0 === this.uri)
                        throw new Error("cannot start playing when there is no URI");
                    this._abortController = new AbortController,
                    this.length = 0,
                    fetch(this.uri, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var r = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? X(Object(r), !0).forEach((function(t) {
                                Z(e, t, r[t])
                            }
                            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : X(Object(r)).forEach((function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                            }
                            ))
                        }
                        return e
                    }({
                        credentials: "include",
                        signal: this._abortController.signal
                    }, this.options)).then((e => {
                        if (null === e.body)
                            throw new Error("empty response body");
                        this.onHeaders && this.onHeaders(e.headers),
                        this._reader = e.body.getReader(),
                        this._pull()
                    }
                    )).catch((e => {
                        console.error("http-source: fetch failed: ", e)
                    }
                    ))
                }
                abort() {
                    this._reader && this._reader.cancel().catch((e => {
                        console.log("http-source: cancel reader failed: ", e)
                    }
                    )),
                    this._abortController && this._abortController.abort()
                }
                _isClosed() {
                    return this._allDone
                }
                _close() {
                    var e;
                    this._reader = void 0,
                    this._allDone = !0,
                    this.incoming.push(null),
                    null === (e = this.onServerClose) || void 0 === e || e.call(this)
                }
                _pull() {
                    void 0 !== this._reader && this._reader.read().then((e => {
                        let {done: t, value: r} = e;
                        if (t)
                            return void (this._isClosed() || (Q("fetch completed, total downloaded: ", this.length, " bytes"),
                            this._close()));
                        if (void 0 === r)
                            throw new Error("expected value to be defined");
                        if (void 0 === this.length)
                            throw new Error("expected length to be defined");
                        this.length += r.length;
                        const n = K.from(r);
                        this.incoming.push({
                            data: n,
                            type: O.RAW
                        }) ? this._pull() : Q("downstream back pressure: pausing read")
                    }
                    )).catch((e => {
                        Q("http-source: read failed: ", e),
                        this._isClosed() || this._close()
                    }
                    ))
                }
            }
            const te = (prefix, e) => {
                let t = Date.now();
                const r = e => {
                    const r = Date.now();
                    console.log(`${prefix}: +${r - t}ms`, e),
                    t = r
                }
                ;
                return void 0 === e ? r : t => t.type === e && r(t)
            }
            ;
            class re extends h {
                constructor(e) {
                    const t = te("incoming", e)
                      , r = new o.Transform({
                        objectMode: !0,
                        transform: function(e, r, n) {
                            t(e),
                            n(void 0, e)
                        }
                    })
                      , n = te("outgoing", e);
                    super(r, new o.Transform({
                        objectMode: !0,
                        transform: function(e, t, r) {
                            n(e),
                            r(void 0, e)
                        }
                    }))
                }
            }
            var ne = r(8764).Buffer;
            function ie() {
                return ne.from([255, 216])
            }
            function oe(e, t) {
                const r = 1 & e ? 128 : 64
                  , n = 2 & e ? 128 : 64;
                if (t.length !== r + n)
                    throw new Error("invalid quantization table");
                const i = ne.from([255, 219, 0, r + 3, 0])
                  , o = ne.from([255, 219, 0, n + 3, 1]);
                return ne.concat([i, t.slice(0, r), o, t.slice(r)])
            }
            function se(e, t, r) {
                return ne.from([255, 192, 0, 17, 8, t >> 8, t, e >> 8, e, 3, 0, 0 === r ? 33 : 34, 0, 1, 17, 1, 2, 17, 1])
            }
            const ae = [0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
              , ce = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
              , ue = [0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125]
              , le = [1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250]
              , he = [0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
              , de = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
              , fe = [0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119]
              , pe = [0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250];
            function me() {
                const e = [[255, 196, 0, 3 + ae.length + ce.length, 0], ae, ce]
                  , t = [[255, 196, 0, 3 + ue.length + le.length, 16], ue, le]
                  , r = [[255, 196, 0, 3 + he.length + de.length, 1], he, de]
                  , n = [[255, 196, 0, 3 + fe.length + pe.length, 17], fe, pe];
                return ne.concat([...e.map(ne.from), ...t.map(ne.from), ...r.map(ne.from), ...n.map(ne.from)])
            }
            function ge() {
                return ne.from([255, 218, 0, 12, 3, 0, 0, 1, 17, 2, 17, 0, 63, 0])
            }
            function ye(e) {
                return ne.from([255, 221, 0, 4, e >> 8, 255 & e])
            }
            function be(e, t, r) {
                return e > r ? r : e < t ? t : e
            }
            var ve = r(8764).Buffer;
            const we = [16, 11, 12, 14, 12, 10, 16, 14, 13, 14, 18, 17, 16, 19, 24, 40, 26, 24, 22, 22, 24, 49, 35, 37, 29, 40, 58, 51, 61, 60, 57, 51, 56, 55, 64, 72, 92, 78, 64, 68, 87, 69, 55, 56, 80, 109, 81, 87, 95, 98, 103, 104, 103, 62, 77, 113, 121, 112, 100, 120, 92, 101, 103, 99]
              , _e = [17, 18, 18, 24, 21, 24, 47, 26, 26, 47, 99, 66, 56, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99];
            function Se(e) {
                const t = be(e, 1, 99)
                  , r = ve.alloc(128)
                  , n = e < 50 ? Math.floor(5e3 / t) : 200 - 2 * t;
                for (let e = 0; e < 64; e++) {
                    const t = Math.floor((we[e] * n + 50) / 100)
                      , i = Math.floor((_e[e] * n + 50) / 100);
                    r.writeUInt8(be(t, 1, 255), e),
                    r.writeUInt8(be(i, 1, 255), e + 64)
                }
                return r
            }
            var Ee = r(8764).Buffer;
            function Te() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                const r = ie()
                  , n = me()
                  , i = ge();
                return function(o) {
                    let s;
                    const a = [];
                    for (const r of o) {
                        let n = C(r);
                        const i = n.readUInt8(0)
                          , o = n.readUInt8(1) << 16 | n.readUInt8(2) << 8 | n.readUInt8(3)
                          , c = n.readUInt8(4)
                          , u = n.readUInt8(5)
                          , l = 8 * n.readUInt8(6) || e
                          , h = 8 * n.readUInt8(7) || t;
                        n = n.slice(8);
                        let d = 0;
                        if (c >= 64 && c <= 127 && (d = n.readUInt16BE(0),
                        n = n.slice(4)),
                        u >= 128 && 0 === o) {
                            const e = n.readUInt8(1)
                              , t = n.readUInt16BE(2);
                            s = {
                                typeSpecific: i,
                                type: c,
                                width: l,
                                height: h,
                                DRI: d,
                                precision: e,
                                qTable: n.slice(4, 4 + t)
                            },
                            n = n.slice(4 + t)
                        } else if (u < 128 && 0 === o) {
                            s = {
                                typeSpecific: i,
                                type: c,
                                width: l,
                                height: h,
                                DRI: d,
                                precision: 0,
                                qTable: Se(u)
                            }
                        }
                        a.push(n)
                    }
                    if (void 0 === s)
                        throw new Error("no quantization header present");
                    const {precision: c, qTable: u, type: l, width: h, height: d} = s
                      , f = oe(c, u)
                      , p = 0 === s.DRI ? Ee.alloc(0) : ye(s.DRI)
                      , m = se(h, d, l);
                    return {
                        size: {
                            width: h,
                            height: d
                        },
                        data: Ee.concat([r, f, p, m, n, i, ...a])
                    }
                }
            }
            class xe extends h {
                constructor() {
                    let e, t, r = [];
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(n, i, o) {
                            if (n.type === O.SDP) {
                                const r = n.sdp.media.find((e => "video" === e.type && void 0 !== e.rtpmap && "JPEG" === e.rtpmap.encodingName));
                                if (void 0 !== r && void 0 !== r.rtpmap) {
                                    e = Number(r.rtpmap.payloadType);
                                    const n = r.framesize;
                                    if (void 0 !== n) {
                                        const [e,r] = n;
                                        t = Te(e, r)
                                    } else
                                        t = Te()
                                }
                                o(void 0, n)
                            } else if (n.type === O.RTP && w(n.data) === e) {
                                if (r.push(n.data),
                                v(n.data) && r.length > 0) {
                                    const e = t(r);
                                    this.push({
                                        timestamp: S(n.data),
                                        ntpTimestamp: n.ntpTimestamp,
                                        payloadType: w(n.data),
                                        data: e.data,
                                        framesize: e.size,
                                        type: O.JPEG
                                    }),
                                    r = []
                                }
                                o()
                            } else
                                o(void 0, n)
                        }
                    }))
                }
            }
            var Re = r(8764).Buffer;
            function Ce(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Oe extends h {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 225e6;
                    const t = new o.Transform({
                        objectMode: !0,
                        transform: (e, t, r) => {
                            this._active && e.type === O.ISOM && void 0 !== e.tracks && (this._capture = !0),
                            this._capture && e.type === O.ISOM && (this._bufferOffset < this._buffer.byteLength - e.data.byteLength ? (e.data.copy(this._buffer, this._bufferOffset),
                            this._bufferOffset += e.data.byteLength) : this.stop()),
                            r(void 0, e)
                        }
                    });
                    t.on("finish", ( () => {
                        this.stop()
                    }
                    )),
                    super(t),
                    Ce(this, "_active", void 0),
                    Ce(this, "_capture", void 0),
                    Ce(this, "_captureCallback", void 0),
                    Ce(this, "_bufferOffset", void 0),
                    Ce(this, "_bufferSize", void 0),
                    Ce(this, "_buffer", void 0),
                    this._buffer = Re.allocUnsafe(0),
                    this._bufferSize = e,
                    this._bufferOffset = 0,
                    this._active = !1,
                    this._capture = !1,
                    this._captureCallback = () => {}
                }
                start(e) {
                    this._active || (F()("msl:capture:start")(e),
                    this._captureCallback = e,
                    this._buffer = Re.allocUnsafe(this._bufferSize),
                    this._bufferOffset = 0,
                    this._active = !0)
                }
                stop() {
                    if (this._active) {
                        F()("msl:capture:stop")(`captured bytes: ${this._bufferOffset}`);
                        try {
                            this._captureCallback(this._buffer.slice(0, this._bufferOffset))
                        } catch (e) {
                            console.error(e)
                        }
                        this._buffer = Re.allocUnsafe(0),
                        this._bufferOffset = 0,
                        this._active = !1,
                        this._capture = !1
                    }
                }
            }
            var Pe = r(8764).Buffer;
            function Ie(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            const ke = Math.pow(2, 32);
            class Be {
                constructor(e) {
                    Ie(this, "byteLength", void 0),
                    Ie(this, "value", void 0),
                    this.byteLength = e
                }
            }
            class Le extends Be {
                constructor() {
                    super(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0),
                    Ie(this, "copy", ( (e, t) => {
                        e.fill(0, t, t + this.byteLength)
                    }
                    ))
                }
                load() {}
            }
            class Ae extends Be {
                constructor(e) {
                    super(e.length),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        for (let r = 0; r < this.byteLength; r += 1)
                            e[t + r] = this.value.charCodeAt(r)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        this.value = e.slice(t, t + this.byteLength).toString("ascii")
                    }
                    )),
                    this.value = e
                }
            }
            class Ue extends Be {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    super(1),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        e.writeUInt8(this.value, t)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        this.value = e.readUInt8(t)
                    }
                    )),
                    this.value = e
                }
            }
            class je extends Be {
                constructor(e) {
                    super(e.length),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        for (let r = 0; r < this.value.length; ++r)
                            e.writeUInt8(this.value[r], t + r)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        for (let r = 0; r < this.value.length; ++r)
                            this.value[r] = e.readUInt8(t + r)
                    }
                    )),
                    this.value = e
                }
            }
            class Me extends Be {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    super(2),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        e.writeUInt16BE(this.value, t)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        this.value = e.readUInt16BE(t)
                    }
                    )),
                    this.value = e
                }
            }
            class De extends Be {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    super(3),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        e.writeUInt8(this.value >> 16 & 255, t),
                        e.writeUInt8(this.value >> 8 & 255, t + 1),
                        e.writeUInt8(255 & this.value, t + 2)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        this.value = e.readUInt8(t) << 16 + e.readUInt8(t + 1) << 8 + e.readUInt8(t + 2)
                    }
                    )),
                    this.value = e
                }
            }
            class Ne extends Be {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    super(4),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        e.writeUInt32BE(this.value, t)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        this.value = e.readUInt32BE(t)
                    }
                    )),
                    this.value = e
                }
            }
            class Fe extends Be {
                constructor(e) {
                    super(4 * e.length),
                    Ie(this, "value", void 0),
                    Ie(this, "copy", ( (e, t) => {
                        for (let r = 0; r < this.value.length; ++r)
                            e.writeUInt32BE(this.value[r], t + 4 * r)
                    }
                    )),
                    Ie(this, "load", ( (e, t) => {
                        for (let r = 0; r < this.value.length; ++r)
                            this.value[r] = e.readUInt32BE(t + 4 * r)
                    }
                    )),
                    this.value = e
                }
            }
            const qe = function() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return class extends Be {
                    constructor(t) {
                        super(0),
                        Ie(this, "value", void 0),
                        Ie(this, "copy", ( (e, t) => {
                            let r = 0;
                            for (const n of this.value)
                                n.copy(e, t + r),
                                r += n.byteLength
                        }
                        )),
                        Ie(this, "load", ( () => {}
                        )),
                        this.value = t.reduce(( (e, t) => e.concat(new Me(t.length), new je(t))), [new Ue(e | t.length)]),
                        this.byteLength = this.value.reduce(( (e, t) => e + t.byteLength), 0)
                    }
                }
            }
              , He = {
                ftyp: {
                    container: "file",
                    mandatory: !0,
                    quantity: "one",
                    box: "Box",
                    is_container: !0,
                    body: [["major_brand", Ae, "isom"], ["minor_version", Ne, 0], ["compatible_brands", Ae, "mp41"]]
                },
                moov: {
                    container: "file",
                    mandatory: !0,
                    quantity: "one",
                    box: "Box",
                    is_container: !0
                },
                mdat: {
                    container: "file",
                    mandatory: !1,
                    quantity: "any",
                    box: "Box",
                    is_container: !1,
                    body: []
                },
                mvhd: {
                    container: "moov",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["creation_time", Ne, 0], ["modification_time", Ne, 0], ["timescale", Ne, 1e3], ["duration", Ne, 4294967295], ["rate", Ne, 65536], ["volume", Me, 256], ["reserved", Le, 10], ["matrix", Fe, [65536, 0, 0, 0, 65536, 0, 0, 0, 1073741824]], ["pre_defined", Le, 24], ["next_track_ID", Ne, 4294967295]]
                },
                trak: {
                    container: "moov",
                    mandatory: !0,
                    quantity: "one+",
                    box: "Box",
                    is_container: !0
                },
                tkhd: {
                    container: "trak",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    config: {
                        flags: 3
                    },
                    body: [["creation_time", Ne, 0], ["modification_time", Ne, 0], ["track_ID", Ne, 1], ["reserved", Le, 4], ["duration", Ne, 0], ["reserved2", Le, 8], ["layer", Me, 0], ["alternate_group", Me, 0], ["volume", Me, 256], ["reserved3", Le, 2], ["matrix", Fe, [65536, 0, 0, 0, 65536, 0, 0, 0, 1073741824]], ["width", Ne, 0], ["height", Ne, 0]]
                },
                tref: {
                    container: "trak",
                    mandatory: !1,
                    quantity: "one-",
                    box: "Box",
                    is_container: !1
                },
                mdia: {
                    container: "trak",
                    mandatory: !1,
                    quantity: "one",
                    box: "Box",
                    is_container: !0
                },
                mdhd: {
                    container: "mdia",
                    mandatory: !1,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["creation_time", Ne, 0], ["modification_time", Ne, 0], ["timescale", Ne, 1e3], ["duration", Ne, 4294967295], ["language", Me, 0], ["pre_defined", Me, 0]]
                },
                hdlr: {
                    container: "mdia",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["predefined", Ne, 0], ["handler_type", Ae, "vide"], ["reserved", Le, 12], ["name", Ae, "VideoHandler\0"]]
                },
                minf: {
                    container: "mdia",
                    mandatory: !0,
                    quantity: "one",
                    box: "Box",
                    is_container: !0
                },
                vmhd: {
                    container: "minf",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    config: {
                        flags: 1
                    },
                    body: [["graphicsmode", Me, 0], ["opcolor", class extends Be {
                        constructor(e) {
                            super(2 * e.length),
                            Ie(this, "value", void 0),
                            Ie(this, "copy", ( (e, t) => {
                                for (let r = 0; r < this.value.length; ++r)
                                    e.writeUInt16BE(this.value[r], t + 2 * r)
                            }
                            )),
                            Ie(this, "load", ( (e, t) => {
                                for (let r = 0; r < this.value.length; ++r)
                                    this.value[r] = e.readUInt16BE(t + 2 * r)
                            }
                            )),
                            this.value = e
                        }
                    }
                    , [0, 0, 0]]]
                },
                smhd: {
                    container: "minf",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["balance", Me, 0], ["reserved", Me]]
                },
                dinf: {
                    container: "minf",
                    mandatory: !0,
                    quantity: "one",
                    box: "Box",
                    is_container: !0
                },
                dref: {
                    container: "dinf",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !0,
                    body: [["entry_count", Ne, 0]]
                },
                "url ": {
                    container: "dref",
                    mandatory: !0,
                    quantity: "one+",
                    box: "FullBox",
                    is_container: !1,
                    config: {
                        flags: 1
                    },
                    body: []
                },
                stbl: {
                    container: "minf",
                    mandatory: !0,
                    quantity: "one",
                    box: "Box",
                    is_container: !0
                },
                stts: {
                    container: "stbl",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["entry_count", Ne, 0]]
                },
                stsd: {
                    container: "stbl",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !0,
                    body: [["entry_count", Ne, 1]]
                },
                avc1: {
                    container: "stsd",
                    mandatory: !1,
                    quantity: "one",
                    box: "Box",
                    is_container: !0,
                    body: [["reserved", Le, 6], ["data_reference_index", Me, 1], ["pre_defined", Me, 0], ["reserved2", Le, 2], ["pre_defined2", Fe, [0, 0, 0]], ["width", Me, 1920], ["height", Me, 1080], ["horizresolution", Ne, 4718592], ["vertresolution", Ne, 4718592], ["reserved3", Ne, 0], ["frame_count", Me, 1], ["compressorname", je, Pe.alloc(32)], ["depth", Me, 24], ["pre_defined3", Me, 65535]]
                },
                avcC: {
                    container: "avc1",
                    mandatory: !1,
                    quantity: "one",
                    box: "Box",
                    is_container: !1,
                    body: [["configurationVersion", Ue, 1], ["AVCProfileIndication", Ue, 77], ["profile_compatibility", Ue, 0], ["AVCLevelIndication", Ue, 41], ["lengthSizeMinusOne", Ue, 255], ["sequenceParameterSets", qe(224), []], ["pictureParameterSets", qe(), []]]
                },
                mp4a: {
                    container: "stsd",
                    mandatory: !1,
                    quantity: "one",
                    box: "Box",
                    is_container: !0,
                    body: [["reserved", Le, 6], ["data_reference_index", Me, 1], ["reserved2", Fe, [0, 0]], ["channelcount", Me, 2], ["samplesize", Me, 16], ["pre_defined", Me, 0], ["reserved3", Me, 0], ["samplerate", Ne, 0]]
                },
                esds: {
                    container: "mp4a",
                    mandatory: !1,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["ES_DescrTag", Ue, 3], ["ES_DescrLength", Ue, 25], ["ES_ID", Me, 1], ["flagsAndStreamPriority", Ue, 0], ["DecoderConfigDescrTag", Ue, 4], ["DecoderConfigDescrLength", Ue, 17], ["objectProfileIndication", Ue, 64], ["streamTypeUpstreamReserved", Ue, 21], ["bufferSizeDB", je, [0, 0, 0]], ["maxBitRate", Ne, 0], ["avgBitRate", Ne, 0], ["DecSpecificInfoShortTag", Ue, 5], ["DecSpecificInfoShortLength", Ue, 2], ["audioConfigBytes", Me, 0], ["SLConfigDescrTag", Ue, 6], ["SLConfigDescrLength", Ue, 1], ["SLConfigDescrPredefined", Ue, 2]]
                },
                stsz: {
                    container: "stbl",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["sample_size", Ne, 0], ["sample_count", Ne, 0]]
                },
                stsc: {
                    container: "stbl",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["entry_count", Ne, 0]]
                },
                stco: {
                    container: "stbl",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["entry_count", Ne, 0]]
                },
                stss: {
                    container: "stbl",
                    mandatory: !1,
                    quantity: "one-",
                    box: "FullBox",
                    is_container: !1,
                    body: [["entry_count", Ne, 0]]
                },
                edts: {
                    container: "trak",
                    mandatory: !1,
                    quantity: "one-",
                    box: "Box",
                    is_container: !0
                },
                elst: {
                    container: "edts",
                    mandatory: !1,
                    quantity: "one-",
                    box: "FullBox",
                    is_container: !1,
                    body: [["entry_count", Ne, 1], ["segment_duration", Ne, 0], ["media_time", Ne, 4294967295], ["media_rate_integer", Me, 1], ["media_rate_fraction", Me, 0]]
                },
                mvex: {
                    container: "moov",
                    mandatory: !1,
                    quantity: "one-",
                    box: "Box",
                    is_container: !0
                },
                mehd: {
                    container: "mvex",
                    mandatory: !1,
                    quantity: "one-",
                    box: "FullBox",
                    is_container: !1,
                    body: [["fragment_duration", Ne, 0]]
                },
                trex: {
                    container: "mvex",
                    mandatory: !0,
                    quantity: "one+",
                    box: "FullBox",
                    is_container: !1,
                    body: [["track_ID", Ne, 1], ["default_sample_description_index", Ne, 1], ["default_sample_duration", Ne, 0], ["default_sample_size", Ne, 0], ["default_sample_flags", Ne, 0]]
                },
                moof: {
                    container: "file",
                    mandatory: !1,
                    quantity: "zero+",
                    box: "Box",
                    is_container: !1
                },
                mfhd: {
                    container: "moof",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    body: [["sequence_number", Ne, 0]]
                },
                traf: {
                    container: "moof",
                    mandatory: !1,
                    quantity: "zero+",
                    box: "Box",
                    is_container: !0
                },
                tfhd: {
                    container: "traf",
                    mandatory: !0,
                    quantity: "one",
                    box: "FullBox",
                    is_container: !1,
                    config: {
                        flags: 32
                    },
                    body: [["track_ID", Ne, 1], ["default_sample_flags", Ne, 0]]
                },
                tfdt: {
                    container: "traf",
                    mandatory: !1,
                    quantity: "one-",
                    box: "FullBox",
                    is_container: !1,
                    config: {
                        version: 1
                    },
                    body: [["baseMediaDecodeTime", class extends Be {
                        constructor() {
                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                            super(8),
                            Ie(this, "value", void 0),
                            Ie(this, "copy", ( (e, t) => {
                                const r = this.value / ke | 0
                                  , n = this.value - r * ke;
                                e.writeUInt32BE(r, t),
                                e.writeUInt32BE(n, t + 4)
                            }
                            )),
                            Ie(this, "load", ( (e, t) => {
                                const r = e.readUInt32BE(t)
                                  , n = e.readUInt32BE(t + 4);
                                this.value = r * ke + n
                            }
                            )),
                            this.value = e
                        }
                    }
                    , 0]]
                },
                trun: {
                    container: "traf",
                    mandatory: !1,
                    quantity: "zero+",
                    box: "FullBox",
                    is_container: !1,
                    config: {
                        flags: 773
                    },
                    body: [["sample_count", Ne, 1], ["data_offset", Ne, 0], ["first_sample_flags", Ne, 0], ["sample_duration", Ne, 0], ["sample_size", Ne, 0]]
                },
                "....": {
                    box: "Box",
                    is_container: !1,
                    body: []
                },
                file: {
                    box: "None",
                    is_container: !0,
                    mandatory: !0,
                    quantity: "one"
                }
            };
            class $e extends Be {
                constructor(e, t) {
                    super(0),
                    Ie(this, "type", void 0),
                    Ie(this, "config", void 0),
                    Ie(this, "struct", void 0),
                    this.type = e;
                    const r = He[this.type];
                    if (void 0 === r)
                        throw new Error(`unknown box type: ${e}`);
                    this.config = Object.assign({}, r.config, t);
                    const n = class {
                        static None() {
                            return []
                        }
                        static Box(e) {
                            return [["size", Ne, 0], ["type", Ae, e]]
                        }
                        static FullBox(e) {
                            return [].concat(this.Box(e), [["version", Ue, 0], ["flags", De, 0]])
                        }
                    }
                    [r.box](this.type)
                      , body = r.body || [];
                    this.struct = new Map;
                    let i = 0;
                    for (const [e,t,r] of [].concat(n, body)) {
                        if (this.has(e))
                            throw new Error("Trying to add existing key");
                        let n = r;
                        this.config[e] && (n = this.config[e]);
                        const o = new t(n);
                        this.struct.set(e, {
                            offset: i,
                            element: o
                        }),
                        i += o.byteLength
                    }
                    this.byteLength = i
                }
                element(e) {
                    const t = this.struct.get(e);
                    if (void 0 === t)
                        throw new Error("invalid key");
                    return t.element
                }
                set(e, t) {
                    this.element(e).value = t
                }
                get(e) {
                    return this.element(e).value
                }
                offset(e) {
                    const t = this.struct.get(e);
                    if (void 0 === t)
                        throw new Error("invalid key");
                    return t.offset
                }
                has(e) {
                    return this.struct.has(e)
                }
                add(e, t) {
                    if (this.has(e))
                        throw new Error("Trying to add existing key");
                    return this.struct.set(e, {
                        offset: this.byteLength,
                        element: t
                    }),
                    this.byteLength += t.byteLength,
                    this
                }
                buffer() {
                    const e = Pe.allocUnsafe(this.byteLength);
                    return this.copy(e),
                    e
                }
                copy(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    this.set("size", this.byteLength);
                    for (const r of this.struct.values())
                        r.element.copy(e, t + r.offset)
                }
                load(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    for (const r of this.struct.values())
                        void 0 !== r.element.load && r.element.load(e, t + r.offset)
                }
                format() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    const t = [" ".repeat(e) + `[${this.type}] (${this.byteLength})`];
                    for (const [r,n] of this.struct) {
                        const i = n.element;
                        void 0 !== i.format ? t.push(i.format(e + 2)) : t.push(" ".repeat(e + 2) + `${r} = ${i.value} (${i.byteLength})`)
                    }
                    return t.join("\n")
                }
                print(e) {
                    console.warn(this.format(e))
                }
            }
            class We extends $e {
                constructor(e, t) {
                    super(e, t),
                    Ie(this, "boxSize", void 0),
                    this.boxSize = 0;
                    for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), i = 2; i < r; i++)
                        n[i - 2] = arguments[i];
                    this.append(...n)
                }
                append() {
                    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                        t[r] = arguments[r];
                    for (const e of t)
                        this.add("box_" + this.boxSize++, e);
                    return this
                }
                parse(e) {
                    const t = [];
                    for (; e.byteLength > 0; ) {
                        const r = new Ae("....");
                        r.load(e, 4);
                        const n = r.value
                          , i = He[n];
                        let o;
                        if (void 0 !== i) {
                            if (i.is_container) {
                                o = new We(n),
                                o.load(e);
                                const r = o.parse(e.slice(o.byteLength, o.get("size")));
                                t.push(...r)
                            } else if (o = new $e(n),
                            o.load(e),
                            "avcC" === n) {
                                const e = o.element("AVCProfileIndication").value.toString(16).padStart(2, 0)
                                  , r = o.element("profile_compatibility").value.toString(16).padStart(2, 0)
                                  , n = o.element("AVCLevelIndication").value.toString(16).padStart(2, 0);
                                t.push({
                                    type: "video",
                                    mime: `avc1.${e}${r}${n}`
                                })
                            } else if ("esds" === n) {
                                const e = o.element("audioConfigBytes").value >>> 11 & 31;
                                t.push({
                                    type: "audio",
                                    mime: `mp4a.40.${e}`
                                })
                            }
                        } else
                            o = new $e("...."),
                            o.load(e),
                            o.type = o.get("type");
                        this.append(o),
                        e = e.slice(o.get("size"))
                    }
                    return t
                }
            }
            const ze = {
                1: "AAC Main",
                2: "AAC LC"
            }
              , Ve = {
                0: "96 kHz",
                1: "88.2 kHz",
                2: "64 kHz",
                3: "48 kHz",
                4: "44.1 kHz",
                5: "32 kHz",
                6: "24 kHz",
                7: "22.05 kHz",
                8: "16 kHz",
                9: "12 kHz",
                10: "11.025 kHz",
                11: "8 kHz",
                12: "7.35 kHz"
            }
              , Ge = {
                1: "Mono",
                2: "Stereo"
            }
              , Ye = e => {
                const t = e >>> 11 & 31
                  , r = e >>> 3 & 15;
                return {
                    coding: ze[t] || `AAC (${t})`,
                    samplingRate: Ve[e >>> 7 & 15] || "unknown",
                    channels: Ge[r] || r.toString()
                }
            }
            ;
            r(3462);
            function Je(e, t) {
                const r = e.replace(/[^A-Za-z0-9+/]/g, "")
                  , n = r.length
                  , i = t ? Math.ceil((3 * n + 1 >> 2) / t) * t : 3 * n + 1 >> 2
                  , o = new Uint8Array(i);
                let s, a, c = 0, u = 0;
                for (let e = 0; e < n; e++)
                    if (a = 3 & e,
                    c |= ((l = r.charCodeAt(e)) > 64 && l < 91 ? l - 65 : l > 96 && l < 123 ? l - 71 : l > 47 && l < 58 ? l + 4 : 43 === l ? 62 : 47 === l ? 63 : 0) << 18 - 6 * a,
                    3 === a || n - e == 1) {
                        for (s = 0; s < 3 && u < i; s++,
                        u++)
                            o[u] = c >>> (16 >>> s & 24) & 255;
                        c = 0
                    }
                var l;
                return o
            }
            function Ke(e) {
                return e < 26 ? e + 65 : e < 52 ? e + 71 : e < 62 ? e - 4 : 62 === e ? 43 : 63 === e ? 47 : 65
            }
            function Xe(e) {
                let t = 2
                  , r = "";
                for (let n = e.length, i = 0, o = 0; o < n; o++)
                    t = o % 3,
                    o > 0 && 4 * o / 3 % 76 == 0 && (r += "\r\n"),
                    i |= e[o] << (16 >>> t & 24),
                    2 !== t && e.length - o != 1 || (r += String.fromCharCode(Ke(i >>> 18 & 63), Ke(i >>> 12 & 63), Ke(i >>> 6 & 63), Ke(63 & i)),
                    i = 0);
                return r.substr(0, r.length - 2 + t) + (2 === t ? "" : 1 === t ? "=" : "==")
            }
            function Ze(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Qe {
                constructor(e) {
                    Ze(this, "_buffer", void 0),
                    Ze(this, "_dataView", void 0),
                    Ze(this, "_offset", void 0),
                    Ze(this, "_bitpos", void 0),
                    Ze(this, "_byte", void 0),
                    this._buffer = e,
                    this._dataView = new DataView(this._buffer),
                    this._offset = 0,
                    this._bitpos = 0,
                    this._byte = 0
                }
                readUint8(e) {
                    return this._dataView.getUint8(e)
                }
                readUint16(e) {
                    return this._dataView.getUint16(e)
                }
                readUint32(e) {
                    return this._dataView.getUint32(e)
                }
                readNext() {
                    const e = this.readUint8(this._offset);
                    return this._offset += 1,
                    e
                }
                readBits(e) {
                    if (e > 32 || 0 === e)
                        throw new Error("length has to be between 0 - 31 bits");
                    let t = 0;
                    for (let r = 1; r <= e; ++r)
                        0 === this._bitpos && (this._byte = this.readNext()),
                        t = t << 1 | this._byte >> 8 - ++this._bitpos & 1,
                        this._bitpos %= 8;
                    return t
                }
                readUnsignedExpGolomb() {
                    let e = 0;
                    for (; 1 !== this.readBits(1); )
                        e++;
                    if (0 === e)
                        return 0;
                    if (e >= 31)
                        throw new Error("read unsigned exponential Golomb: internal error");
                    let t = this.readBits(e);
                    return t |= 1 << e,
                    t - 1
                }
                readSignedExpGolomb() {
                    let e = this.readUnsignedExpGolomb();
                    return e = 1 & e ? e + 1 >> 1 : -(e >> 1),
                    e
                }
                size() {
                    return this._buffer.byteLength
                }
                getUint8Array() {
                    return new Uint8Array(this._buffer)
                }
                getArrayBuffer() {
                    return this._buffer
                }
            }
            class et {
                constructor(e) {
                    var t, r, n;
                    n = void 0,
                    (r = "reader")in (t = this) ? Object.defineProperty(t, r, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[r] = n,
                    this.reader = new Qe(e)
                }
                parse() {
                    this.reader.readNext();
                    const e = this.reader.readNext();
                    this.reader.readNext();
                    const t = this.reader.readNext();
                    if (this.reader.readUnsignedExpGolomb(),
                    [100, 110, 122, 244, 44, 83, 86, 118].includes(e)) {
                        const e = this.reader.readUnsignedExpGolomb();
                        3 === e && this.reader.readBits(1),
                        this.reader.readUnsignedExpGolomb(),
                        this.reader.readUnsignedExpGolomb(),
                        this.reader.readBits(1);
                        if (this.reader.readBits(1))
                            for (let t = 0; t < (3 !== e ? 8 : 12); t++)
                                this.reader.readBits(1)
                    }
                    this.reader.readUnsignedExpGolomb();
                    const r = this.reader.readUnsignedExpGolomb();
                    if (0 === r)
                        this.reader.readUnsignedExpGolomb();
                    else if (1 === r) {
                        let e = 0;
                        this.reader.readBits(1),
                        this.reader.readSignedExpGolomb(),
                        this.reader.readSignedExpGolomb(),
                        e = this.reader.readUnsignedExpGolomb();
                        for (let t = 0; t < e; t++)
                            this.reader.readSignedExpGolomb()
                    }
                    this.reader.readUnsignedExpGolomb(),
                    this.reader.readBits(1);
                    const n = this.reader.readUnsignedExpGolomb()
                      , i = this.reader.readUnsignedExpGolomb()
                      , o = this.reader.readBits(1);
                    this.reader.readBits(1);
                    const s = this.reader.readBits(1);
                    return {
                        profile: e,
                        level: t / 10,
                        width: 16 * (n + 1) - 2 * (s ? this.reader.readUnsignedExpGolomb() : 0) - 2 * (s ? this.reader.readUnsignedExpGolomb() : 0),
                        height: (2 - o) * (i + 1) * 16 - 2 * (s ? this.reader.readUnsignedExpGolomb() : 0) - 2 * (s ? this.reader.readUnsignedExpGolomb() : 0)
                    }
                }
            }
            const tt = {
                66: "Baseline",
                77: "Main",
                100: "High"
            }
              , rt = e => {
                const t = parseInt(e.substr(0, 2), 16)
                  , r = parseInt(e.substr(4, 2), 16);
                return {
                    coding: "H.264",
                    profile: tt[t] || t.toString(),
                    level: (r / 10).toFixed(1)
                }
            }
            ;
            function nt(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            const it = {
                "MPEG4-GENERIC": (e, t, r) => {
                    const n = Number(e.fmtp.parameters.bitrate) || 32e4
                      , i = parseInt(e.fmtp.parameters.config, 16)
                      , o = i >>> 11 & 31;
                    return {
                        tkhd: {
                            track_ID: r,
                            creation_time: t,
                            modification_time: t,
                            width: 0,
                            height: 0,
                            volume: 1
                        },
                        mdhd: {
                            timescale: Number(e.rtpmap.clockrate),
                            creation_time: t,
                            modification_time: t,
                            duration: 0
                        },
                        hdlr: {
                            handler_type: "soun",
                            name: "SoundHandler\0"
                        },
                        mediaHeaderBox: new $e("smhd"),
                        sampleEntryBox: new We("mp4a",{
                            samplerate: e.rtpmap.clockrate << 16 >>> 0
                        },new $e("esds",{
                            audioConfigBytes: i,
                            maxBitRate: n,
                            avgBitRate: n
                        })),
                        defaultFrameDuration: 1024,
                        mime: `mp4a.40.${o}`,
                        codec: Ye(i)
                    }
                }
                ,
                H264: (e, t, r) => {
                    const n = e.fmtp.parameters["profile-level-id"]
                      , i = e.fmtp.parameters["sprop-parameter-sets"].split(",").map(Je)
                      , o = i.slice(0, 1)
                      , s = i.slice(1)
                      , a = new et(o[0].buffer).parse();
                    return {
                        mediaHeaderBox: new $e("vmhd"),
                        sampleEntryBox: new We("avc1",{
                            width: a.width,
                            height: a.height
                        },new $e("avcC",{
                            AVCProfileIndication: o[0][1],
                            profile_compatibility: o[0][2],
                            AVCLevelIndication: o[0][3],
                            sequenceParameterSets: o,
                            pictureParameterSets: s
                        })),
                        tkhd: {
                            track_ID: r,
                            creation_time: t,
                            modification_time: t,
                            width: a.width << 16,
                            height: a.height << 16,
                            volume: 0
                        },
                        hdlr: {},
                        mdhd: {
                            timescale: e.rtpmap.clockrate,
                            creation_time: t,
                            modification_time: t,
                            duration: 0
                        },
                        defaultFrameDuration: void 0 !== e.framerate && e.framerate > 0 && Number(e.rtpmap.clockrate) / Number(e.framerate) || 3600,
                        mime: `avc1.${n}`,
                        codec: rt(n)
                    }
                }
            };
            class ot {
                constructor() {
                    nt(this, "trackIdMap", void 0),
                    nt(this, "sequenceNumber", void 0),
                    nt(this, "ntpPresentationTime", void 0),
                    nt(this, "trackData", void 0),
                    nt(this, "videoTrackId", void 0),
                    this.trackIdMap = {},
                    this.sequenceNumber = 0,
                    this.ntpPresentationTime = 0,
                    this.trackData = []
                }
                trak(e) {
                    const t = new We("trak")
                      , r = new We("mdia")
                      , n = new We("minf")
                      , i = new We("dinf")
                      , o = new We("dref")
                      , s = new We("stbl");
                    return o.set("entry_count", 1),
                    t.append(new $e("tkhd",e.tkhd), r.append(new $e("mdhd",e.mdhd), new $e("hdlr",e.hdlr), n.append(e.mediaHeaderBox, i.append(o.append(new $e("url "))), s.append(new We("stsd",void 0,e.sampleEntryBox), new $e("stts"), new $e("stsc"), new $e("stco"), new $e("stsz"), new $e("stss"))))),
                    t
                }
                moov(e, t) {
                    const r = new We("moov");
                    r.append(new $e("mvhd",{
                        creation_time: t,
                        modification_time: t,
                        duration: 0
                    }));
                    const n = new We("mvex");
                    this.trackIdMap = {},
                    this.sequenceNumber = 0,
                    this.ntpPresentationTime = 0;
                    let i = 0;
                    return this.trackData = [],
                    e.media.forEach((e => {
                        if (void 0 === e.rtpmap)
                            return;
                        const o = e.rtpmap.payloadType
                          , s = e.rtpmap.encodingName;
                        if (void 0 !== it[s]) {
                            this.trackIdMap[o] = ++i,
                            "video" === e.type.toLowerCase() && (this.videoTrackId = i);
                            const a = it[s](e, t, i);
                            e.mime = a.mime,
                            e.codec = a.codec;
                            const c = {
                                lastTimestamp: 0,
                                baseMediaDecodeTime: 0,
                                defaultFrameDuration: 0,
                                clockrate: 0,
                                bitrate: 0,
                                framerate: 0,
                                cumulativeByteLength: 0,
                                cumulativeDuration: 0,
                                cumulativeFrames: 0
                            };
                            c.clockrate = e.rtpmap.clockrate,
                            c.defaultFrameDuration = a.defaultFrameDuration,
                            this.trackData.push(c);
                            const u = this.trak(a);
                            r.append(u),
                            n.append(new $e("trex",{
                                track_ID: i
                            }))
                        }
                    }
                    )),
                    r.append(n),
                    r
                }
                moof(e) {
                    const {trackId: t, timestamp: r, byteLength: n} = e
                      , i = t - 1
                      , o = this.trackData[i]
                      , s = 0 !== o.lastTimestamp && o.lastTimestamp < r ? r - o.lastTimestamp | 0 : o.defaultFrameDuration;
                    o.lastTimestamp = r;
                    const a = new We("moof")
                      , c = new We("traf")
                      , u = new $e("trun",{
                        sample_duration: s,
                        sample_size: n,
                        first_sample_flags: 64
                    });
                    return a.append(new $e("mfhd",{
                        sequence_number: this.sequenceNumber++
                    }), c.append(new $e("tfhd",{
                        track_ID: t
                    }), new $e("tfdt",{
                        baseMediaDecodeTime: o.baseMediaDecodeTime
                    }), u)),
                    o.baseMediaDecodeTime += s,
                    u.set("data_offset", a.byteLength + 8),
                    ( (e, t) => {
                        let {byteLength: r, duration: n} = t;
                        if (e.cumulativeByteLength += r,
                        e.cumulativeDuration += n,
                        e.cumulativeFrames++,
                        e.cumulativeDuration >= e.clockrate) {
                            const t = 8 * e.cumulativeByteLength
                              , r = e.cumulativeFrames
                              , n = e.cumulativeDuration / e.clockrate;
                            e.bitrate = t / n,
                            e.framerate = r / n,
                            e.cumulativeByteLength = 0,
                            e.cumulativeDuration = 0,
                            e.cumulativeFrames = 0
                        }
                    }
                    )(o, {
                        byteLength: n,
                        duration: s
                    }),
                    a
                }
                mdat(e) {
                    const t = new $e("mdat");
                    return t.add("data", e),
                    t
                }
                setPresentationTime(e, t) {
                    if (!this.ntpPresentationTime && t && e === this.videoTrackId) {
                        const r = e - 1
                          , n = this.trackData[r];
                        this.ntpPresentationTime = t - n.baseMediaDecodeTime / n.clockrate * 1e3
                    }
                }
            }
            var st = r(8764).Buffer;
            function at(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class ct extends h {
                constructor() {
                    const e = new ot
                      , t = e => {
                        this.onSync && this.onSync(e)
                    }
                    ;
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(r, n, i) {
                            if (r.type === O.SDP) {
                                const t = Math.floor((new Date).getTime() / 1e3 + 2082852e3)
                                  , n = new $e("ftyp")
                                  , i = e.moov(r.sdp, t)
                                  , o = st.allocUnsafe(n.byteLength + i.byteLength);
                                n.copy(o, 0),
                                i.copy(o, n.byteLength),
                                F()("msl:mp4:isom")(`ftyp: ${n.format()}`),
                                F()("msl:mp4:isom")(`moov: ${i.format()}`);
                                const s = r.sdp.media.map((e => ({
                                    type: e.type,
                                    encoding: e.rtpmap && e.rtpmap.encodingName,
                                    mime: e.mime,
                                    codec: e.codec
                                })));
                                this.push({
                                    type: O.ISOM,
                                    data: o,
                                    tracks: s,
                                    ftyp: n,
                                    moov: i
                                })
                            } else if (r.type === O.ELEMENTARY || r.type === O.H264) {
                                const {payloadType: n, timestamp: i, ntpTimestamp: o} = r
                                  , s = e.trackIdMap[n];
                                if (s && (e.ntpPresentationTime || (e.setPresentationTime(s, o),
                                e.ntpPresentationTime && t(e.ntpPresentationTime)),
                                e.ntpPresentationTime)) {
                                    let t;
                                    const n = r.type === O.H264 ? r.nalType === H.IDR_PICTURE : void 0;
                                    e.ntpPresentationTime && n && void 0 !== r.ntpTimestamp && (t = (r.ntpTimestamp - e.ntpPresentationTime) / 1e3);
                                    const a = r.data.byteLength
                                      , c = e.moof({
                                        trackId: s,
                                        timestamp: i,
                                        byteLength: a
                                    })
                                      , u = e.mdat(r.data)
                                      , l = st.allocUnsafe(c.byteLength + u.byteLength);
                                    c.copy(l, 0),
                                    u.copy(l, c.byteLength),
                                    this.push({
                                        type: O.ISOM,
                                        data: l,
                                        moof: c,
                                        mdat: u,
                                        ntpTimestamp: o,
                                        checkpointTime: t
                                    })
                                }
                            } else
                                this.push(r);
                            i()
                        }
                    })),
                    at(this, "boxBuilder", void 0),
                    at(this, "onSync", void 0),
                    this.boxBuilder = e
                }
                get bitrate() {
                    return this.boxBuilder.trackData && this.boxBuilder.trackData.map((e => e.bitrate))
                }
                get framerate() {
                    return this.boxBuilder.trackData && this.boxBuilder.trackData.map((e => e.framerate))
                }
                get ntpPresentationTime() {
                    return this.boxBuilder.ntpPresentationTime
                }
            }
            function ut(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    r.push.apply(r, n)
                }
                return r
            }
            function lt(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? ut(Object(r), !0).forEach((function(t) {
                        ht(e, t, r[t])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ut(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }
                    ))
                }
                return e
            }
            function ht(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            let dt;
            !function(e) {
                e[e.SR = 200] = "SR",
                e[e.RR = 201] = "RR",
                e[e.SDES = 202] = "SDES",
                e[e.BYE = 203] = "BYE",
                e[e.APP = 204] = "APP"
            }(dt || (dt = {}));
            const ft = e => {
                const t = (e => ({
                    version: e[0] >>> 6,
                    padding: !!(e[0] & f[2]),
                    count: 31 & e[0],
                    packetType: e.readUInt8(1),
                    length: e.readUInt16BE(2)
                }))(e);
                switch (t.packetType) {
                case dt.SR:
                    return yt(e, t);
                case dt.RR:
                    return vt(e, t);
                case dt.SDES:
                    return St(e, t);
                case dt.BYE:
                    return Tt(e, t);
                case dt.APP:
                    return Rt(e, t);
                default:
                    return t
                }
            }
              , pt = (e, t) => ({
                type: O.RTCP,
                data: t,
                channel: e,
                rtcp: ft(t)
            })
              , mt = {
                packetType: 200
            }
              , gt = (e, t, r) => {
                const n = [];
                for (let i = 0; i < e; i++) {
                    const e = r + 24 * i;
                    n.push({
                        syncSource: t.readUInt32BE(e + 0),
                        fractionLost: t.readUInt8(e + 4),
                        cumulativeNumberOfPacketsLost: t.readUIntBE(e + 5, 3),
                        extendedHighestSequenceNumberReceived: t.readUInt32BE(e + 8),
                        interarrivalJitter: t.readUInt32BE(e + 12),
                        lastSRTimestamp: t.readUInt32BE(e + 16),
                        delaySinceLastSR: t.readUInt32BE(e + 20)
                    })
                }
                return n
            }
              , yt = (e, t) => lt(lt({}, t), {}, {
                syncSource: e.readUInt32BE(4),
                ntpMost: e.readUInt32BE(8),
                ntpLeast: e.readUInt32BE(12),
                rtpTimestamp: e.readUInt32BE(16),
                sendersPacketCount: e.readUInt32BE(20),
                sendersOctetCount: e.readUInt32BE(24),
                reports: gt(t.count, e, 28)
            })
              , bt = e => e.packetType === dt.SR
              , vt = (e, t) => lt(lt({}, t), {}, {
                syncSource: e.readUInt32BE(4),
                reports: gt(t.count, e, 8)
            })
              , wt = e => e.packetType === dt.RR;
            let _t;
            !function(e) {
                e[e.CNAME = 1] = "CNAME",
                e[e.NAME = 2] = "NAME",
                e[e.EMAIL = 3] = "EMAIL",
                e[e.PHONE = 4] = "PHONE",
                e[e.LOC = 5] = "LOC",
                e[e.TOOL = 6] = "TOOL",
                e[e.NOTE = 7] = "NOTE",
                e[e.PRIV = 8] = "PRIV"
            }(_t || (_t = {}));
            const St = (e, t) => {
                const r = [];
                let n = 4;
                for (let i = 0; i < t.count; i++) {
                    const t = {
                        source: e.readUInt32BE(n),
                        items: []
                    };
                    for (n += 4; ; ) {
                        const r = e.readUInt8(n++);
                        if (0 === r) {
                            n % 4 != 0 && (n += 4 - n % 4);
                            break
                        }
                        const i = e.readUInt8(n++);
                        if (r === _t.PRIV) {
                            const r = e.readUInt8(n)
                              , prefix = e.toString("utf8", n + 1, n + 1 + r)
                              , o = e.toString("utf8", n + 1 + r, n + i);
                            t.items.push([_t.PRIV, prefix, o])
                        } else {
                            const o = e.toString("utf8", n, n + i);
                            t.items.push([r, o])
                        }
                        n += i
                    }
                    r.push(t)
                }
                return lt(lt({}, t), {}, {
                    syncSource: e.readUInt32BE(4),
                    sourceDescriptions: r
                })
            }
              , Et = e => e.packetType === dt.SDES
              , Tt = (e, t) => {
                const r = [];
                for (let n = 0; n < t.count; n++)
                    r.push(e.readUInt32BE(4 + 4 * n));
                let n;
                if (t.length > t.count) {
                    const r = 4 + 4 * t.count
                      , i = e.readUInt8(r);
                    n = e.toString("utf-8", r + 1, r + 1 + i)
                }
                return lt(lt({}, t), {}, {
                    sources: r,
                    reason: n
                })
            }
              , xt = e => e.packetType === dt.BYE
              , Rt = (e, t) => lt(lt({}, t), {}, {
                subtype: t.count,
                source: e.readUInt32BE(4),
                name: e.toString("ascii", 8, 12),
                data: e.slice(12)
            })
              , Ct = e => e.packetType === dt.APP;
            function Ot(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            const Pt = F()("msl:mse");
            class It extends d {
                constructor(e) {
                    if (void 0 === e)
                        throw new Error("video element argument missing");
                    let t, r;
                    const n = new o.Writable({
                        objectMode: !0,
                        write: (i, o, s) => {
                            if (i.type === O.ISOM)
                                if (this._done = s,
                                void 0 !== i.tracks || void 0 !== i.mime) {
                                    Pt("ISOM with tracks received: ", i);
                                    const o = i.tracks ?? []
                                      , s = o.map((e => e.mime)).filter((e => e))
                                      , a = 0 !== s.length ? s.join(", ") : "avc1.640029, mp4a.40.2"
                                      , c = i.mime ?? `video/mp4; codecs="${a}"`;
                                    if (!MediaSource.isTypeSupported(c))
                                        return void n.emit("error", `unsupported media type: ${c}`);
                                    if (this._lastCheckpointTime = 0,
                                    t)
                                        try {
                                            t.endOfStream()
                                        } catch (e) {}
                                    Pt("create new mse, new mime: ", c),
                                    t = new MediaSource,
                                    e.src = window.URL.createObjectURL(t);
                                    const u = () => {
                                        if (void 0 !== t) {
                                            window.URL.revokeObjectURL(e.src),
                                            t.removeEventListener("sourceopen", u),
                                            this.onSourceOpen && this.onSourceOpen(t, o),
                                            r = this.addSourceBuffer(e, t, c),
                                            r.onerror = e => {
                                                console.error("error on SourceBuffer: ", e),
                                                n.emit("error")
                                            }
                                            ;
                                            try {
                                                r.appendBuffer(i.data)
                                            } catch (e) {
                                                Pt("failed to append to SourceBuffer: ", e, i)
                                            }
                                        } else
                                            n.emit("error", "no MediaSource instance")
                                    }
                                    ;
                                    t.addEventListener("sourceopen", u)
                                } else {
                                    this._lastCheckpointTime = void 0 !== i.checkpointTime ? i.checkpointTime : this._lastCheckpointTime;
                                    try {
                                        var a;
                                        null === (a = r) || void 0 === a || a.appendBuffer(i.data)
                                    } catch (e) {
                                        Pt("failed to append to SourceBuffer: ", e, i)
                                    }
                                }
                            else if (i.type === O.RTCP) {
                                var c;
                                if (xt(i.rtcp))
                                    "open" === (null === (c = t) || void 0 === c ? void 0 : c.readyState) && t.endOfStream();
                                s()
                            } else
                                s()
                        }
                    });
                    n.on("finish", ( () => {
                        console.warn("incoming stream finished: end stream"),
                        t && "open" === t.readyState && t.endOfStream()
                    }
                    )),
                    n.on("error", (e => {
                        var n;
                        (console.error("error on incoming stream: ", e),
                        r && r.updating) ? r.addEventListener("updateend", ( () => {
                            var e;
                            "open" === (null === (e = t) || void 0 === e ? void 0 : e.readyState) && t.endOfStream()
                        }
                        )) : "open" === (null === (n = t) || void 0 === n ? void 0 : n.readyState) && t.endOfStream()
                    }
                    ));
                    const i = new o.Readable({
                        objectMode: !0,
                        read: function() {}
                    });
                    i.on("error", ( () => {
                        console.warn("outgoing stream broke somewhere")
                    }
                    )),
                    super(n, i),
                    Ot(this, "_videoEl", void 0),
                    Ot(this, "_done", void 0),
                    Ot(this, "_lastCheckpointTime", void 0),
                    Ot(this, "onSourceOpen", void 0),
                    this._videoEl = e,
                    this._lastCheckpointTime = 0
                }
                addSourceBuffer(e, t, r) {
                    const n = t.addSourceBuffer(r);
                    let i = 0;
                    return n.addEventListener("updateend", ( () => {
                        if (++i,
                        i > 100 && n.buffered.length) {
                            i = 0;
                            const t = n.buffered.length - 1
                              , r = n.buffered.start(t)
                              , o = Math.min(e.currentTime, this._lastCheckpointTime) - 10;
                            try {
                                if (o > r)
                                    return void n.remove(r, o)
                            } catch (e) {
                                console.warn(e)
                            }
                        }
                        this._done && this._done()
                    }
                    )),
                    n
                }
                get currentTime() {
                    return this._videoEl.currentTime
                }
                async play() {
                    return await this._videoEl.play()
                }
                pause() {
                    return this._videoEl.pause()
                }
            }
            var kt = r(8764).Buffer;
            class Bt extends h {
                constructor() {
                    let e, t = [];
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(r, n, i) {
                            if (r.type === O.SDP) {
                                let t;
                                for (const e of r.sdp.media)
                                    "application" === e.type && e.rtpmap && "VND.ONVIF.METADATA" === e.rtpmap.encodingName && (t = e);
                                t && t.rtpmap && (e = Number(t.rtpmap.payloadType)),
                                i(void 0, r)
                            } else if (r.type === O.RTP && w(r.data) === e) {
                                if (t.push(C(r.data)),
                                v(r.data) && t.length > 0) {
                                    return i(void 0, {
                                        timestamp: S(r.data),
                                        ntpTimestamp: r.ntpTimestamp,
                                        payloadType: w(r.data),
                                        data: kt.concat(t),
                                        type: O.XML
                                    }),
                                    void (t = [])
                                }
                                i()
                            } else
                                i(void 0, r)
                        }
                    }))
                }
            }
            var Lt = r(8764).Buffer;
            function At(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    r.push.apply(r, n)
                }
                return r
            }
            function Ut(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? At(Object(r), !0).forEach((function(t) {
                        jt(e, t, r[t])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : At(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }
                    ))
                }
                return e
            }
            function jt(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Mt extends h {
                constructor() {
                    const e = F()("msl:sdp-updater");
                    let t, r = !1, n = 35, i = 0, s = 0, a = 0;
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(o, c, u) {
                            if (o.type === O.SDP) {
                                let r = o.sdp.media.find((e => "video" === e.type));
                                if (r && (r.rtpmap && (n = r.rtpmap.payloadType),
                                r.rtpmap && "JPEG" !== r.rtpmap.encodingName && !r.fmtp)) {
                                    e("adding dummy fmtp block"),
                                    r = Ut(Ut({}, r), {}, {
                                        fmtp: {
                                            format: "35",
                                            parameters: {
                                                "packetization-mode": 1,
                                                "profile-level-id": "4d402a",
                                                "sprop-parameter-sets": "Z01AKo2NYDwBE/LgLcBDQECA,aO44gA=="
                                            }
                                        }
                                    });
                                    const t = o.sdp.media.findIndex((e => "video" === e.type));
                                    t >= 0 && (o.sdp.media[t] = r)
                                }
                                t = o.sdp,
                                e("fixed SDP: %o", t)
                            } else if (o.type === O.H264Ext) {
                                if (o.nalType === H.SPS) {
                                    const n = t.media.find((e => "video" === e.type));
                                    if (n && n.fmtp) {
                                        const i = n.fmtp.parameters["sprop-parameter-sets"].split(",")[0]
                                          , s = Xe(o.data);
                                        i !== s && (n.fmtp.parameters["sprop-parameter-sets"] = n.fmtp.parameters["sprop-parameter-sets"].replace(/^.*,/, s + ","),
                                        n.fmtp.parameters["profile-level-id"] = Lt.from(o.data.slice(1, 4)).toString("hex"),
                                        e("new SPS received %o -> %o, forward as SDP %o: ", Lt.from(o.data).toString("hex"), new et(o.data.buffer).parse(), t),
                                        r = !0)
                                    }
                                } else if (o.nalType === H.PPS) {
                                    const n = t.media.find((e => "video" === e.type));
                                    if (n && n.fmtp) {
                                        const i = n.fmtp.parameters["sprop-parameter-sets"].split(",")[1]
                                          , s = Xe(o.data);
                                        if (i !== s || r)
                                            return r = !1,
                                            n.fmtp.parameters["sprop-parameter-sets"] = n.fmtp.parameters["sprop-parameter-sets"].replace(/,.*$/, "," + s),
                                            e("new PPS received %o, forward as SDP %o", Lt.from(o.data).toString("hex"), t),
                                            void u(void 0, {
                                                type: O.SDP,
                                                sdp: t
                                            })
                                    }
                                }
                            } else if (o.type === O.H264 && o.payloadType === n && (0 === s && (s = o.ntpTimestamp || 0),
                            0 === i && (i = o.timestamp || 0),
                            s > 0 && i > 0)) {
                                let r = (o.ntpTimestamp || 0) - s;
                                (o.ntpTimestamp || 0) > 0 && (r = (o.ntpTimestamp || 0) - s,
                                s = o.ntpTimestamp || 0);
                                const n = o.timestamp - i;
                                0 === a && (a = Math.abs(n || 0));
                                const c = (n + a) / 2;
                                i = o.timestamp,
                                n < 0 && e("negative rtp timestamp: %d (diff: %d, last: %d, avg: %d), ntp: %d (diff: %d)", o.timestamp, n, a, c, o.ntpTimestamp, r),
                                n < -5 * a || c > 5 * a ? (e("rtp timestamp jump detected, resend SDP (diff: %d, last diff: %d)...", c, a),
                                a = 0,
                                i = 0,
                                s = 0,
                                this.push({
                                    type: O.SDP,
                                    sdp: t
                                })) : a = c
                            }
                            u(void 0, o)
                        }
                    }))
                }
            }
            var Dt = r(8764).Buffer;
            class Nt {
                constructor(e) {
                    var t, r, n;
                    n = void 0,
                    (r = "_buffer")in (t = this) ? Object.defineProperty(t, r, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[r] = n,
                    this._buffer = e
                }
                parse() {
                    this.cleanByteArray();
                    const e = new DataView(this._buffer);
                    let t = 19;
                    const r = new Map;
                    for (; t < e.buffer.byteLength - 4; ) {
                        const n = {
                            tag: 0,
                            length: 0,
                            data: Dt.from([])
                        };
                        n.tag = e.getUint16(t),
                        t += 2,
                        n.length = e.getUint16(t),
                        t += 2,
                        n.data = e.buffer.slice(t, t + n.length),
                        t += n.length,
                        this.parseTag(n),
                        r.set(n.tag, n)
                    }
                    return r
                }
                parseTag(e) {
                    switch (e.tag) {
                    case 133:
                        const t = new DataView(e.data);
                        e.parsed = {
                            tagname: "roi_pos_info",
                            tl: {
                                x: t.getUint16(0),
                                y: t.getUint16(2)
                            },
                            br: {
                                x: t.getUint16(4),
                                y: t.getUint16(6)
                            }
                        },
                        e.data.byteLength >= 16 && (e.parsed.deltatime = t.getInt32(8),
                        e.parsed.maxdeltatime = t.getInt32(12))
                    }
                }
                cleanByteArray() {
                    const e = [];
                    let t = 0;
                    const r = new Uint8Array(this._buffer);
                    for (let n = 0; n < r.byteLength; n++)
                        n > 1 && 3 === r[n] && 0 === t || (e.push(r[n]),
                        t = (t << 8) + r[n] & 65535);
                    this._buffer = new Uint8Array(e).buffer
                }
            }
            class Ft extends h {
                constructor(e, t) {
                    const r = F()("msl:stream-info");
                    let n = 0
                      , i = 0;
                    const s = {
                        video: null,
                        audio: null,
                        meta: null,
                        sei: null,
                        kbit_sec: 0
                    };
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(o, a, c) {
                            let u = !1;
                            if (o.type === O.SDP) {
                                const e = JSON.parse(JSON.stringify(s))
                                  , t = o.sdp.media.find((e => "video" === e.type));
                                if (t) {
                                    if (s.video = {},
                                    t.fmtp) {
                                        if (t.fmtp.parameters["sprop-parameter-sets"]) {
                                            const e = t.fmtp.parameters["sprop-parameter-sets"].split(",").map(Je)
                                              , r = new et(e[0].buffer).parse();
                                            s.video.width = r.width,
                                            s.video.height = r.height
                                        }
                                        !e.video || e.video.width === s.video.width && e.video.height === s.video.height || (r("videoresolution changed, forcing event: %o", s.video),
                                        u = !0)
                                    }
                                    t.codec ? (s.video.codec = {},
                                    s.video.codec.coding = t.codec.coding,
                                    s.video.codec.level = t.codec.level,
                                    s.video.codec.profile = t.codec.profile) : t.rtpmap && (s.video.codec = {},
                                    s.video.codec.coding = t.rtpmap.encodingName)
                                }
                                const n = o.sdp.media.find((e => "audio" === e.type));
                                n && (n.codec ? (s.audio = {
                                    codec: {}
                                },
                                s.audio.codec.channels = n.codec.channels,
                                s.audio.codec.coding = n.codec.coding,
                                s.audio.codec.samplingrate = n.codec.samplingRate) : n.rtpmap && (s.audio = {
                                    codec: {}
                                },
                                s.audio.codec.coding = n.rtpmap.encodingName));
                                const i = o.sdp.media.find((e => "application" === e.type));
                                i && i.rtpmap && (s.meta = {},
                                s.meta.encoding = i.rtpmap.encodingName)
                            } else if (o.type === O.JPEG)
                                o.framesize && (s.video || (s.video = {}),
                                s.video.width || (u = !0),
                                s.video.width = o.framesize.width,
                                s.video.height = o.framesize.height);
                            else if (o.type === O.H264Ext && o.nalType === H.SEI) {
                                const e = new Nt(o.data.buffer).parse();
                                s.sei = e,
                                t && t(e)
                            }
                            o.data && (i += o.data.length);
                            const l = (new Date).getTime() - n;
                            (l > 2e3 || u || 0 === n) && (s.kbit_sec = 0 === n ? 0 : i / l * 8,
                            n = (new Date).getTime(),
                            u = !1,
                            i = 0,
                            e && e(s)),
                            c(void 0, o)
                        }
                    }))
                }
            }
            var qt = r(8764).Buffer;
            const Ht = e => e.match(/^m=/)
              , $t = (e, t) => {
                const r = t.indexOf(e);
                return r < 0 ? [t.slice(0)] : [t.slice(0, r), t.slice(r + 1)]
            }
              , Wt = {
                fmtp: e => {
                    const [t,r] = $t(" ", e);
                    {
                        const e = r.trim().split(";")
                          , n = {};
                        return e.forEach((e => {
                            const [t,r] = $t("=", e)
                              , i = t.trim().toLowerCase();
                            "" !== i && (n[i] = r.trim())
                        }
                        )),
                        {
                            format: t,
                            parameters: n
                        }
                    }
                }
                ,
                framerate: Number,
                rtpmap: e => {
                    const [t,r] = $t(" ", e)
                      , [n,i,o] = r.toUpperCase().split("/");
                    return void 0 === o ? {
                        payloadType: Number(t),
                        encodingName: n,
                        clockrate: Number(i)
                    } : {
                        payloadType: Number(t),
                        encodingName: n,
                        clockrate: Number(i),
                        encodingParameters: o
                    }
                }
                ,
                transform: e => e.split(";").map((e => e.split(",").map(Number))),
                "x-sensor-transform": e => e.split(";").map((e => e.split(",").map(Number))),
                framesize: e => e.split(" ")[1].split("-").map(Number)
            }
              , zt = e => {
                const prefix = e.slice(0, 1)
                  , body = e.slice(2);
                switch (prefix) {
                case "v":
                    return {
                        version: body
                    };
                case "o":
                    const [e,t,r,n,i,o] = body.split(" ");
                    return {
                        origin: {
                            addrType: i,
                            netType: n,
                            sessionId: t,
                            sessionVersion: r,
                            unicastAddress: o,
                            username: e
                        }
                    };
                case "s":
                    return {
                        sessionName: body
                    };
                case "i":
                    return {
                        sessionInformation: body
                    };
                case "u":
                    return {
                        uri: body
                    };
                case "e":
                    return {
                        email: body
                    };
                case "p":
                    return {
                        phone: body
                    };
                case "c":
                    const [s,a,c] = body.split(" ");
                    return {
                        connectionData: {
                            addrType: a,
                            connectionAddress: c,
                            netType: s
                        }
                    };
                case "b":
                    const [u,l] = body.split(":");
                    return {
                        bwtype: u,
                        bandwidth: l
                    };
                case "t":
                    const [h,d] = body.split(" ").map(Number);
                    return {
                        time: {
                            startTime: h,
                            stopTime: d
                        }
                    };
                case "r":
                    const [f,p,...m] = body.split(" ").map(Number);
                    return {
                        repeatTimes: {
                            repeatInterval: f,
                            activeDuration: p,
                            offsets: m
                        }
                    };
                case "z":
                case "k":
                    return;
                case "a":
                    return (body => {
                        const [e,t] = $t(":", body);
                        return void 0 === t ? {
                            [e]: !0
                        } : void 0 !== Wt[e] ? {
                            [e]: Wt[e](t)
                        } : {
                            [e]: t
                        }
                    }
                    )(body);
                case "m":
                    const [g,y,b,v] = body.split(" ");
                    return {
                        type: g,
                        port: Number(y),
                        protocol: b,
                        fmt: Number(v)
                    }
                }
            }
              , Vt = e => {
                const t = e.indexOf("\nm=");
                return function(e, t) {
                    let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    const n = `\n${t}`;
                    r = e.indexOf(n, r);
                    let i = 0;
                    const o = [];
                    for (; r >= 0; )
                        i = e.indexOf("\n", r + n.length),
                        o.push(e.toString("ascii", r + n.length, i).trim()),
                        r = e.indexOf(n, i);
                    return o
                }(e, "a=control:", t)
            }
              , Gt = e => {
                const t = e.toString("ascii").split("\n").map((e => e.trim()))
                  , r = {
                    session: {},
                    media: []
                };
                let n = 0
                  , i = r.session;
                for (const e of t)
                    Ht(e) && (r.media[n] = {},
                    i = r.media[n],
                    ++n),
                    i = Object.assign(i, zt(e));
                return r
            }
              , Yt = e => ({
                type: O.SDP,
                data: e,
                sdp: Gt(e)
            })
              , Jt = (e, t) => {
                const r = `\n${t.toLowerCase()}: `
                  , n = e.toString().toLowerCase().indexOf(r);
                if (n >= 0) {
                    const t = e.indexOf("\n", n + r.length);
                    return e.toString("ascii", n + r.length, t).trim()
                }
                return null
            }
              , Kt = e => {
                const t = Jt(e, "CSeq");
                return null !== t ? Number(t) : null
            }
              , Xt = e => {
                const t = Jt(e, "Session");
                return t ? t.split(";")[0] : null
            }
              , Zt = e => {
                const t = Jt(e, "Session");
                if (null === t)
                    return null;
                const r = "timeout="
                  , n = t.toLowerCase().indexOf(r);
                if (-1 !== n) {
                    let e = t.substring(n + r.length);
                    e = e.split(";")[0];
                    const i = parseInt(e);
                    return isNaN(i) ? 60 : i
                }
                return 60
            }
              , Qt = e => Number(e.toString("ascii", 9, 12))
              , er = e => Jt(e, "Content-Base")
              , tr = e => Jt(e, "Content-Location")
              , rr = e => {
                const t = Jt(e, "Connection");
                return null !== t && "close" === t.toLowerCase()
            }
              , nr = e => {
                const t = Jt(e, "Range");
                if (null !== t)
                    return t.split("=")[1].split("-")
            }
              , ir = e => {
                const t = ["\n\n", "\r\r", "\r\n\r\n"].map((t => {
                    const r = e.indexOf(t);
                    return -1 !== r ? r + t.length : r
                }
                )).filter((e => -1 !== e));
                return t.length > 0 ? t.reduce(( (e, t) => Math.min(e, t))) : -1
            }
            ;
            var or, sr = r(8764).Buffer;
            function ar(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            !function(e) {
                e[e.IDLE = 0] = "IDLE",
                e[e.INTERLEAVED = 1] = "INTERLEAVED",
                e[e.RTSP = 2] = "RTSP"
            }(or || (or = {}));
            class cr {
                constructor() {
                    ar(this, "_chunks", []),
                    ar(this, "_length", 0),
                    ar(this, "_state", or.IDLE),
                    ar(this, "_packet", void 0),
                    this._init()
                }
                _init() {
                    this._chunks = [],
                    this._length = 0,
                    this._state = or.IDLE
                }
                _push(e) {
                    this._chunks.push(e),
                    this._length += e.length
                }
                _parseRtsp() {
                    const e = []
                      , t = sr.concat(this._chunks)
                      , r = ir(t);
                    if (-1 === r)
                        return e;
                    const n = r
                      , i = Jt(t, "Content-Length");
                    if (i && parseInt(i) > t.length - n)
                        return e;
                    if (this._init(),
                    n === t.length || 36 === t[n]) {
                        const r = t.slice(0, n);
                        e.push({
                            type: O.RTSP,
                            data: r
                        });
                        const i = t.slice(n);
                        this._push(i)
                    } else {
                        const r = t
                          , body = t.slice(n);
                        e.push({
                            type: O.RTSP,
                            data: r
                        }),
                        e.push(Yt(body))
                    }
                    return e
                }
                _parseInterleaved() {
                    const e = [];
                    if (this._length < 4)
                        return e;
                    if (this._packet || (this._packet = (e => {
                        const t = sr.alloc(4);
                        let r = 0
                          , n = 0;
                        for (; n < t.length; ) {
                            const i = e[r++]
                              , o = Math.min(i.length, t.length - n);
                            i.copy(t, n, 0, o),
                            n += o
                        }
                        const i = t[1]
                          , o = t.length;
                        return {
                            channel: i,
                            begin: o,
                            end: o + t.readUInt16BE(2)
                        }
                    }
                    )(this._chunks)),
                    this._length < this._packet.end)
                        return e;
                    const t = sr.concat(this._chunks)
                      , r = t.slice(this._packet.begin, this._packet.end)
                      , n = t.slice(this._packet.end)
                      , i = this._packet.channel;
                    if (delete this._packet,
                    this._init(),
                    this._push(n),
                    i % 2 == 0)
                        e.push({
                            type: O.RTP,
                            data: r,
                            channel: i
                        });
                    else {
                        let t = r;
                        do {
                            const r = 4 * t.readUInt16BE(2) + 4;
                            e.push(pt(i, t.slice(0, r))),
                            t = t.slice(r)
                        } while (t.length > 0)
                    }
                    return e
                }
                _setState() {
                    for (; this._chunks.length > 0 && 0 === this._chunks[0].length; )
                        this._chunks.shift();
                    const e = this._chunks[0];
                    if (0 === this._chunks.length)
                        this._state = or.IDLE;
                    else if (36 === e[0])
                        this._state = or.INTERLEAVED;
                    else {
                        if ("RTSP" !== e.toString("ascii", 0, 4))
                            throw new Error(`Unknown chunk of length ${e.length}`);
                        this._state = or.RTSP
                    }
                }
                parse(e) {
                    this._push(e),
                    this._state === or.IDLE && this._setState();
                    let t = []
                      , r = !1;
                    for (; !r; ) {
                        let e = [];
                        switch (this._state) {
                        case or.IDLE:
                            break;
                        case or.INTERLEAVED:
                            e = this._parseInterleaved();
                            break;
                        case or.RTSP:
                            e = this._parseRtsp();
                            break;
                        default:
                            throw new Error("internal error: unknown state")
                        }
                        e.length > 0 ? t = t.concat(e) : r = !0,
                        this._setState()
                    }
                    return t
                }
            }
            class ur extends h {
                constructor() {
                    const e = new cr
                      , t = new o.Transform({
                        objectMode: !0,
                        transform: function(r, n, i) {
                            if (r.type === O.RAW)
                                try {
                                    e.parse(r.data).forEach((e => t.push(e))),
                                    i()
                                } catch (e) {
                                    i(e)
                                }
                            else
                                i(void 0, r)
                        }
                    })
                      , r = new o.Transform({
                        objectMode: !0,
                        transform: function(e, t, r) {
                            if (e.type === O.RTSP) {
                                const t = (e => {
                                    if (!e.method || !e.uri)
                                        throw new Error("message needs to contain a method and a uri");
                                    const t = e.protocol || "RTSP/1.0"
                                      , r = e.headers || {}
                                      , n = [`${e.method} ${e.uri} ${t}`, Object.entries(r).map((e => {
                                        let[t,r] = e;
                                        return t + ": " + r
                                    }
                                    )).join("\r\n"), "\r\n"].join("\r\n");
                                    return F()("msl:rtsp:outgoing")(n),
                                    qt.from(n)
                                }
                                )(e);
                                r(void 0, {
                                    type: O.RAW,
                                    data: t
                                })
                            } else
                                r(void 0, e)
                        }
                    });
                    super(t, r)
                }
            }
            const lr = (e, t) => {
                let r;
                if (void 0 !== t) {
                    if ("object" != typeof t)
                        throw new Error("merge expects override to be an object!");
                    r = Object.keys(t).reduce(( (e, r) => (void 0 !== t[r] && (e[r] = t[r]),
                    e)), {})
                }
                return Object.assign({}, e, r)
            }
              , hr = Date.UTC(1900, 0, 1);
            function dr(e, t) {
                return hr + 1e3 * (e + t / 4294967296)
            }
            var fr, pr = r(8764).Buffer;
            function mr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            let gr;
            !function(e) {
                e.IDLE = "idle",
                e.PLAYING = "playing",
                e.PAUSED = "paused"
            }(fr || (fr = {})),
            function(e) {
                e.OPTIONS = "OPTIONS",
                e.DESCRIBE = "DESCRIBE",
                e.SETUP = "SETUP",
                e.PLAY = "PLAY",
                e.PAUSE = "PAUSE",
                e.TEARDOWN = "TEARDOWN"
            }(gr || (gr = {}));
            class yr extends Error {
                constructor(e, t) {
                    super(e),
                    mr(this, "code", void 0),
                    this.name = "RTSPResponseError",
                    this.code = t
                }
            }
            class br extends h {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    const {uri: t, headers: r, defaultHeaders: n} = lr(function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "undefined" == typeof window ? "" : window.location.hostname
                          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                        return {
                            uri: t.length > 0 ? `rtsp://${e}/axis-media/media.amp?${t.join("&")}` : `rtsp://${e}/axis-media/media.amp`
                        }
                    }(e.hostname, e.parameters), e)
                      , i = new o.Transform({
                        objectMode: !0,
                        transform: (e, t, r) => {
                            e.type === O.RTSP ? (this._onRtsp(e),
                            r()) : e.type === O.RTCP ? (this._onRtcp(e),
                            this.onRtcp && this.onRtcp(e.rtcp),
                            r(void 0, e)) : e.type === O.RTP ? (this._onRtp(e),
                            r(void 0, e)) : e.type === O.SDP ? (this._onSdp(e),
                            this.onSdp && this.onSdp(e.sdp),
                            r(void 0, e)) : r(void 0, e)
                        }
                    });
                    i.on("end", ( () => {
                        F()("msl:rtsp:incoming")("end event received"),
                        this._outgoingClosed = !0
                    }
                    )),
                    super(i),
                    mr(this, "uri", void 0),
                    mr(this, "headers", void 0),
                    mr(this, "defaultHeaders", void 0),
                    mr(this, "t0", void 0),
                    mr(this, "n0", void 0),
                    mr(this, "clockrates", void 0),
                    mr(this, "startTime", void 0),
                    mr(this, "onRtcp", void 0),
                    mr(this, "onSdp", void 0),
                    mr(this, "onError", void 0),
                    mr(this, "onPlay", void 0),
                    mr(this, "retry", void 0),
                    mr(this, "_outgoingClosed", void 0),
                    mr(this, "_sequence", void 0),
                    mr(this, "_callStack", void 0),
                    mr(this, "_callHistory", void 0),
                    mr(this, "_state", void 0),
                    mr(this, "_waiting", void 0),
                    mr(this, "_contentBase", void 0),
                    mr(this, "_contentLocation", void 0),
                    mr(this, "_sessionId", void 0),
                    mr(this, "_sessionControlURL", void 0),
                    mr(this, "_renewSessionInterval", void 0),
                    this._outgoingClosed = !1,
                    this._reset(),
                    this.update(t, r, n),
                    this._sessionControlURL = this._controlURL()
                }
                update(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    if (void 0 === e)
                        throw new Error("You must supply an uri when creating a RtspSessionComponent");
                    this.uri = e,
                    this.defaultHeaders = r,
                    this.headers = Object.assign({
                        [gr.OPTIONS]: {},
                        [gr.PLAY]: {},
                        [gr.SETUP]: {
                            Blocksize: "64000"
                        },
                        [gr.DESCRIBE]: {
                            Accept: "application/sdp"
                        },
                        [gr.PAUSE]: {}
                    }, t)
                }
                _reset() {
                    this._sequence = 1,
                    this.retry = () => console.error("No request sent, can't retry"),
                    this._callStack = [],
                    this._callHistory = [],
                    this._state = fr.IDLE,
                    this._waiting = !1,
                    this._contentBase = null,
                    this._sessionId = null,
                    null !== this._renewSessionInterval && clearInterval(this._renewSessionInterval),
                    this._renewSessionInterval = null,
                    this.t0 = void 0,
                    this.n0 = void 0,
                    this.clockrates = void 0
                }
                _controlURL(e) {
                    if (void 0 !== e && /^[^:]+:\/\//.test(e))
                        return e;
                    const t = this._contentBase ?? this._contentLocation ?? this.uri;
                    if (null == t)
                        throw new Error("relative or missing control attribute but no base URL available");
                    return void 0 === e || "*" === e ? t : new URL(e,t).href
                }
                _onRtsp(e) {
                    this._waiting = !1;
                    const t = Qt(e.data)
                      , r = rr(e.data)
                      , n = Kt(e.data);
                    if (null === n)
                        throw new Error("rtsp: expected sequence number");
                    if (void 0 === this._callHistory)
                        throw new Error("rtsp: internal error");
                    const i = this._callHistory[n - 1];
                    if (F()("msl:rtsp:incoming")(`${e.data}`),
                    !this._sessionId && !r) {
                        this._sessionId = Xt(e.data);
                        const t = Zt(e.data);
                        null !== t && (null !== this._renewSessionInterval && clearInterval(this._renewSessionInterval),
                        this._renewSessionInterval = setInterval(( () => {
                            this._enqueue({
                                method: gr.OPTIONS
                            }),
                            this._dequeue()
                        }
                        ), 1e3 * Math.max(5, t - 5)))
                    }
                    this._contentBase || (this._contentBase = er(e.data)),
                    this._contentLocation || (this._contentLocation = tr(e.data)),
                    t >= 400 && this.onError && this.onError(new yr(e.data.toString("ascii"),t)),
                    i === gr.PLAY && this.onPlay && this.onPlay(nr(e.data)),
                    r && (F()("msl:rtsp:incoming")(`RTSP Session ${this._sessionId} ended with statusCode: ${t}`),
                    this._sessionId = null),
                    this._dequeue()
                }
                _onRtcp(e) {
                    if (void 0 === this.t0 || void 0 === this.n0)
                        throw new Error("rtsp: internal error");
                    if (bt(e.rtcp)) {
                        const t = e.channel - 1;
                        this.t0[t] = e.rtcp.rtpTimestamp,
                        this.n0[t] = dr(e.rtcp.ntpMost, e.rtcp.ntpLeast)
                    }
                }
                _onRtp(e) {
                    if (void 0 === this.t0 || void 0 === this.n0 || void 0 === this.clockrates)
                        throw new Error("rtsp: internal error");
                    const t = e.channel
                      , r = this.t0[t]
                      , n = this.n0[t];
                    if (void 0 !== r && void 0 !== n) {
                        const i = this.clockrates[t]
                          , o = S(e.data) - r | 0;
                        e.ntpTimestamp = o / i * 1e3 + n
                    }
                }
                _onSdp(e) {
                    this.n0 = {},
                    this.t0 = {},
                    this.clockrates = {},
                    this._sessionControlURL = this._controlURL(e.sdp.session.control),
                    e.sdp.media.forEach(( (e, t) => {
                        if (void 0 === e.rtpmap)
                            return;
                        const {clockrate: r} = e.rtpmap
                          , n = 2 * t
                          , i = n + 1
                          , o = void 0 === e.control ? this._sessionControlURL : this._controlURL(e.control);
                        this._enqueue({
                            method: gr.SETUP,
                            headers: {
                                Transport: "RTP/AVP/TCP;unicast;interleaved=" + n + "-" + i
                            },
                            uri: o
                        }),
                        void 0 !== this.clockrates && (this.clockrates[n] = r)
                    }
                    )),
                    this._state === fr.PLAYING && this._enqueue({
                        method: gr.PLAY,
                        headers: {
                            Range: `npt=${this.startTime || 0}-`
                        },
                        uri: this._sessionControlURL
                    }),
                    this._dequeue()
                }
                play() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    if (this._state === fr.IDLE)
                        this.startTime = Number(e) || 0,
                        this._enqueue({
                            method: gr.OPTIONS
                        }),
                        this._enqueue({
                            method: gr.DESCRIBE
                        });
                    else if (this._state === fr.PAUSED) {
                        if (null === this._sessionId || void 0 === this._sessionId)
                            throw new Error("rtsp: internal error");
                        this._enqueue({
                            method: gr.PLAY,
                            headers: {
                                Session: this._sessionId
                            },
                            uri: this._sessionControlURL
                        })
                    }
                    this._state = fr.PLAYING,
                    this._dequeue()
                }
                pause() {
                    this._enqueue({
                        method: gr.PAUSE
                    }),
                    this._state = fr.PAUSED,
                    this._dequeue()
                }
                stop() {
                    this._sessionId ? this._enqueue({
                        method: gr.TEARDOWN
                    }) : this._callStack = [],
                    this._state = fr.IDLE,
                    null !== this._renewSessionInterval && (clearInterval(this._renewSessionInterval),
                    this._renewSessionInterval = null),
                    this._dequeue()
                }
                send(e) {
                    const {method: t, headers: r, uri: n} = e;
                    if (void 0 === t)
                        throw new Error("missing method when send request");
                    if (this._waiting = !0,
                    this.retry = this.send.bind(this, e),
                    void 0 === this._sequence || void 0 === this.headers || void 0 === this._callHistory)
                        throw new Error("rtsp: internal error");
                    const i = Object.assign({
                        type: O.RTSP,
                        uri: n || this._sessionControlURL,
                        data: pr.alloc(0)
                    }, {
                        method: t,
                        headers: r
                    }, {
                        headers: Object.assign({
                            CSeq: this._sequence++
                        }, this.defaultHeaders, this.headers[t], r)
                    });
                    this._sessionId && (i.headers.Session = this._sessionId),
                    this._callHistory.push(t),
                    this._outgoingClosed ? F()("msl:rtsp:outgoing")(`Unable to send ${t}, connection closed`) : this.outgoing.push(i)
                }
                _enqueue(e) {
                    if (void 0 === this._callStack)
                        throw new Error("rtsp: internal error");
                    this._callStack.push(e)
                }
                _dequeue() {
                    if (void 0 === this._callStack)
                        throw new Error("rtsp: internal error");
                    if (!this._waiting && this._callStack.length > 0) {
                        const e = this._callStack.shift();
                        void 0 !== e && this.send(e)
                    }
                }
            }
            const vr = function() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : window.location.host
                  , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : window.location.protocol;
                const r = "https:" === t ? "wss:" : "ws:";
                return {
                    uri: `${r}//${e}/rtsp-over-websocket`,
                    tokenUri: `${t}//${e}/axis-cgi/rtspwssession.cgi`,
                    protocol: "binary",
                    timeout: 10007
                }
            };
            var wr = r(8764).Buffer;
            class _r extends l {
                constructor(e) {
                    if (void 0 === e)
                        throw new Error("socket argument missing");
                    const t = new o.Readable({
                        objectMode: !0,
                        read: function() {}
                    });
                    e.onmessage = r => {
                        const n = wr.from(r.data);
                        t.push({
                            data: n,
                            type: O.RAW
                        }) || e.readyState === WebSocket.OPEN && (F()("msl:websocket:incoming")("downstream frozen"),
                        e.close())
                    }
                    ,
                    t.on("error", (t => {
                        console.warn("closing socket due to incoming error", t),
                        e.close()
                    }
                    ));
                    const r = new o.Writable({
                        objectMode: !0,
                        write: function(t, r, n) {
                            try {
                                e.send(t.data)
                            } catch (e) {
                                console.warn("message lost during send:", t)
                            }
                            n()
                        }
                    });
                    var n, i, s;
                    r.on("error", (e => {
                        console.warn("error during websocket send, ignoring:", e)
                    }
                    )),
                    r.on("finish", ( () => {
                        F()("msl:websocket:outgoing")("finish"),
                        e.readyState !== WebSocket.CLOSED && e.close()
                    }
                    )),
                    e.onclose = e => {
                        F()("msl:websocket:close")(`${e.code}`),
                        1001 === e.code && this.onServerClose && this.onServerClose(),
                        t.push(null),
                        r.end()
                    }
                    ,
                    super(t, r),
                    s = void 0,
                    (i = "onServerClose")in (n = this) ? Object.defineProperty(n, i, {
                        value: s,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : n[i] = s
                }
                static async open(e) {
                    return await async function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        const {uri: t, tokenUri: r, protocol: n, timeout: i} = lr(vr(e.host, e.scheme), e);
                        if (void 0 === t)
                            throw new Error("ws: internal error");
                        return await new Promise(( (e, o) => {
                            try {
                                const s = new WebSocket(t,n)
                                  , a = setTimeout(( () => {
                                    clearTimeout(a),
                                    s.readyState === WebSocket.CONNECTING && (s.onerror = null,
                                    o(new Error("websocket connection timed out")))
                                }
                                ), i);
                                s.binaryType = "arraybuffer",
                                s.onerror = i => {
                                    clearTimeout(a);
                                    const s = new XMLHttpRequest;
                                    s.addEventListener("load", (function() {
                                        if (this.status >= 400)
                                            return console.warn("failed to load token", this.status, this.responseText),
                                            void o(i);
                                        const r = this.responseText.trim()
                                          , s = new WebSocket(`${t}?rtspwssession=${r}`,n);
                                        s.binaryType = "arraybuffer",
                                        s.onerror = e => {
                                            o(e)
                                        }
                                        ,
                                        s.onopen = () => e(s)
                                    }
                                    )),
                                    s.addEventListener("error", (e => {
                                        console.warn("failed to get token"),
                                        o(e)
                                    }
                                    )),
                                    s.addEventListener("abort", ( () => o(i))),
                                    s.open("GET", `${r}?${Date.now()}`);
                                    try {
                                        s.send()
                                    } catch (e) {
                                        o(i)
                                    }
                                }
                                ,
                                s.onopen = () => {
                                    clearTimeout(a),
                                    e(s)
                                }
                            } catch (e) {
                                o(e)
                            }
                        }
                        ))
                    }(e).then((e => new _r(e)))
                }
            }
            function Sr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Er {
                constructor() {
                    Sr(this, "firstComponent", void 0),
                    Sr(this, "lastComponent", void 0),
                    Sr(this, "_set", void 0);
                    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                        t[r] = arguments[r];
                    const [n,...i] = t;
                    this._set = new Set(t),
                    this.firstComponent = n,
                    this.lastComponent = i.reduce(( (e, t) => e.connect(t)), n)
                }
                init() {
                    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                        t[r] = arguments[r];
                    const [n,...i] = t;
                    this._set = new Set(t),
                    this.firstComponent = n,
                    this.lastComponent = i.reduce(( (e, t) => e.connect(t)), n)
                }
                insertAfter(e, t) {
                    if (!this._set.has(e))
                        throw new Error("insertion point not part of pipeline");
                    if (this._set.has(t))
                        throw new Error("new component already in the pipeline");
                    const r = e.next;
                    return null === r ? (e.connect(t),
                    this.lastComponent = t) : (e.disconnect(),
                    e.connect(t).connect(r)),
                    this._set.add(t),
                    this
                }
                insertBefore(e, t) {
                    if (!this._set.has(e))
                        throw new Error("insertion point not part of pipeline");
                    if (this._set.has(t))
                        throw new Error("new component already in the pipeline");
                    const r = e.prev;
                    return null === r ? (t.connect(e),
                    this.firstComponent = t) : (r.disconnect(),
                    r.connect(t).connect(e)),
                    this._set.add(t),
                    this
                }
                remove(e) {
                    if (!this._set.has(e))
                        throw new Error("component not part of pipeline");
                    const t = e.prev
                      , r = e.next;
                    if (null === t && null === r)
                        throw new Error("cannot remove last component");
                    if (null === t && null !== r)
                        e.disconnect(),
                        this.firstComponent = r;
                    else if (null !== t && null === r)
                        t.disconnect(),
                        this.lastComponent = t;
                    else if (null !== t && null !== r) {
                        t.disconnect();
                        e.disconnect(),
                        t.connect(r)
                    }
                    return this._set.delete(e),
                    this
                }
                append() {
                    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                        t[r] = arguments[r];
                    return t.forEach((e => {
                        this.insertAfter(this.lastComponent, e)
                    }
                    )),
                    this
                }
                prepend() {
                    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                        t[r] = arguments[r];
                    return t.forEach((e => {
                        this.insertBefore(this.firstComponent, e)
                    }
                    )),
                    this
                }
            }
            function Tr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class xr extends Er {
                constructor(e) {
                    const t = new ur
                      , r = new br(e);
                    r.onSdp = e => {
                        this.onSdp && this.onSdp(e)
                    }
                    ,
                    r.onPlay = e => {
                        this.onPlay && this.onPlay(e)
                    }
                    ,
                    super(t, r),
                    Tr(this, "onSdp", void 0),
                    Tr(this, "onPlay", void 0),
                    Tr(this, "rtsp", void 0),
                    this.rtsp = r
                }
            }
            function Rr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Cr extends xr {
                constructor(e) {
                    super(e),
                    Rr(this, "onSync", void 0),
                    Rr(this, "_mp4Muxer", void 0);
                    const t = new J
                      , r = new I
                      , n = new ct;
                    n.onSync = e => {
                        this.onSync && this.onSync(e)
                    }
                    ,
                    this.append(t, r, n),
                    this._mp4Muxer = n
                }
                get bitrate() {
                    return this._mp4Muxer.bitrate
                }
                get framerate() {
                    return this._mp4Muxer.framerate
                }
            }
            class Or extends xr {
                constructor(e) {
                    super(e);
                    const t = new xe;
                    this.append(t)
                }
            }
            var Pr = r(4758);
            function Ir(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class kr {
                constructor(e, t, r) {
                    var n = this;
                    Ir(this, "realm", void 0),
                    Ir(this, "nonce", void 0),
                    Ir(this, "opaque", void 0),
                    Ir(this, "algorithm", void 0),
                    Ir(this, "qop", void 0),
                    Ir(this, "username", void 0),
                    Ir(this, "ha1Base", void 0),
                    Ir(this, "count", void 0),
                    Ir(this, "nc", ( () => (++this.count,
                    this.count.toString(16).padStart(8, "0")))),
                    Ir(this, "cnonce", ( () => new Array(4).fill(0).map(( () => Math.floor(256 * Math.random()))).map((e => e.toString(16))).join(""))),
                    Ir(this, "ha1", (e => {
                        let t = this.ha1Base;
                        return "md5-sess" === this.algorithm && (t = (new Pr.V).appendStr(`${t}:${this.nonce}:${e}`).end().toString()),
                        t
                    }
                    )),
                    Ir(this, "ha2", (function(e, t) {
                        let body = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ""
                          , r = (new Pr.V).appendStr(`${e}:${t}`).end().toString();
                        if ("md5-sess" === n.algorithm) {
                            const n = (new Pr.V).appendStr(body).end().toString();
                            r = (new Pr.V).appendStr(`${e}:${t}:${n}`).end().toString()
                        }
                        return r
                    }
                    )),
                    Ir(this, "authorization", (function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "GET"
                          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                          , body = arguments.length > 2 ? arguments[2] : void 0;
                        const r = n.nc()
                          , i = n.cnonce()
                          , o = n.ha1(i)
                          , s = n.ha2(e, t, body)
                          , a = void 0 === n.qop ? (new Pr.V).appendStr(`${o}:${n.nonce}:${s}`).end().toString() : (new Pr.V).appendStr(`${o}:${n.nonce}:${r}:${i}:${n.qop}:${s}`).end().toString()
                          , c = [];
                        return c.push(`username="${n.username}"`),
                        c.push(`realm="${n.realm}"`),
                        c.push(`nonce="${n.nonce}"`),
                        c.push(`uri="${t}"`),
                        void 0 !== n.qop && (c.push(`qop=${n.qop}`),
                        c.push(`nc=${r}`),
                        c.push(`cnonce="${i}"`)),
                        c.push(`response="${a}"`),
                        void 0 !== n.opaque && c.push(`opaque="${n.opaque}"`),
                        `Digest ${c.join(", ")}`
                    }
                    ));
                    const i = e.get("realm");
                    if (void 0 === i)
                        throw new Error("no realm in digest challenge");
                    this.realm = i,
                    this.ha1Base = (new Pr.V).appendStr(`${t}:${i}:${r}`).end().toString();
                    const o = e.get("nonce");
                    if (void 0 === o)
                        throw new Error("no nonce in digest challenge");
                    this.nonce = o,
                    this.opaque = e.get("opaque");
                    const s = e.get("algorithm");
                    void 0 !== s ? "md5" === s ? this.algorithm = "md5" : "md5-sess" === s && (this.algorithm = "md5-sess") : this.algorithm = "md5";
                    const a = e.get("qop");
                    if (void 0 !== a) {
                        const e = a.split(",").map((e => e.trim()));
                        e.some((e => "auth" === e)) ? this.qop = "auth" : e.some((e => "auth-int" === e)) && (this.qop = "auth-int")
                    }
                    this.count = 0,
                    this.username = t
                }
            }
            var Br = r(8764).Buffer;
            const Lr = {
                username: "root",
                password: "pass"
            };
            class Ar extends h {
                constructor() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    const {username: t, password: r} = lr(Lr, e);
                    if (void 0 === t || void 0 === r)
                        throw new Error("need username and password");
                    let n, i;
                    const o = P((function(e, t, r) {
                        e.type === O.RTSP && (n = e,
                        i && e.headers && (e.headers.Authorization = i)),
                        r(void 0, e)
                    }
                    ));
                    super(P((function(e, s, a) {
                        if (e.type === O.RTSP && 401 === Qt(e.data)) {
                            const s = e.data.toString().split("\n").find((e => /WWW-Auth/i.test(e)));
                            if (void 0 === s)
                                throw new Error("cannot find WWW-Authenticate header");
                            const c = (e => {
                                const [,t,...r] = e.split(" ")
                                  , n = []
                                  , i = /\s*([^=]+)="([^"]*)",?/gm;
                                let o;
                                do {
                                    if (o = i.exec(r.join(" ")),
                                    null !== o) {
                                        const [,e,t] = o;
                                        n.push([e, t])
                                    }
                                } while (null !== o);
                                const s = new Map(n);
                                return {
                                    type: t.toLowerCase(),
                                    params: s
                                }
                            }
                            )(s);
                            if ("basic" === c.type)
                                i = "Basic " + Br.from(t + ":" + r).toString("base64");
                            else {
                                if ("digest" !== c.type)
                                    return;
                                {
                                    const e = new kr(c.params,t,r);
                                    i = e.authorization(n.method, n.uri)
                                }
                            }
                            o.write(n, ( () => a()))
                        } else
                            a(void 0, e)
                    }
                    )), o)
                }
            }
            function Ur(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class jr extends Or {
                constructor(e) {
                    const {ws: t, rtsp: r, mediaElement: n, auth: i} = e;
                    if (super(r),
                    Ur(this, "onCanplay", void 0),
                    Ur(this, "onSync", void 0),
                    Ur(this, "onServerClose", void 0),
                    Ur(this, "ready", void 0),
                    Ur(this, "_src", void 0),
                    Ur(this, "_sink", void 0),
                    i) {
                        const e = new Ar(i);
                        this.insertBefore(this.rtsp, e)
                    }
                    const o = new D(n);
                    o.onCanplay = () => {
                        o.play(),
                        this.onCanplay && this.onCanplay()
                    }
                    ,
                    o.onSync = e => {
                        this.onSync && this.onSync(e)
                    }
                    ,
                    this.append(o),
                    this._sink = o;
                    const s = _r.open(t);
                    this.ready = s.then((e => {
                        e.onServerClose = () => {
                            this.onServerClose && this.onServerClose()
                        }
                        ,
                        this.prepend(e),
                        this._src = e
                    }
                    ))
                }
                close() {
                    this._src && this._src.outgoing.end()
                }
                get currentTime() {
                    return this._sink.currentTime
                }
                play() {
                    return this._sink.play()
                }
                pause() {
                    return this._sink.pause()
                }
                get bitrate() {
                    return this._sink.bitrate
                }
                get framerate() {
                    return this._sink.framerate
                }
            }
            function Mr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Dr extends Cr {
                constructor(e) {
                    const {ws: t, rtsp: r, mediaElement: n, auth: i} = e;
                    if (super(r),
                    Mr(this, "onSourceOpen", void 0),
                    Mr(this, "onServerClose", void 0),
                    Mr(this, "ready", void 0),
                    Mr(this, "tracks", void 0),
                    Mr(this, "_src", void 0),
                    Mr(this, "_sink", void 0),
                    i) {
                        const e = new Ar(i);
                        this.insertBefore(this.rtsp, e)
                    }
                    const o = new It(n);
                    o.onSourceOpen = (e, t) => {
                        this.tracks = t,
                        this.onSourceOpen && this.onSourceOpen(e, t)
                    }
                    ,
                    this.append(o),
                    this._sink = o;
                    const s = _r.open(t);
                    this.ready = s.then((e => {
                        e.onServerClose = () => {
                            this.onServerClose && this.onServerClose()
                        }
                        ,
                        this.prepend(e),
                        this._src = e
                    }
                    ))
                }
                close() {
                    this._src && this._src.outgoing.end()
                }
                get currentTime() {
                    return this._sink.currentTime
                }
                async play() {
                    return await this._sink.play()
                }
                pause() {
                    return this._sink.pause()
                }
            }
            class Nr extends jr {
                constructor(e) {
                    const {metadataHandler: t, streaminfoHandler: r, seiinfoHandler: n, socketClosedHandler: i} = e
                      , o = F()("msl:bosch-pipeline");
                    super(e),
                    this.onServerClose = () => {
                        o("socket close received"),
                        i && i()
                    }
                    ;
                    const s = new B(98);
                    this.insertAfter(this.rtsp, s);
                    const a = h.fromHandlers((e => {
                        console.log("hello")
                        console.log(e)
                        t && e.type === O.ELEMENTARY && 98 === e.payloadType && t(e)
                    }
                    ), void 0);
                    this.insertAfter(s, a);
                    const c = this.findComponent(xe);
                    null != c && c instanceof h && (this.insertBefore(c, new Mt),
                    (r || n) && this.insertAfter(c, new Ft(r,n)))
                }
                findComponent(e) {
                    let t = this.firstComponent;
                    if (t instanceof e)
                        return t;
                    for (; null != t.next; )
                        if (t = t.next,
                        t instanceof e)
                            return t;
                    return null
                }
            }
            function Fr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class qr {
                constructor(e) {
                    Fr(this, "dbg", void 0),
                    Fr(this, "cnv", void 0),
                    Fr(this, "ctx", void 0),
                    Fr(this, "frames", []),
                    Fr(this, "empty", !0),
                    Fr(this, "framecnt", 0),
                    Fr(this, "curFps", 0),
                    Fr(this, "timeoffset", 0),
                    Fr(this, "running", !0),
                    Fr(this, "handle", void 0),
                    this.dbg = F()("msl:renderer"),
                    this.dbg("constructor, el: ", e),
                    this.cnv = e,
                    this.ctx = this.cnv.getContext("2d", {
                        alpha: !1
                    }),
                    this.ctx.font = "30px Arial",
                    this.ctx.fillStyle = "#ffffff",
                    this.ctx.imageSmoothingEnabled = !1,
                    this.running = !0,
                    this.handle = setInterval(( () => {
                        this.curFps = this.framecnt,
                        this.framecnt = 0,
                        this.dbg("fps: ", this.curFps)
                    }
                    ), 1e3)
                }
                processFrame(e) {
                    if (0 !== e.timestamp) {
                        if (this.frames.length > 2)
                            return this.dbg("drop frame"),
                            void e.close();
                        this.frames.push(e),
                        this.empty && setTimeout((async () => {
                            await this.renderFrame()
                        }
                        ), 0)
                    }
                }
                async renderFrame() {
                    if (0 === this.frames.length)
                        return this.empty = !0,
                        await Promise.resolve();
                    const e = this.frames.shift();
                    this.empty = !1;
                    const t = this.getTimeToWait(e.timestamp);
                    t > 0 && await this.sleep(t),
                    console.time("draw frame"),
                    this.ctx.drawImage(e, 0, 0, this.cnv.width, this.cnv.height),
                    console.timeEnd("draw frame"),
                    e.close(),
                    this.framecnt++,
                    setTimeout((async () => {
                        await this.renderFrame()
                    }
                    ), 0)
                }
                getTimeToWait(e) {
                    if (0 === this.timeoffset)
                        return this.timeoffset = e - performance.now(),
                        0;
                    {
                        const t = e - this.timeoffset - performance.now();
                        return this.dbg(t + "/" + this.frames.length),
                        Math.max(0, t)
                    }
                }
                async sleep(e) {
                    await new Promise((t => {
                        setTimeout(t, e)
                    }
                    ))
                }
                stop() {
                    this.running = !1,
                    clearInterval(this.handle)
                }
            }
            var Hr = r(8764).Buffer;
            class $r extends h {
                constructor(e) {
                    const t = F()("msl:wcd");
                    let r;
                    const n = new qr(e)
                      , i = {
                        output: e => {
                            n.processFrame(e)
                        }
                        ,
                        error: e => {
                            console.log("error: ", e)
                        }
                    };
                    var s, a, c;
                    super(new o.Transform({
                        objectMode: !0,
                        transform: function(e, n, o) {
                            if (e.type === O.SDP) {
                                t("sdp: ", e);
                                const n = e.sdp.media.find((e => "video" === e.type && void 0 !== e.rtpmap && "H264" === e.rtpmap.encodingName));
                                if (n) {
                                    const e = "avc1." + n.fmtp.parameters["profile-level-id"]
                                      , o = n.fmtp.parameters["sprop-parameter-sets"].split(",").map(Je)
                                      , s = o.slice(0, 1)
                                      , a = o.slice(1)
                                      , c = new et(s[0].buffer).parse();
                                    let u = Hr.alloc(8);
                                    u.writeUInt8(1, 0),
                                    u.writeUInt8(s[0][1], 1),
                                    u.writeUInt8(s[0][2], 2),
                                    u.writeUInt8(s[0][3], 3),
                                    u.writeUInt8(255, 4),
                                    u.writeUInt8(225, 5),
                                    u.writeUInt16BE(s[0].length, 6);
                                    let l = u.length + s[0].length + 3;
                                    u = Hr.concat([u, Hr.from(s[0])], l),
                                    u.writeUInt8(1, u.length - 3),
                                    u.writeUInt16BE(a[0].length, u.length - 2),
                                    l = u.length + a[0].length,
                                    u = Hr.concat([u, Hr.from(a[0])], l);
                                    const h = {
                                        codec: e,
                                        description: u,
                                        codedWidth: c.width,
                                        codedHeight: c.height
                                    };
                                    t("config: " + JSON.stringify(h)),
                                    r = new window.VideoDecoder(i),
                                    r.configure(h)
                                } else
                                    t("h264 media not found");
                                o()
                            } else if (e.type === O.H264) {
                                if (r)
                                    if (r.decodeQueueSize < 3) {
                                        const t = new window.EncodedVideoChunk({
                                            timestamp: e.ntpTimestamp,
                                            type: e.nalType === H.IDR_PICTURE ? "key" : "delta",
                                            data: e.data
                                        });
                                        r.decode(t)
                                    } else
                                        t("drop packet, videodecoder queue too large");
                                else
                                    t("decoder not initialized");
                                o()
                            } else
                                o()
                        }
                    })),
                    c = void 0,
                    (a = "_renderer")in (s = this) ? Object.defineProperty(s, a, {
                        value: c,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : s[a] = c,
                    this._renderer = n
                }
                stop() {
                    this._renderer && this._renderer.stop()
                }
            }
            function Wr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class zr extends xr {
                constructor(e) {
                    const {ws: t, rtsp: r, mediaElement: n, auth: i} = e
                      , o = F()("msl:wcp");
                    if (super(r),
                    Wr(this, "onCanplay", void 0),
                    Wr(this, "onSync", void 0),
                    Wr(this, "onServerClose", void 0),
                    Wr(this, "ready", void 0),
                    Wr(this, "_src", void 0),
                    Wr(this, "_decoder", void 0),
                    i) {
                        const e = new Ar(i);
                        this.insertBefore(this.rtsp, e)
                    }
                    const s = new J
                      , a = new I;
                    this._decoder = new $r(n),
                    this.append(s, a, this._decoder);
                    const c = _r.open(t);
                    this.ready = c.then((e => {
                        o("ready"),
                        e.onServerClose = () => {
                            this.onServerClose && this.onServerClose()
                        }
                        ,
                        this.prepend(e),
                        this._src = e
                    }
                    ))
                }
                close() {
                    this._src && this._src.outgoing.end(),
                    this._decoder.stop()
                }
            }
            class Vr extends Dr {
                constructor(e) {
                    const {metadataHandler: t, streaminfoHandler: r, seiinfoHandler: n, socketClosedHandler: i} = e
                      , o = F()("msl:bosch-pipeline");
                    super(e),
                    this.onServerClose = () => {
                        o("socket close received"),
                        i && i()
                    }
                    ;
                    const s = new B(98);
                    this.insertAfter(this.rtsp, s);
                    const a = h.fromHandlers((e => {
                        t && e.type === O.ELEMENTARY && 98 === e.payloadType && t(e)
                    }
                    ), void 0);
                    this.insertAfter(s, a);
                    const c = this.findComponent(ct);
                    null != c && c instanceof h && (this.insertBefore(c, new Mt),
                    (r || n) && this.insertBefore(c, new Ft(r,n)))
                }
                findComponent(e) {
                    let t = this.firstComponent;
                    if (t instanceof e)
                        return t;
                    for (; null != t.next; )
                        if (t = t.next,
                        t instanceof e)
                            return t;
                    return null
                }
                listComponents() {
                    console.log("--- component list ---");
                    let e = this.firstComponent;
                    for (console.log(e.constructor.name); null != e.next; )
                        e = e.next,
                        console.log(e.constructor.name);
                    console.log("--- component list ---")
                }
            }
            class Gr extends Dr {
                constructor(e) {
                    const {metadataHandler: t} = e;
                    super(e);
                    const r = new Bt;
                    this.insertAfter(this.rtsp, r);
                    const n = h.fromHandlers((e => {
                        e.type === O.XML && t(e)
                    }
                    ), void 0);
                    this.insertAfter(r, n)
                }
            }
            function Yr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            const Jr = {
                parameters: ["audio=0", "video=0", "event=on", "ptz=all"]
            };
            class Kr extends xr {
                constructor(e) {
                    const {ws: t, rtsp: r, metadataHandler: n} = e;
                    super(Object.assign({}, Jr, r)),
                    Yr(this, "onServerClose", void 0),
                    Yr(this, "ready", void 0),
                    Yr(this, "_src", void 0);
                    const i = new Bt;
                    this.append(i);
                    const o = d.fromHandler((e => {
                        e.type === O.XML && n(e)
                    }
                    ));
                    this.append(o);
                    const s = _r.open(t);
                    this.ready = s.then((e => {
                        e.onServerClose = () => {
                            this.onServerClose && this.onServerClose()
                        }
                        ,
                        this.prepend(e),
                        this._src = e
                    }
                    ))
                }
                close() {
                    this._src && this._src.outgoing.end()
                }
            }
            function Xr(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class Zr extends xr {
                constructor(e) {
                    const {ws: t, rtsp: r, auth: n} = e;
                    if (super(r),
                    Xr(this, "onServerClose", void 0),
                    Xr(this, "ready", void 0),
                    Xr(this, "_src", void 0),
                    n) {
                        const e = new Ar(n);
                        this.insertBefore(this.rtsp, e)
                    }
                    const i = _r.open(t);
                    this.ready = i.then((e => {
                        e.onServerClose = () => {
                            this.onServerClose && this.onServerClose()
                        }
                        ,
                        this.prepend(e),
                        this._src = e
                    }
                    ))
                }
                close() {
                    this._src && this._src.outgoing.end()
                }
                get sdp() {
                    return this.ready.then((async () => {
                        const e = new Promise((e => {
                            this.rtsp.onSdp = e
                        }
                        ));
                        return this.rtsp.send({
                            method: gr.DESCRIBE
                        }),
                        this.rtsp.send({
                            method: gr.TEARDOWN
                        }),
                        await e
                    }
                    ))
                }
            }
            var Qr = r(8764).Buffer;
            function en(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    r.push.apply(r, n)
                }
                return r
            }
            function tn(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            const rn = F()("msl:http-mp4");
            class nn extends l {
                constructor(e) {
                    const {uri: t, options: r} = e
                      , n = new o.Readable({
                        objectMode: !0,
                        read: function() {}
                    });
                    n.on("error", (e => {
                        console.warn("closing socket due to incoming error", e),
                        this._reader && this._reader.cancel()
                    }
                    )),
                    super(n),
                    tn(this, "uri", void 0),
                    tn(this, "options", void 0),
                    tn(this, "length", void 0),
                    tn(this, "onHeaders", void 0),
                    tn(this, "onServerClose", void 0),
                    tn(this, "_reader", void 0),
                    tn(this, "_abortController", void 0),
                    tn(this, "_allDone", void 0),
                    n._read = () => {
                        this._pull()
                    }
                    ,
                    this.uri = t,
                    this.options = r,
                    this._allDone = !1
                }
                play() {
                    if (void 0 === this.uri)
                        throw new Error("cannot start playing when there is no URI");
                    this._abortController = new AbortController,
                    this.length = 0,
                    fetch(this.uri, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var r = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? en(Object(r), !0).forEach((function(t) {
                                tn(e, t, r[t])
                            }
                            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : en(Object(r)).forEach((function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                            }
                            ))
                        }
                        return e
                    }({
                        credentials: "include",
                        signal: this._abortController.signal
                    }, this.options)).then((e => {
                        if (null === e.body)
                            throw new Error("empty response body");
                        const t = e.headers.get("Content-Type");
                        this.incoming.push({
                            data: Qr.alloc(0),
                            type: O.ISOM,
                            mime: t
                        }),
                        this.onHeaders && this.onHeaders(e.headers),
                        this._reader = e.body.getReader(),
                        this._pull()
                    }
                    )).catch((e => {
                        console.error("http-source: fetch failed: ", e)
                    }
                    ))
                }
                abort() {
                    this._reader && this._reader.cancel().catch((e => {
                        console.log("http-source: cancel reader failed: ", e)
                    }
                    )),
                    this._abortController && this._abortController.abort()
                }
                _isClosed() {
                    return this._allDone
                }
                _close() {
                    var e;
                    this._reader = void 0,
                    this._allDone = !0,
                    this.incoming.push(null),
                    null === (e = this.onServerClose) || void 0 === e || e.call(this)
                }
                _pull() {
                    void 0 !== this._reader && this._reader.read().then((e => {
                        let {done: t, value: r} = e;
                        if (t)
                            return void (this._isClosed() || (rn("fetch completed, total downloaded: ", this.length, " bytes"),
                            this._close()));
                        if (void 0 === r)
                            throw new Error("expected value to be defined");
                        if (void 0 === this.length)
                            throw new Error("expected length to be defined");
                        this.length += r.length;
                        const n = Qr.from(r);
                        this.incoming.push({
                            data: n,
                            type: O.ISOM
                        }) ? this._pull() : rn("downstream back pressure: pausing read")
                    }
                    )).catch((e => {
                        rn("http-source: read failed: ", e),
                        this._isClosed() || this._close()
                    }
                    ))
                }
            }
            function on(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r,
                e
            }
            class sn extends Er {
                constructor(e) {
                    const {http: t, mediaElement: r} = e
                      , n = new nn(t)
                      , i = new It(r);
                    n.onHeaders = e => {
                        this.onHeaders && this.onHeaders(e)
                    }
                    ,
                    n.onServerClose = () => {
                        var e;
                        return null === (e = this.onServerClose) || void 0 === e ? void 0 : e.call(this)
                    }
                    ,
                    super(n, i),
                    on(this, "onHeaders", void 0),
                    on(this, "onServerClose", void 0),
                    on(this, "http", void 0),
                    on(this, "_src", void 0),
                    on(this, "_sink", void 0),
                    this._src = n,
                    this._sink = i,
                    this.http = n
                }
                close() {
                    this._src && this._src.abort()
                }
                get currentTime() {
                    return this._sink.currentTime
                }
                async play() {
                    return await this._sink.play()
                }
                pause() {
                    return this._sink.pause()
                }
            }
            const an = function(e) {
                let {maxRetries: t, errors: r} = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    maxRetries: 20,
                    errors: [503]
                }
                  , n = 0;
                const i = e.onError;
                e.onError = o => {
                    null == i || i(o),
                    r.includes(o.code) && ((n += 1) > t ? console.log("retry, too many", n, t) : setTimeout(( () => {
                        var t;
                        return null === (t = e.retry) || void 0 === t ? void 0 : t.call(e)
                    }
                    ), 100 * n))
                }
            }
        }
        )(),
        n
    }
    )()
}
));
